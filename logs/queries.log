2020-09-09 18:20:17 Debug: duration=14 rows=5 SHOW TABLES FROM `cakecmstuto_v0_2_1`
2020-09-09 18:20:17 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 18:20:17 Debug: duration=2 rows=0 SHOW INDEXES FROM `products`
2020-09-09 18:20:17 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 18:20:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 18:20:17 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 18:20:17 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 18:20:17 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 18:20:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 18:20:17 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-09 18:20:17 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-09 18:20:17 Debug: duration=12 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-09 18:20:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-09 18:20:17 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-09 18:20:17 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-09 18:20:17 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-09 18:20:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-09 18:20:17 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 18:20:17 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 18:20:17 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 18:20:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 18:20:19 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 18:20:19 Debug: duration=3 rows=0 SHOW INDEXES FROM `products`
2020-09-09 18:20:19 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 18:20:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 18:20:19 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 18:20:19 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 18:20:19 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 18:20:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 18:20:44 Debug: duration=2 rows=5 SHOW TABLES FROM `cakecmstuto_v0_2_1`
2020-09-09 18:20:44 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 18:20:44 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 18:20:44 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 18:20:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 18:20:44 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-09 18:20:44 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-09 18:20:44 Debug: duration=12 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-09 18:20:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-09 18:20:44 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 18:20:44 Debug: duration=2 rows=0 SHOW INDEXES FROM `products`
2020-09-09 18:20:44 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 18:20:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 18:20:44 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-09 18:20:44 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-09 18:20:44 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-09 18:20:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-09 18:20:44 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 18:20:44 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 18:20:44 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 18:20:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 18:21:03 Debug: duration=2 rows=5 SHOW TABLES FROM `cakecmstuto_v0_2_1`
2020-09-09 18:21:03 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 18:21:03 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 18:21:03 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 18:21:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 18:21:03 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-09 18:21:03 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-09 18:21:03 Debug: duration=12 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-09 18:21:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-09 18:21:03 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 18:21:03 Debug: duration=2 rows=0 SHOW INDEXES FROM `products`
2020-09-09 18:21:03 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 18:21:03 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 18:21:03 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-09 18:21:03 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-09 18:21:03 Debug: duration=11 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-09 18:21:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-09 18:21:03 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 18:21:03 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 18:21:03 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 18:21:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 18:21:06 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 18:21:06 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 18:21:06 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 18:21:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 19:05:49 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 19:05:49 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 19:05:49 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 19:05:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 19:05:49 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 19:05:49 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 19:05:49 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 19:05:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 19:09:18 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 19:09:18 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 19:09:18 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 19:09:18 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 19:09:18 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 19:09:18 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 19:09:18 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 19:09:18 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 19:09:18 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 19:09:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 19:09:24 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-09 19:09:52 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 19:09:52 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 19:09:52 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 19:09:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 19:09:52 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-09 19:09:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-09 19:37:47 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 19:37:47 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 19:37:47 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 19:37:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 19:37:47 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 19:37:47 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 19:37:47 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 19:37:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 19:37:47 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 19:37:47 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 19:37:49 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 19:40:22 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 19:40:22 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 19:40:22 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 19:40:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 19:40:22 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 19:50:05 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 19:50:05 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 19:50:05 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 19:50:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 19:50:05 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 19:53:06 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 19:53:06 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 19:53:06 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 19:53:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 19:53:06 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 19:53:06 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 19:53:06 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 19:53:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 19:53:06 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-post' LIMIT 1
2020-09-09 19:53:06 Debug: duration=5 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.product_id in ('4')
2020-09-09 19:53:06 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.product_id in ('4')
2020-09-09 19:53:06 Debug: duration=0 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.product_id in ('4')
2020-09-09 19:53:06 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-post' LIMIT 1
2020-09-09 19:53:06 Debug: duration=0 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.product_id in ('4')
2020-09-09 19:53:06 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-post' LIMIT 1
2020-09-09 19:53:06 Debug: duration=0 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.product_id in ('4')
2020-09-09 19:53:06 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-post' LIMIT 1
2020-09-09 19:53:06 Debug: duration=0 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.product_id in ('4')
2020-09-09 19:53:06 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-post' LIMIT 1
2020-09-09 19:53:06 Debug: duration=0 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.product_id in ('4')
2020-09-09 19:54:44 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-post' LIMIT 1
2020-09-09 19:54:45 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (4)
2020-09-09 19:59:03 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 19:59:03 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 19:59:03 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 19:59:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 19:59:03 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 19:59:04 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 19:59:04 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 19:59:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 19:59:04 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-post' LIMIT 1
2020-09-09 19:59:04 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (4)
2020-09-09 20:14:03 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 20:14:03 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 20:14:03 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 20:14:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 20:14:03 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 20:14:03 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 20:14:03 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 20:14:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 20:14:03 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-pos' LIMIT 1
2020-09-09 20:14:03 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 20:15:27 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-pos' LIMIT 1
2020-09-09 20:15:27 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 20:15:33 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) WHERE Products.id = 1 LIMIT 1
2020-09-09 20:15:36 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-pos' LIMIT 1
2020-09-09 20:15:36 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 20:15:50 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 20:16:02 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 20:17:25 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 20:17:25 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-09-09 20:17:25 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 20:17:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 20:17:25 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 20:17:25 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 20:17:25 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 20:17:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 20:17:25 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 20:35:41 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 20:35:41 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 20:35:41 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 20:35:41 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 20:35:41 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 20:35:41 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2020-09-09 20:35:41 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 20:35:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 20:35:41 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 20:35:41 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 20:35:43 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 20:35:43 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 20:35:43 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 20:35:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 20:35:44 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-post'
2020-09-09 20:35:44 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (4)
2020-09-09 20:36:38 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-post' LIMIT 1
2020-09-09 20:36:38 Debug: duration=0 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (4)
2020-09-09 20:36:48 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug > 'first-pos' LIMIT 1
2020-09-09 20:36:48 Debug: duration=0 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 21:25:11 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 21:25:11 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 21:25:11 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 21:25:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 21:25:11 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 21:25:11 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 21:25:11 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 21:25:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 21:25:11 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.id > 1 LIMIT 1
2020-09-09 21:25:11 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (2)
2020-09-09 21:26:29 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-pos' LIMIT 1
2020-09-09 21:26:34 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 21:26:34 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 21:29:19 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 21:29:19 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 21:29:19 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 21:29:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 21:29:20 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 21:29:20 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 21:29:20 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 21:29:20 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 21:29:20 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:30:43 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:30:46 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 21:30:46 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 21:30:48 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:31:17 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:31:46 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 21:31:46 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 21:31:46 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 21:31:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 21:33:40 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 21:33:40 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 21:33:40 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 21:33:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 21:33:40 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:33:47 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 21:33:47 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 21:33:47 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 21:33:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 21:34:09 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:34:16 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:34:22 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:34:25 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 21:34:25 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 21:34:28 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:34:41 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:36:02 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 21:36:02 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 21:36:02 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 21:36:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 21:36:02 Debug: duration=0 rows=0 BEGIN
2020-09-09 21:36:02 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 21:36:02 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 21:36:02 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 21:36:02 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 21:36:02 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM orders Orders WHERE Orders.id = 1 LIMIT 1
2020-09-09 21:36:02 Debug: duration=3 rows=1 INSERT INTO products (order_id, name, product, created, modified) VALUES (1, 'toi', 'ton productaire à first post', '2020-09-09 21:36:02', '2020-09-09 21:36:02')
2020-09-09 21:36:02 Debug: duration=0 rows=0 COMMIT
2020-09-09 21:36:03 Debug: duration=1 rows=2 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-09 21:36:03 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-09 21:37:10 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = '1' LIMIT 1
2020-09-09 21:38:04 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 21:38:04 Debug: duration=4 rows=2 SHOW INDEXES FROM `products`
2020-09-09 21:38:04 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 21:38:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 21:38:04 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 21:38:04 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 21:38:04 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 21:38:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 21:38:04 Debug: duration=1 rows=2 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-09 21:38:04 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-09 21:38:10 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 21:38:10 Debug: duration=1 rows=2 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 21:38:19 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:43:47 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 21:43:47 Debug: duration=6 rows=2 SHOW INDEXES FROM `products`
2020-09-09 21:43:47 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 21:43:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 21:43:47 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 21:43:47 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 21:43:47 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 21:43:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 21:43:47 Debug: duration=1 rows=2 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-09 21:43:47 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-09 21:43:53 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:43:53 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 21:43:53 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 21:43:53 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 21:43:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 21:43:53 Debug: duration=2 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 21:43:53 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 21:44:01 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-09 21:44:01 Debug: duration=0 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (4)
2020-09-09 21:44:04 Debug: duration=0 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:44:05 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 21:44:05 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 21:46:45 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 21:46:45 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 21:46:46 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 21:46:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 21:46:46 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 21:46:46 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 21:46:46 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 21:46:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 21:46:46 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 21:46:46 Debug: duration=1 rows=2 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 21:47:23 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:47:41 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 21:47:41 Debug: duration=0 rows=2 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 21:47:45 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:48:08 Debug: duration=0 rows=0 BEGIN
2020-09-09 21:48:08 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM orders Orders WHERE Orders.id = 1 LIMIT 1
2020-09-09 21:48:08 Debug: duration=1 rows=1 INSERT INTO products (order_id, name, product, created, modified) VALUES (1, 'lui', 'Son productaire sur le first post', '2020-09-09 21:48:08', '2020-09-09 21:48:08')
2020-09-09 21:48:08 Debug: duration=0 rows=0 COMMIT
2020-09-09 21:48:08 Debug: duration=1 rows=3 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-09 21:48:08 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-09 21:48:16 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 21:48:16 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 21:48:16 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 21:48:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 21:48:16 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 21:48:16 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 21:48:25 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-09 21:48:25 Debug: duration=0 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (4)
2020-09-09 21:48:30 Debug: duration=0 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:48:44 Debug: duration=0 rows=0 BEGIN
2020-09-09 21:48:44 Debug: duration=0 rows=1 SELECT 1 AS `existing` FROM orders Orders WHERE Orders.id = 4 LIMIT 1
2020-09-09 21:48:44 Debug: duration=1 rows=1 INSERT INTO products (order_id, name, product, created, modified) VALUES (4, 'nous', 'notre productaire sur ticourt', '2020-09-09 21:48:44', '2020-09-09 21:48:44')
2020-09-09 21:48:44 Debug: duration=0 rows=0 COMMIT
2020-09-09 21:48:45 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-09 21:48:45 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-09 21:55:16 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 21:55:16 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 21:55:16 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 21:55:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 21:55:16 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 21:55:16 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 21:55:16 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 21:55:16 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 21:55:16 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 21:55:16 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 21:55:19 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 21:55:19 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 21:55:19 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 21:55:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 21:55:19 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 21:55:19 Debug: duration=1 rows=3 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 21:55:34 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 21:55:34 Debug: duration=0 rows=3 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 21:55:52 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) WHERE Products.id = 1 LIMIT 1
2020-09-09 21:56:00 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 21:56:35 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) WHERE Products.id = 1 LIMIT 1
2020-09-09 22:02:20 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 22:02:20 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 22:02:20 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 22:02:20 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 22:02:20 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 22:02:20 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 22:02:20 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 22:02:20 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 22:02:20 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) WHERE Products.id = 1 LIMIT 1
2020-09-09 22:02:28 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 22:02:28 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 22:02:28 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 22:02:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 22:02:28 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-09-09 22:02:39 Debug: duration=2 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-09-09 22:02:57 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-09-09 22:03:15 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-09-09 22:03:15 Debug: duration=10 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-09-09 22:03:53 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-09-09 22:03:53 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-09-09 22:04:03 Debug: duration=2 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-09-09 22:04:03 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-09-09 22:04:18 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-09-09 22:04:21 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-09-09 22:04:21 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-09-09 22:04:21 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-09-09 22:04:25 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-09-09 22:04:28 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-09-09 22:04:28 Debug: duration=0 rows=0 BEGIN
2020-09-09 22:04:28 Debug: duration=6 rows=1 UPDATE users SET password = '$2y$10$XQ3e.qF7L3h.RQKQBwGM0urdu4K3m1GDiEeTDbNDVX9jYHIGwUUFu' , modified = '2020-09-09 22:04:28' WHERE id = 1
2020-09-09 22:04:28 Debug: duration=0 rows=0 COMMIT
2020-09-09 22:04:29 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 22:04:29 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 22:04:29 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 22:04:29 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 22:04:29 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-09-09 22:04:29 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-09-09 22:04:32 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-09-09 22:05:23 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-09-09 22:05:23 Debug: duration=0 rows=0 BEGIN
2020-09-09 22:05:23 Debug: duration=2 rows=1 UPDATE users SET password = '$2y$10$iBI.6gNPxKfepjyRSDOcweqT6p6Tkf.ZkNsbIKn9AKkQvjWcvu/42' , modified = '2020-09-09 22:05:23' WHERE id = 1
2020-09-09 22:05:23 Debug: duration=0 rows=0 COMMIT
2020-09-09 22:05:23 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-09-09 22:05:23 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-09-09 22:05:30 Debug: duration=0 rows=0 BEGIN
2020-09-09 22:05:30 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-09-09 22:05:30 Debug: duration=1 rows=1 INSERT INTO users (email, password, created, modified) VALUES ('admin@admin.com', '$2y$10$AQvpqlMoXhHtjad/4RsVyOw9Epw7XVmltfCDavvzICJd1AFIeYVda', '2020-09-09 22:05:30', '2020-09-09 22:05:30')
2020-09-09 22:05:30 Debug: duration=0 rows=0 COMMIT
2020-09-09 22:05:31 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-09-09 22:05:31 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-09-09 22:05:40 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-09-09 22:06:52 Debug: duration=4 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 22:06:52 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 22:06:52 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 22:06:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 22:06:52 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-09-09 22:06:53 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 22:06:53 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 22:06:53 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 22:06:53 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 22:06:53 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 22:06:53 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 22:50:35 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 22:50:35 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 22:50:35 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 22:50:35 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 22:50:35 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 22:50:35 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 22:50:35 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 22:50:35 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 22:50:35 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 22:50:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 22:55:28 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 22:55:28 Debug: duration=5 rows=1 SHOW INDEXES FROM `users`
2020-09-09 22:55:28 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 22:55:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 22:55:28 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-09-09 22:55:29 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 22:55:29 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 22:55:29 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 22:55:29 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 22:55:29 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 22:55:29 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 22:55:43 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-09-09 22:55:43 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 22:55:43 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 22:55:54 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 22:55:54 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-09 22:55:54 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 22:55:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 22:55:54 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-09 22:55:54 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (2)
2020-09-09 22:56:05 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 22:56:45 Debug: duration=0 rows=0 BEGIN
2020-09-09 22:56:45 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM orders Orders WHERE Orders.id = 2 LIMIT 1
2020-09-09 22:56:45 Debug: duration=2 rows=1 INSERT INTO products (order_id, name, product, created, modified) VALUES (2, 'Eux', 'Leur productaire sur le slug', '2020-09-09 22:56:45', '2020-09-09 22:56:45')
2020-09-09 22:56:45 Debug: duration=0 rows=0 COMMIT
2020-09-09 22:56:46 Debug: duration=1 rows=5 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-09 22:56:46 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-09 23:00:24 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 23:00:24 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 23:00:24 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 23:00:24 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 23:00:24 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 23:00:24 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 23:00:24 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 23:00:24 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 23:00:24 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 23:00:24 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 23:00:29 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 23:00:29 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-09-09 23:00:29 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 23:00:29 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 23:00:29 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-09 23:00:29 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (2)
2020-09-09 23:00:34 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 23:01:22 Debug: duration=0 rows=0 BEGIN
2020-09-09 23:01:22 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM orders Orders WHERE Orders.id = 2 LIMIT 1
2020-09-09 23:01:22 Debug: duration=2 rows=1 INSERT INTO products (order_id, name, product, created, modified) VALUES (2, 'en vidéo', 'Redirection vers l''order après un ajout', '2020-09-09 23:01:22', '2020-09-09 23:01:22')
2020-09-09 23:01:22 Debug: duration=0 rows=0 COMMIT
2020-09-09 23:01:23 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = NULL LIMIT 1
2020-09-09 23:01:57 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 23:01:57 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 23:02:07 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-09 23:02:07 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (4)
2020-09-09 23:02:11 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 23:02:41 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 23:02:41 Debug: duration=4 rows=2 SHOW INDEXES FROM `products`
2020-09-09 23:02:41 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 23:02:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 23:02:41 Debug: duration=0 rows=0 BEGIN
2020-09-09 23:02:41 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 23:02:41 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 23:02:41 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 23:02:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 23:02:41 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM orders Orders WHERE Orders.id = 4 LIMIT 1
2020-09-09 23:02:41 Debug: duration=1 rows=1 INSERT INTO products (order_id, name, product, created, modified) VALUES (4, 'en vidéo', 'Ajout et redirection  vers ticourt', '2020-09-09 23:02:41', '2020-09-09 23:02:41')
2020-09-09 23:02:41 Debug: duration=0 rows=0 COMMIT
2020-09-09 23:02:41 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-09 23:02:41 Debug: duration=1 rows=2 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (4)
2020-09-09 23:03:03 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-09 23:03:03 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-09 23:03:03 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-09 23:03:03 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-09 23:03:03 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-09 23:03:03 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-09 23:04:25 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 23:04:25 Debug: duration=1 rows=3 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 23:05:33 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-09 23:05:33 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders`
2020-09-09 23:05:33 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-09 23:05:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-09 23:05:33 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-09 23:05:33 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-09-09 23:05:33 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-09 23:05:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-09 23:05:33 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-09 23:05:58 Debug: duration=0 rows=0 BEGIN
2020-09-09 23:05:58 Debug: duration=0 rows=1 SELECT 1 AS `existing` FROM orders Orders WHERE Orders.id = 1 LIMIT 1
2020-09-09 23:05:58 Debug: duration=2 rows=1 INSERT INTO products (order_id, name, product, created, modified) VALUES (1, 'en vidéo', 'Ajout productaire à first post', '2020-09-09 23:05:58', '2020-09-09 23:05:58')
2020-09-09 23:05:58 Debug: duration=0 rows=0 COMMIT
2020-09-09 23:05:59 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-09 23:05:59 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-09 23:06:11 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-09 23:06:11 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 13:48:12 Debug: duration=37 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 13:48:12 Debug: duration=15 rows=2 SHOW INDEXES FROM `products`
2020-09-13 13:48:13 Debug: duration=25 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 13:48:13 Debug: duration=11 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 13:48:13 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 13:48:13 Debug: duration=6 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 13:48:13 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 13:48:13 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 13:48:13 Debug: duration=20 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 13:48:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 20:49:44 Debug: duration=30 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 20:49:44 Debug: duration=9 rows=2 SHOW INDEXES FROM `products`
2020-09-13 20:49:44 Debug: duration=28 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 20:49:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 20:49:44 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 20:49:44 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 20:49:44 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 20:49:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 20:49:44 Debug: duration=4 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 20:49:45 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 20:55:17 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 20:55:17 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-13 20:55:17 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 20:55:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 20:55:17 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 20:55:17 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 20:55:17 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 20:55:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 20:55:17 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 20:55:17 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 20:56:34 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 20:56:34 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 20:57:30 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 20:57:30 Debug: duration=4 rows=2 SHOW INDEXES FROM `products`
2020-09-13 20:57:30 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 20:57:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 20:57:30 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 20:57:30 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 20:57:30 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 20:57:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 20:57:30 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 20:57:30 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 20:57:33 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 20:57:33 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 20:57:36 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 20:57:36 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 20:57:57 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 20:57:57 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 20:58:01 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 20:58:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 21:00:16 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 21:00:16 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 21:00:16 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 21:00:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 21:00:16 Debug: duration=13 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-13 21:00:16 Debug: duration=8 rows=1 SHOW INDEXES FROM `users`
2020-09-13 21:00:16 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-13 21:00:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-13 21:00:16 Debug: duration=12 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-13 21:00:16 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-13 21:00:21 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-13 21:00:21 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-13 21:02:30 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 21:02:30 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 21:02:30 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 21:02:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 21:02:30 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 21:02:30 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-13 21:02:30 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 21:02:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 21:02:30 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:02:30 Debug: duration=3 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-13 21:12:39 Debug: duration=5 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 21:12:39 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 21:12:39 Debug: duration=23 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 21:12:39 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 21:12:39 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 21:12:39 Debug: duration=4 rows=2 SHOW INDEXES FROM `products`
2020-09-13 21:12:39 Debug: duration=24 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 21:12:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 21:12:39 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:12:39 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-13 21:13:02 Debug: duration=6 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-13 21:13:02 Debug: duration=4 rows=1 SHOW INDEXES FROM `users`
2020-09-13 21:13:02 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-13 21:13:02 Debug: duration=7 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-13 21:13:02 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'cakephp@example.com' LIMIT 1
2020-09-13 21:13:02 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:13:02 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:13:36 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:13:36 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:13:36 Debug: duration=0 rows=0 BEGIN
2020-09-13 21:13:37 Debug: duration=5 rows=1 UPDATE orders SET title = 'Premier order' , body = 'Voici le premier order' , modified = '2020-09-13 21:13:37' WHERE id = 1
2020-09-13 21:13:37 Debug: duration=0 rows=0 COMMIT
2020-09-13 21:13:37 Debug: duration=2 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-13 21:13:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-13 21:13:44 Debug: duration=8 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-13 21:13:44 Debug: duration=27 rows=8 SHOW INDEXES FROM `i18n`
2020-09-13 21:13:44 Debug: duration=25 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-13 21:13:44 Debug: duration=7 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-13 21:13:44 Debug: duration=5 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:13:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:25:41 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 21:25:41 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-13 21:25:41 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 21:25:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 21:25:41 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 21:25:41 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 21:25:41 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 21:25:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 21:25:41 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-13 21:25:41 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-13 21:25:41 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-13 21:25:41 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-13 21:25:41 Debug: duration=3 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:25:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:25:48 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:25:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:26:48 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:26:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:26:54 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:26:54 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-13 21:27:11 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:27:11 Debug: duration=0 rows=0 BEGIN
2020-09-13 21:27:11 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('name','product') AND locale = 'en_US' AND foreign_key = 1 AND model = 'Products')
2020-09-13 21:27:11 Debug: duration=1 rows=1 UPDATE products SET modified = '2020-09-13 21:27:11' WHERE id = 1
2020-09-13 21:27:11 Debug: duration=3 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('en_US', 'Products', 1, 'name', 'Moi fr')
2020-09-13 21:27:11 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('en_US', 'Products', 1, 'product', 'Bravo pour le "premier order"!')
2020-09-13 21:27:11 Debug: duration=0 rows=0 COMMIT
2020-09-13 21:27:11 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:27:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:27:18 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:27:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:27:21 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 21:27:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 21:27:24 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:27:24 Debug: duration=5 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:27:30 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 21:27:30 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 21:27:31 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:27:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:27:35 Debug: duration=5 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-13 21:27:35 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-13 21:27:35 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-13 21:27:35 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-13 21:27:36 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:27:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:27:39 Debug: duration=2 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:27:39 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:27:46 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 21:27:46 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 21:27:46 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 21:27:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 21:27:46 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-13 21:27:46 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-09-13 21:27:46 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-13 21:27:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-13 21:27:46 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:27:46 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:27:55 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:27:55 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:27:55 Debug: duration=0 rows=0 BEGIN
2020-09-13 21:27:55 Debug: duration=1 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title','body') AND locale = 'en_US' AND foreign_key = 1 AND model = 'Orders')
2020-09-13 21:27:55 Debug: duration=1 rows=1 UPDATE orders SET modified = '2020-09-13 21:27:55' WHERE id = 1
2020-09-13 21:27:55 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('en_US', 'Orders', 1, 'title', 'Premier order EN')
2020-09-13 21:27:55 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('en_US', 'Orders', 1, 'body', 'Voici le premier order EN')
2020-09-13 21:27:55 Debug: duration=0 rows=0 COMMIT
2020-09-13 21:27:55 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:27:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:28:01 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-13 21:28:01 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-13 21:28:04 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:28:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:39:57 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 21:39:57 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 21:39:57 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 21:39:57 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 21:39:57 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-13 21:39:57 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-13 21:39:57 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-13 21:39:57 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-13 21:39:57 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:39:57 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:40:19 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:40:19 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:40:19 Debug: duration=0 rows=0 BEGIN
2020-09-13 21:40:19 Debug: duration=1 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title','body') AND locale = 'en_US' AND foreign_key = 1 AND model = 'Orders')
2020-09-13 21:40:19 Debug: duration=2 rows=1 UPDATE orders SET modified = '2020-09-13 21:40:19' WHERE id = 1
2020-09-13 21:40:19 Debug: duration=0 rows=1 UPDATE i18n SET foreign_key = 1 , content = 'Here is the first post' WHERE id = 4
2020-09-13 21:40:19 Debug: duration=0 rows=1 UPDATE i18n SET foreign_key = 1 , content = 'First post' WHERE id = 3
2020-09-13 21:40:19 Debug: duration=0 rows=0 COMMIT
2020-09-13 21:40:20 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-13 21:40:20 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-13 21:40:20 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-13 21:40:20 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-13 21:40:20 Debug: duration=2 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:40:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:40:25 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 21:40:25 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-13 21:40:25 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 21:40:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 21:40:25 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:40:25 Debug: duration=2 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-13 21:40:36 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:40:36 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-13 21:40:45 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:40:45 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-13 21:42:10 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 21:42:10 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 21:42:10 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 21:42:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 21:42:10 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-13 21:42:10 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-09-13 21:42:10 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-13 21:42:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-13 21:42:10 Debug: duration=3 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:42:41 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 21:42:41 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-13 21:42:41 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 21:42:41 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 21:42:41 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:42:41 Debug: duration=2 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-13 21:43:55 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:43:55 Debug: duration=0 rows=0 BEGIN
2020-09-13 21:43:55 Debug: duration=1 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('name','product') AND locale = 'en_US' AND foreign_key = 1 AND model = 'Products')
2020-09-13 21:43:55 Debug: duration=2 rows=1 UPDATE products SET modified = '2020-09-13 21:43:55' WHERE id = 1
2020-09-13 21:43:55 Debug: duration=1 rows=1 UPDATE i18n SET foreign_key = 1 , content = 'Congrats for the first post!' WHERE id = 2
2020-09-13 21:43:55 Debug: duration=1 rows=1 UPDATE i18n SET foreign_key = 1 , content = 'Me' WHERE id = 1
2020-09-13 21:43:55 Debug: duration=0 rows=0 COMMIT
2020-09-13 21:43:56 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:43:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:44:09 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:44:17 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 21:44:17 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 21:44:17 Debug: duration=23 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 21:44:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 21:44:17 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-13 21:44:17 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-13 21:44:17 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-13 21:44:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-13 21:44:17 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-13 21:44:17 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-09-13 21:44:17 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-13 21:44:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-13 21:44:17 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:44:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:44:23 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'en_US' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'en_US' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:44:23 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'en_US' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'en_US' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-13 21:45:41 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 21:45:41 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-13 21:45:41 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 21:45:41 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 21:45:41 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:45:41 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-13 21:45:47 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:45:47 Debug: duration=0 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-13 21:45:51 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:45:51 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-13 21:46:01 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:46:01 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-13 21:46:15 Debug: duration=2 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:46:28 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 21:46:28 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 21:46:28 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 21:46:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 21:46:28 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:46:39 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-13 21:46:39 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-13 21:46:39 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-13 21:46:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-13 21:46:39 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:47:03 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:47:07 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.id = 1 LIMIT 1
2020-09-13 21:47:07 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-13 21:47:31 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.id = 1 LIMIT 1
2020-09-13 21:47:31 Debug: duration=0 rows=0 BEGIN
2020-09-13 21:47:31 Debug: duration=2 rows=1 UPDATE products SET name = 'Me' , product = 'Congrats for the first post! EN' , modified = '2020-09-13 21:47:31' WHERE id = 1
2020-09-13 21:47:31 Debug: duration=0 rows=0 COMMIT
2020-09-13 21:47:31 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 21:47:31 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 21:47:42 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 21:47:42 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-13 21:47:42 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 21:47:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 21:47:42 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:47:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:47:44 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:47:44 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-13 21:48:18 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.id = 1 LIMIT 1
2020-09-13 21:48:18 Debug: duration=0 rows=0 BEGIN
2020-09-13 21:48:18 Debug: duration=1 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('name','product') AND locale = 'fr_CA' AND foreign_key = 1 AND model = 'Products')
2020-09-13 21:48:18 Debug: duration=1 rows=1 UPDATE products SET modified = '2020-09-13 21:48:18' WHERE id = 1
2020-09-13 21:48:18 Debug: duration=1 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Products', 1, 'name', 'Moi fr_CA')
2020-09-13 21:48:18 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Products', 1, 'product', 'Félicitations pour le premier order! fr_CA')
2020-09-13 21:48:18 Debug: duration=0 rows=0 COMMIT
2020-09-13 21:48:18 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:48:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:48:26 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 21:48:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 21:48:29 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 21:48:29 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 21:48:29 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 21:48:29 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 21:48:29 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:48:29 Debug: duration=9 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:49:05 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-13 21:49:05 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-13 21:49:05 Debug: duration=26 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-13 21:49:05 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-13 21:49:05 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-13 21:49:05 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-09-13 21:49:05 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-13 21:49:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-13 21:49:05 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:49:05 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:49:09 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-13 21:49:09 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-13 21:49:12 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:49:12 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:49:38 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:49:38 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:49:38 Debug: duration=0 rows=0 BEGIN
2020-09-13 21:49:39 Debug: duration=1 rows=1 UPDATE orders SET title = 'First post en_US' , body = 'This is the first post! en_US' , modified = '2020-09-13 21:49:39' WHERE id = 1
2020-09-13 21:49:39 Debug: duration=0 rows=0 COMMIT
2020-09-13 21:49:39 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-13 21:49:39 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-13 21:49:46 Debug: duration=2 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:49:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:49:51 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 21:49:51 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-09-13 21:49:51 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 21:49:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 21:49:51 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:49:51 Debug: duration=2 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-13 21:49:54 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:49:54 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:50:20 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:50:20 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:50:20 Debug: duration=0 rows=0 BEGIN
2020-09-13 21:50:20 Debug: duration=1 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title','body') AND locale = 'fr_CA' AND foreign_key = 1 AND model = 'Orders')
2020-09-13 21:50:20 Debug: duration=1 rows=1 UPDATE orders SET modified = '2020-09-13 21:50:20' WHERE id = 1
2020-09-13 21:50:20 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 1, 'title', 'Premier order fr_CA')
2020-09-13 21:50:20 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 1, 'body', 'Voici le premier order fr_CA')
2020-09-13 21:50:20 Debug: duration=0 rows=0 COMMIT
2020-09-13 21:50:21 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:50:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:50:27 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-13 21:50:27 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-13 21:50:30 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-13 21:50:30 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-13 21:50:30 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-13 21:50:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-13 21:50:30 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:50:30 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-13 21:50:33 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:50:33 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-13 21:50:42 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:50:42 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-13 21:51:12 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.id = 2 LIMIT 1
2020-09-13 21:51:12 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-13 21:51:24 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.id = 2 LIMIT 1
2020-09-13 21:51:24 Debug: duration=0 rows=0 BEGIN
2020-09-13 21:51:24 Debug: duration=0 rows=1 UPDATE products SET name = 'you' , product = 'your product' , modified = '2020-09-13 21:51:24' WHERE id = 2
2020-09-13 21:51:24 Debug: duration=0 rows=0 COMMIT
2020-09-13 21:51:24 Debug: duration=1 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 21:51:24 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 21:51:27 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) WHERE Products.id = 2 LIMIT 1
2020-09-13 21:51:33 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-13 21:51:33 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-13 21:51:33 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-13 21:51:33 Debug: duration=11 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-13 21:51:33 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-13 21:51:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-13 21:51:37 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:51:37 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-13 21:51:43 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-13 21:51:43 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-09-13 21:51:43 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-13 21:51:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-13 21:51:43 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:51:43 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-13 21:51:47 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.id = 2 LIMIT 1
2020-09-13 21:51:47 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-13 21:52:03 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-13 21:52:03 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-13 21:52:03 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-13 21:52:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-13 21:52:03 Debug: duration=1 rows=1 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.id = 2 LIMIT 1
2020-09-13 21:52:03 Debug: duration=0 rows=0 BEGIN
2020-09-13 21:52:03 Debug: duration=1 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('name','product') AND locale = 'fr_CA' AND foreign_key = 2 AND model = 'Products')
2020-09-13 21:52:03 Debug: duration=1 rows=1 UPDATE products SET modified = '2020-09-13 21:52:03' WHERE id = 2
2020-09-13 21:52:03 Debug: duration=1 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Products', 2, 'name', 'Toi fr_CA')
2020-09-13 21:52:03 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Products', 2, 'product', 'Ton productaire fr_CA')
2020-09-13 21:52:03 Debug: duration=0 rows=0 COMMIT
2020-09-13 21:52:03 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-13 21:52:03 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-13 21:52:12 Debug: duration=2 rows=8 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-09-13 21:52:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-09-13 21:52:15 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-13 21:52:15 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-13 21:52:18 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:52:18 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-13 21:52:23 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-13 21:52:23 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-27 15:37:02 Debug: duration=36 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 15:37:02 Debug: duration=18 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 15:37:02 Debug: duration=43 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 15:37:03 Debug: duration=5 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 15:37:03 Debug: duration=8 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 15:37:03 Debug: duration=4 rows=1 SHOW INDEXES FROM `users`
2020-09-27 15:37:03 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 15:37:03 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 15:37:03 Debug: duration=8 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 15:37:03 Debug: duration=21 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 15:37:03 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 15:37:03 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 15:37:03 Debug: duration=81 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 15:37:03 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 15:41:10 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 15:41:10 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 15:41:10 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 15:41:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 15:41:11 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 15:41:11 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 15:41:11 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 15:41:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 15:41:11 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 15:41:11 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 15:41:11 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 15:41:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 15:41:11 Debug: duration=2 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 15:41:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 15:42:39 Debug: duration=3 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 15:42:39 Debug: duration=9 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 15:56:13 Debug: duration=3 rows=6 SHOW TABLES FROM `cakecmstuto_v0_2_1`
2020-09-27 15:56:13 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 15:56:13 Debug: duration=10 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 15:56:13 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 15:56:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 15:56:13 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 15:56:13 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 15:56:13 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 15:56:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 15:56:13 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 15:56:13 Debug: duration=11 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 15:56:13 Debug: duration=12 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 15:56:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 15:56:13 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 15:56:13 Debug: duration=9 rows=2 SHOW INDEXES FROM `products`
2020-09-27 15:56:13 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 15:56:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 15:56:13 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 15:56:13 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 15:56:14 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 15:56:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 15:56:14 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 15:56:14 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 15:56:14 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 15:56:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 15:56:14 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 15:56:14 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 15:56:14 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 15:56:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 15:56:14 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 15:56:14 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 15:56:14 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 15:56:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 15:56:58 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 15:56:58 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 15:56:58 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 15:56:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 15:56:58 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'cakephp@example.com' LIMIT 1
2020-09-27 15:56:59 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 15:56:59 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 15:56:59 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 15:56:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:05:18 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:05:18 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:05:18 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:05:18 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:05:18 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 16:05:18 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 16:05:18 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 16:05:18 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 16:05:18 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 16:05:18 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 16:05:18 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 16:05:18 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 16:05:18 Debug: duration=3 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-27 16:05:18 Debug: duration=3 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-27 16:05:36 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-27 16:05:36 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-27 16:05:38 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-27 16:05:38 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-27 16:05:52 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-27 16:05:52 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-27 16:06:40 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-27 16:06:40 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-27 16:06:45 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-27 16:06:45 Debug: duration=0 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-27 16:07:25 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:07:25 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:07:25 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:07:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:07:25 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 16:07:25 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 16:07:25 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 16:07:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 16:07:25 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:07:25 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:09:00 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:09:00 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:09:02 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 16:09:02 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 16:09:02 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 16:09:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 16:09:02 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-27 16:09:02 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (1)
2020-09-27 16:09:28 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:09:28 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:09:28 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:09:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:09:28 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 16:09:28 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 16:09:28 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 16:09:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 16:09:28 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:09:28 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:09:37 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 16:09:37 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 16:09:37 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 16:09:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 16:09:37 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:09:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:09:57 Debug: duration=2 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:09:57 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:10:04 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:10:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:10:08 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:10:08 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:10:11 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:10:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:10:25 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:10:25 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:11:48 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 16:11:48 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 16:11:48 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 16:11:48 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 16:11:48 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'cakephp@example.com' LIMIT 1
2020-09-27 16:11:49 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:11:49 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:11:49 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:11:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:11:49 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-27 16:11:49 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-27 16:16:31 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:16:31 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:16:31 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:16:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:16:31 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-27 16:16:31 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-27 16:20:20 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:20:20 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:20:20 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:20:20 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:20:21 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-27 16:20:21 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-27 16:20:21 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:20:21 Debug: duration=2 rows=1 UPDATE orders SET title = 'Slug''s try' , body = 'To test the Order''s slug' , modified = '2020-09-27 16:20:21' WHERE id = 2
2020-09-27 16:20:21 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:20:21 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 16:20:21 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 16:20:21 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 16:20:21 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 16:20:21 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:20:21 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:20:41 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 16:20:41 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 16:20:41 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 16:20:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 16:20:41 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-27 16:20:41 Debug: duration=1 rows=2 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (2)
2020-09-27 16:20:45 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:20:45 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:20:49 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-27 16:20:49 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-27 16:21:33 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-27 16:21:33 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-27 16:21:33 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:21:33 Debug: duration=1 rows=1 UPDATE orders SET title = 'Longer title' , body = 'Longer title works fine' , modified = '2020-09-27 16:21:33' WHERE id = 4
2020-09-27 16:21:33 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:21:33 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:21:33 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:21:43 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 16:21:43 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 16:21:43 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 16:21:43 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 16:21:43 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:21:43 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:21:47 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-27 16:21:47 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-27 16:22:08 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-27 16:22:08 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'essai-slug' LIMIT 1
2020-09-27 16:22:08 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:22:08 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title','body') AND locale = 'fr_CA' AND foreign_key = 2 AND model = 'Orders')
2020-09-27 16:22:08 Debug: duration=1 rows=1 UPDATE orders SET modified = '2020-09-27 16:22:08' WHERE id = 2
2020-09-27 16:22:08 Debug: duration=1 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 2, 'title', 'Essai de slug')
2020-09-27 16:22:08 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 2, 'body', 'Voici un order pour tester le slug')
2020-09-27 16:22:08 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:22:08 Debug: duration=2 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:22:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:22:13 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-27 16:22:13 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-27 16:22:48 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:22:48 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:22:48 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:22:48 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:22:48 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-27 16:22:48 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-27 16:22:48 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:22:48 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title','body') AND locale = 'fr_CA' AND foreign_key = 4 AND model = 'Orders')
2020-09-27 16:22:48 Debug: duration=3 rows=1 UPDATE orders SET modified = '2020-09-27 16:22:48' WHERE id = 4
2020-09-27 16:22:48 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 4, 'title', 'Titre plus long')
2020-09-27 16:22:48 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 4, 'body', 'Un order plus long est accepté')
2020-09-27 16:22:48 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:22:48 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 16:22:48 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 16:22:48 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 16:22:48 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 16:22:48 Debug: duration=2 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:22:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:23:33 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:23:33 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:24:57 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:24:57 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:24:57 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:24:57 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:27:12 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:27:12 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:27:12 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:27:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:27:16 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 16:27:16 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2020-09-27 16:27:16 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 16:27:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 16:27:16 Debug: duration=2 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:27:16 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:27:49 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-27 16:27:49 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'ticourt-plus-long' LIMIT 1
2020-09-27 16:27:54 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:27:54 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:27:57 Debug: duration=1 rows=3 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:27:57 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:33:41 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:33:41 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:33:41 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:33:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:34:44 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:34:44 Debug: duration=1 rows=1 INSERT INTO orders (user_id, title, slug, body, created, modified) VALUES (1, 'Everything about Wikipedia', 'Everything-about-Wikipedia', 'Everything You Always Wanted to Know About Wikipedia', '2020-09-27 16:34:44', '2020-09-27 16:34:44')
2020-09-27 16:34:44 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:34:44 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 16:34:44 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 16:34:44 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 16:34:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 16:34:44 Debug: duration=1 rows=4 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:34:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:35:23 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:35:23 Debug: duration=0 rows=1 INSERT INTO orders (user_id, title, slug, body, created, modified) VALUES (1, 'Everything about Montmorency', 'Everything-about-Montmorency', 'Everything You Always Wanted to Know About Montmorency College', '2020-09-27 16:35:23', '2020-09-27 16:35:23')
2020-09-27 16:35:23 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:35:23 Debug: duration=1 rows=5 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:35:23 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:35:56 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:35:56 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:35:56 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:35:56 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:35:56 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:35:56 Debug: duration=1 rows=1 INSERT INTO orders (user_id, title, slug, body, created, modified) VALUES (1, 'Everything about CakePHP', 'Everything-about-CakePHP', 'Everything You Always Wanted to Know About CakePHP', '2020-09-27 16:35:56', '2020-09-27 16:35:56')
2020-09-27 16:35:56 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:35:56 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:35:56 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:36:30 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 16:36:30 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 16:36:30 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 16:36:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 16:36:30 Debug: duration=3 rows=0 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:36:30 Debug: duration=4 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:36:32 Debug: duration=1 rows=0 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:36:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:37:39 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-27 16:37:54 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE Tags.title = 'Training' LIMIT 1
2020-09-27 16:37:54 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:37:54 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE Tags.title = 'Training' LIMIT 1
2020-09-27 16:37:54 Debug: duration=1 rows=1 INSERT INTO tags (title, created, modified) VALUES ('Training', '2020-09-27 16:37:54', '2020-09-27 16:37:54')
2020-09-27 16:37:54 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:37:54 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:37:54 Debug: duration=9 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:38:14 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:38:14 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:38:14 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:38:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:38:14 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-27 16:38:31 Debug: duration=5 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 16:38:31 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 16:38:31 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 16:38:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 16:38:31 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE Tags.title = 'City of Laval' LIMIT 1
2020-09-27 16:38:31 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:38:31 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE Tags.title = 'City of Laval' LIMIT 1
2020-09-27 16:38:31 Debug: duration=1 rows=1 INSERT INTO tags (title, created, modified) VALUES ('City of Laval', '2020-09-27 16:38:31', '2020-09-27 16:38:31')
2020-09-27 16:38:31 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:38:31 Debug: duration=1 rows=2 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:38:31 Debug: duration=4 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:38:41 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-27 16:38:47 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE Tags.title = 'World' LIMIT 1
2020-09-27 16:38:48 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:38:48 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE Tags.title = 'World' LIMIT 1
2020-09-27 16:38:48 Debug: duration=2 rows=1 INSERT INTO tags (title, created, modified) VALUES ('World', '2020-09-27 16:38:48', '2020-09-27 16:38:48')
2020-09-27 16:38:48 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:38:48 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:38:48 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:38:53 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:38:53 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:38:56 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 1 LIMIT 1
2020-09-27 16:38:56 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 16:38:56 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 16:38:56 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 16:38:56 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 16:38:56 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 16:38:56 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 16:38:56 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 16:38:56 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 16:38:56 Debug: duration=3 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (1)
2020-09-27 16:38:56 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-27 16:39:01 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 1 LIMIT 1
2020-09-27 16:39:01 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (1)
2020-09-27 16:39:01 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'Éducation' AND NOT (Tags.id = 1)) LIMIT 1
2020-09-27 16:39:01 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:39:01 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'Éducation' AND NOT (Tags.id = 1)) LIMIT 1
2020-09-27 16:39:01 Debug: duration=1 rows=1 UPDATE tags SET title = 'Éducation' , modified = '2020-09-27 16:39:01' WHERE id = 1
2020-09-27 16:39:01 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 1
2020-09-27 16:39:01 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:39:02 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:39:02 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:39:06 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 2 LIMIT 1
2020-09-27 16:39:06 Debug: duration=2 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (2)
2020-09-27 16:39:06 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-27 16:39:14 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 2 LIMIT 1
2020-09-27 16:39:14 Debug: duration=3 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (2)
2020-09-27 16:39:14 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'Ville de Laval' AND NOT (Tags.id = 2)) LIMIT 1
2020-09-27 16:39:14 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:39:14 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'Ville de Laval' AND NOT (Tags.id = 2)) LIMIT 1
2020-09-27 16:39:14 Debug: duration=1 rows=1 UPDATE tags SET title = 'Ville de Laval' , modified = '2020-09-27 16:39:14' WHERE id = 2
2020-09-27 16:39:14 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 2
2020-09-27 16:39:14 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:39:14 Debug: duration=0 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:39:14 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:39:18 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 3 LIMIT 1
2020-09-27 16:39:18 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (3)
2020-09-27 16:39:18 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-27 16:39:25 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 3 LIMIT 1
2020-09-27 16:39:25 Debug: duration=2 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (3)
2020-09-27 16:39:25 Debug: duration=2 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'International' AND NOT (Tags.id = 3)) LIMIT 1
2020-09-27 16:39:25 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:39:25 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'International' AND NOT (Tags.id = 3)) LIMIT 1
2020-09-27 16:39:25 Debug: duration=0 rows=1 UPDATE tags SET title = 'International' , modified = '2020-09-27 16:39:25' WHERE id = 3
2020-09-27 16:39:25 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 3
2020-09-27 16:39:25 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:39:25 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:39:25 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:39:30 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:39:30 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:40:35 Debug: duration=4 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 16:40:35 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 16:40:35 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 16:40:35 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 16:40:35 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:40:35 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 16:40:39 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:40:39 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:40:39 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:40:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:40:39 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 1 LIMIT 1
2020-09-27 16:40:39 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (1)
2020-09-27 16:40:39 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-27 16:40:48 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 1 LIMIT 1
2020-09-27 16:40:48 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (1)
2020-09-27 16:40:48 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'Training' AND NOT (Tags.id = 1)) LIMIT 1
2020-09-27 16:40:48 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:40:48 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'Training' AND NOT (Tags.id = 1)) LIMIT 1
2020-09-27 16:40:48 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title') AND locale = 'fr_CA' AND foreign_key = 1 AND model = 'Tags')
2020-09-27 16:40:48 Debug: duration=1 rows=1 UPDATE tags SET modified = '2020-09-27 16:40:48' WHERE id = 1
2020-09-27 16:40:48 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Tags', 1, 'title', 'Training')
2020-09-27 16:40:48 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 1
2020-09-27 16:40:48 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:40:48 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:40:48 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 16:40:50 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 2 LIMIT 1
2020-09-27 16:40:50 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (2)
2020-09-27 16:40:51 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-27 16:40:56 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 2 LIMIT 1
2020-09-27 16:40:56 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (2)
2020-09-27 16:40:56 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'City of Laval' AND NOT (Tags.id = 2)) LIMIT 1
2020-09-27 16:40:56 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:40:56 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'City of Laval' AND NOT (Tags.id = 2)) LIMIT 1
2020-09-27 16:40:56 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title') AND locale = 'fr_CA' AND foreign_key = 2 AND model = 'Tags')
2020-09-27 16:40:56 Debug: duration=0 rows=1 UPDATE tags SET modified = '2020-09-27 16:40:56' WHERE id = 2
2020-09-27 16:40:56 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Tags', 2, 'title', 'City of Laval')
2020-09-27 16:40:56 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 2
2020-09-27 16:40:56 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:40:57 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 16:40:57 Debug: duration=4 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 16:40:57 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 16:40:57 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 16:40:57 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:40:57 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 16:40:59 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 3 LIMIT 1
2020-09-27 16:40:59 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 16:40:59 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 16:40:59 Debug: duration=14 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 16:40:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 16:40:59 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (3)
2020-09-27 16:40:59 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-27 16:41:04 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 3 LIMIT 1
2020-09-27 16:41:04 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (3)
2020-09-27 16:41:04 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'World' AND NOT (Tags.id = 3)) LIMIT 1
2020-09-27 16:41:04 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:41:04 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'World' AND NOT (Tags.id = 3)) LIMIT 1
2020-09-27 16:41:04 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title') AND locale = 'fr_CA' AND foreign_key = 3 AND model = 'Tags')
2020-09-27 16:41:04 Debug: duration=0 rows=1 UPDATE tags SET modified = '2020-09-27 16:41:04' WHERE id = 3
2020-09-27 16:41:04 Debug: duration=1 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Tags', 3, 'title', 'World')
2020-09-27 16:41:04 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 3
2020-09-27 16:41:04 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:41:04 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:41:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 16:41:07 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:41:07 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:41:13 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 1 LIMIT 1
2020-09-27 16:41:13 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) WHERE OrdersTags.tag_id in (1)
2020-09-27 16:41:13 Debug: duration=0 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-27 16:41:18 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 1 LIMIT 1
2020-09-27 16:41:18 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) WHERE OrdersTags.tag_id in (1)
2020-09-27 16:41:18 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'Training' AND NOT (Tags.id = 1)) LIMIT 1
2020-09-27 16:41:18 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:41:18 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'Training' AND NOT (Tags.id = 1)) LIMIT 1
2020-09-27 16:41:19 Debug: duration=1 rows=1 UPDATE tags SET title = 'Training' , modified = '2020-09-27 16:41:19' WHERE id = 1
2020-09-27 16:41:19 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 1
2020-09-27 16:41:19 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:41:19 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:41:19 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:41:21 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 2 LIMIT 1
2020-09-27 16:41:21 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) WHERE OrdersTags.tag_id in (2)
2020-09-27 16:41:21 Debug: duration=0 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-27 16:41:25 Debug: duration=0 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 2 LIMIT 1
2020-09-27 16:41:25 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) WHERE OrdersTags.tag_id in (2)
2020-09-27 16:41:25 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'c' AND NOT (Tags.id = 2)) LIMIT 1
2020-09-27 16:41:25 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:41:25 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'c' AND NOT (Tags.id = 2)) LIMIT 1
2020-09-27 16:41:25 Debug: duration=0 rows=1 UPDATE tags SET title = 'c' , modified = '2020-09-27 16:41:25' WHERE id = 2
2020-09-27 16:41:25 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 2
2020-09-27 16:41:25 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:41:25 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:41:25 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:41:30 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 2 LIMIT 1
2020-09-27 16:41:30 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) WHERE OrdersTags.tag_id in (2)
2020-09-27 16:41:30 Debug: duration=0 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-27 16:41:34 Debug: duration=0 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 2 LIMIT 1
2020-09-27 16:41:34 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) WHERE OrdersTags.tag_id in (2)
2020-09-27 16:41:34 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'City of Laval' AND NOT (Tags.id = 2)) LIMIT 1
2020-09-27 16:41:34 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:41:34 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'City of Laval' AND NOT (Tags.id = 2)) LIMIT 1
2020-09-27 16:41:34 Debug: duration=0 rows=1 UPDATE tags SET title = 'City of Laval' , modified = '2020-09-27 16:41:34' WHERE id = 2
2020-09-27 16:41:34 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 2
2020-09-27 16:41:34 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:41:34 Debug: duration=0 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:41:34 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:41:36 Debug: duration=2 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 3 LIMIT 1
2020-09-27 16:41:36 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) WHERE OrdersTags.tag_id in (3)
2020-09-27 16:41:36 Debug: duration=0 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-27 16:41:40 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 3 LIMIT 1
2020-09-27 16:41:40 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) WHERE OrdersTags.tag_id in (3)
2020-09-27 16:41:40 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'w' AND NOT (Tags.id = 3)) LIMIT 1
2020-09-27 16:41:40 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:41:40 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'w' AND NOT (Tags.id = 3)) LIMIT 1
2020-09-27 16:41:40 Debug: duration=1 rows=1 UPDATE tags SET title = 'w' , modified = '2020-09-27 16:41:40' WHERE id = 3
2020-09-27 16:41:40 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 3
2020-09-27 16:41:40 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:41:41 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:41:41 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:41:43 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 3 LIMIT 1
2020-09-27 16:41:43 Debug: duration=2 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) WHERE OrdersTags.tag_id in (3)
2020-09-27 16:41:43 Debug: duration=0 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-27 16:41:49 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id = 3 LIMIT 1
2020-09-27 16:41:49 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) WHERE OrdersTags.tag_id in (3)
2020-09-27 16:41:49 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'World' AND NOT (Tags.id = 3)) LIMIT 1
2020-09-27 16:41:49 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:41:49 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags WHERE (Tags.title = 'World' AND NOT (Tags.id = 3)) LIMIT 1
2020-09-27 16:41:49 Debug: duration=0 rows=1 UPDATE tags SET title = 'World' , modified = '2020-09-27 16:41:49' WHERE id = 3
2020-09-27 16:41:49 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 3
2020-09-27 16:41:49 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:41:49 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:41:49 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:41:51 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:41:51 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 16:41:53 Debug: duration=2 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 1 LIMIT 1
2020-09-27 16:41:53 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (1)
2020-09-27 16:41:54 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-27 16:42:08 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 1 LIMIT 1
2020-09-27 16:42:08 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (1)
2020-09-27 16:42:08 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'Éducation' AND NOT (Tags.id = 1)) LIMIT 1
2020-09-27 16:42:08 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:42:08 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'Éducation' AND NOT (Tags.id = 1)) LIMIT 1
2020-09-27 16:42:08 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title') AND locale = 'fr_CA' AND foreign_key = 1 AND model = 'Tags')
2020-09-27 16:42:08 Debug: duration=1 rows=1 UPDATE tags SET modified = '2020-09-27 16:42:08' WHERE id = 1
2020-09-27 16:42:08 Debug: duration=0 rows=1 UPDATE i18n SET foreign_key = 1 , content = 'Éducation' WHERE id = 15
2020-09-27 16:42:08 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 1
2020-09-27 16:42:08 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:42:08 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:42:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 16:42:10 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 2 LIMIT 1
2020-09-27 16:42:10 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (2)
2020-09-27 16:42:10 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-27 16:42:16 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 2 LIMIT 1
2020-09-27 16:42:16 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (2)
2020-09-27 16:42:16 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'Ville de Laval' AND NOT (Tags.id = 2)) LIMIT 1
2020-09-27 16:42:16 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:42:16 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'Ville de Laval' AND NOT (Tags.id = 2)) LIMIT 1
2020-09-27 16:42:16 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title') AND locale = 'fr_CA' AND foreign_key = 2 AND model = 'Tags')
2020-09-27 16:42:16 Debug: duration=1 rows=1 UPDATE tags SET modified = '2020-09-27 16:42:16' WHERE id = 2
2020-09-27 16:42:16 Debug: duration=0 rows=1 UPDATE i18n SET foreign_key = 2 , content = 'Ville de Laval' WHERE id = 16
2020-09-27 16:42:16 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 2
2020-09-27 16:42:16 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:42:16 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:42:16 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 16:42:18 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 3 LIMIT 1
2020-09-27 16:42:18 Debug: duration=4 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (3)
2020-09-27 16:42:18 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 200
2020-09-27 16:42:24 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id = 3 LIMIT 1
2020-09-27 16:42:24 Debug: duration=3 rows=0 SELECT OrdersTags.order_id AS `Orders_CJoin__order_id`, OrdersTags.tag_id AS `Orders_CJoin__tag_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE OrdersTags.tag_id in (3)
2020-09-27 16:42:24 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'International' AND NOT (Tags.id = 3)) LIMIT 1
2020-09-27 16:42:24 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:42:24 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE (Tags.title = 'International' AND NOT (Tags.id = 3)) LIMIT 1
2020-09-27 16:42:24 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title') AND locale = 'fr_CA' AND foreign_key = 3 AND model = 'Tags')
2020-09-27 16:42:24 Debug: duration=0 rows=1 UPDATE tags SET modified = '2020-09-27 16:42:24' WHERE id = 3
2020-09-27 16:42:24 Debug: duration=0 rows=1 UPDATE i18n SET foreign_key = 3 , content = 'International' WHERE id = 17
2020-09-27 16:42:24 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.tag_id = 3
2020-09-27 16:42:24 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:42:24 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:42:24 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 16:42:27 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:42:27 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:42:29 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:42:29 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 16:42:31 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-09-27 16:42:31 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-09-27 16:42:39 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 16:42:39 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2020-09-27 16:42:39 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 16:42:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 16:42:39 Debug: duration=2 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:42:39 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:42:46 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:42:46 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:42:46 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:42:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:42:46 Debug: duration=2 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:42:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:42:50 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:42:50 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:43:08 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 16:43:08 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 16:43:08 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 16:43:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 16:43:08 Debug: duration=3 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:43:08 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:43:08 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:43:08 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title') AND locale = 'fr_CA' AND foreign_key = 5 AND model = 'Orders')
2020-09-27 16:43:08 Debug: duration=1 rows=1 UPDATE orders SET modified = '2020-09-27 16:43:08' WHERE id = 5
2020-09-27 16:43:08 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 5, 'title', 'Tout sur Wikipedia')
2020-09-27 16:43:08 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:43:08 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:43:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:43:12 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 16:43:12 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 16:43:20 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 16:43:20 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 16:43:20 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:43:20 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title') AND locale = 'fr_CA' AND foreign_key = 6 AND model = 'Orders')
2020-09-27 16:43:20 Debug: duration=1 rows=1 UPDATE orders SET modified = '2020-09-27 16:43:20' WHERE id = 6
2020-09-27 16:43:20 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 6, 'title', 'Tout sur Montmorency')
2020-09-27 16:43:20 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:43:21 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:43:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:43:23 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 16:43:23 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 16:43:31 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 16:43:31 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 16:43:31 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:43:31 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title') AND locale = 'fr_CA' AND foreign_key = 7 AND model = 'Orders')
2020-09-27 16:43:31 Debug: duration=0 rows=1 UPDATE orders SET modified = '2020-09-27 16:43:31' WHERE id = 7
2020-09-27 16:43:31 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 7, 'title', 'Tout sur CakePHP')
2020-09-27 16:43:31 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:43:31 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:43:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:43:34 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:43:34 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:43:54 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:43:54 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:43:54 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:43:54 Debug: duration=1 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('body') AND locale = 'fr_CA' AND foreign_key = 5 AND model = 'Orders')
2020-09-27 16:43:54 Debug: duration=1 rows=1 UPDATE orders SET modified = '2020-09-27 16:43:54' WHERE id = 5
2020-09-27 16:43:54 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 5, 'body', 'Tout ce que vous avez toujours voulu savoir sur Wikipedia')
2020-09-27 16:43:54 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:43:55 Debug: duration=2 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:43:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:43:58 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 16:43:58 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 16:44:13 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 16:44:13 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 16:44:13 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:44:13 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('body') AND locale = 'fr_CA' AND foreign_key = 6 AND model = 'Orders')
2020-09-27 16:44:13 Debug: duration=0 rows=1 UPDATE orders SET modified = '2020-09-27 16:44:13' WHERE id = 6
2020-09-27 16:44:13 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 6, 'body', 'Tout ce que vous avez toujours voulu savoir sur le collège Montmorency')
2020-09-27 16:44:13 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:44:14 Debug: duration=3 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:44:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:44:16 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 16:44:16 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 16:44:24 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 16:44:24 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 16:44:24 Debug: duration=0 rows=0 BEGIN
2020-09-27 16:44:24 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('body') AND locale = 'fr_CA' AND foreign_key = 7 AND model = 'Orders')
2020-09-27 16:44:24 Debug: duration=0 rows=1 UPDATE orders SET modified = '2020-09-27 16:44:24' WHERE id = 7
2020-09-27 16:44:24 Debug: duration=0 rows=1 INSERT INTO i18n (locale, model, foreign_key, field, content) VALUES ('fr_CA', 'Orders', 7, 'body', 'Tout ce que vous avez toujours voulu savoir sur CakePHP')
2020-09-27 16:44:24 Debug: duration=0 rows=0 COMMIT
2020-09-27 16:44:24 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:44:24 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:44:54 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:44:54 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:44:54 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:44:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:44:54 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 16:44:54 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 16:44:54 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 16:44:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 16:44:54 Debug: duration=2 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:44:54 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:44:58 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 16:44:58 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 16:44:58 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 16:44:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 16:44:58 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:44:58 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (5)
2020-09-27 16:45:02 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:45:02 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (5)
2020-09-27 16:55:45 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:55:45 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:55:45 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:55:45 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:55:45 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 16:55:45 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 16:55:46 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 16:55:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 16:55:46 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 16:55:46 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 16:55:46 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 16:55:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 16:55:46 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:55:46 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (5)
2020-09-27 16:58:28 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 16:58:28 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 16:58:28 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 16:58:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 16:58:28 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 16:58:28 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 16:58:28 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 16:58:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 16:58:28 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 16:58:28 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 16:58:28 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 16:58:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 16:58:28 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 16:58:28 Debug: duration=2 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (5)
2020-09-27 16:58:33 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 16:58:33 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 16:58:33 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 16:58:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 16:58:33 Debug: duration=2 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 16:58:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 16:58:48 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 16:58:48 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 16:59:05 Debug: duration=4 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 16:59:05 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 16:59:05 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 16:59:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 16:59:05 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:02:37 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:02:37 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:02:37 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:02:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:02:37 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:02:37 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:02:37 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:02:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:02:37 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:05:20 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:05:20 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:05:20 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:05:20 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:05:20 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:05:20 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:05:20 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:05:20 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:05:20 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:05:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:05:25 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 17:05:25 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 17:05:25 Debug: duration=4 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:05:25 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:05:25 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:05:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:05:25 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:05:43 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 17:05:43 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 17:05:43 Debug: duration=1 rows=2 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (1,3)
2020-09-27 17:05:44 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:05:44 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:05:52 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 17:05:52 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-09-27 17:05:52 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 17:05:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 17:05:52 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 17:05:52 Debug: duration=2 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (6)
2020-09-27 17:08:13 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:08:13 Debug: duration=6 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:08:13 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:08:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:08:14 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 17:08:14 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 17:08:14 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:08:14 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:08:14 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:08:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:08:14 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:08:21 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 17:08:21 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 17:08:21 Debug: duration=2 rows=2 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (2,1)
2020-09-27 17:08:22 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:08:22 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:08:22 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:08:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:08:22 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:08:22 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:08:30 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 17:08:30 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 17:08:30 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:14:17 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:14:17 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:14:17 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:14:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:14:17 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:14:17 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:14:17 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:14:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:14:17 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:14:17 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:14:29 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:14:29 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:14:29 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:14:29 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:14:29 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:15:24 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (2,1,3)
2020-09-27 17:15:24 Debug: duration=0 rows=0 BEGIN
2020-09-27 17:15:24 Debug: duration=2 rows=1 INSERT INTO orders (user_id, title, slug, body, created, modified) VALUES (1, 'Tags'' test order all', 'Tags-test-order-all', 'An order with all tags set', '2020-09-27 17:15:24', '2020-09-27 17:15:24')
2020-09-27 17:15:24 Debug: duration=0 rows=0 COMMIT
2020-09-27 17:15:24 Debug: duration=1 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:15:24 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:17:51 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:17:51 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:17:51 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:17:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:17:51 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 17:17:51 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 17:17:51 Debug: duration=0 rows=0 BEGIN
2020-09-27 17:17:51 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 17:17:51 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 17:17:51 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 17:17:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 17:17:51 Debug: duration=2 rows=0 DELETE FROM i18n WHERE (foreign_key = 8 AND model = 'Orders')
2020-09-27 17:17:51 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 17:17:51 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 17:17:51 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 17:17:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 17:17:51 Debug: duration=1 rows=0 DELETE FROM orders_tags WHERE order_id = 8
2020-09-27 17:17:51 Debug: duration=1 rows=1 DELETE FROM orders WHERE id = 8
2020-09-27 17:17:51 Debug: duration=0 rows=0 COMMIT
2020-09-27 17:17:51 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:17:51 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:17:51 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:17:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:17:51 Debug: duration=1 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:17:51 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:17:53 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:17:53 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:17:53 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:17:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:17:53 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:18:03 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (2,1,3)
2020-09-27 17:18:03 Debug: duration=0 rows=0 BEGIN
2020-09-27 17:18:03 Debug: duration=0 rows=1 INSERT INTO orders (user_id, title, slug, body, created, modified) VALUES (1, 'Tags'' test order all', 'Tags-test-order-all', 'An order with all tags set', '2020-09-27 17:18:03', '2020-09-27 17:18:03')
2020-09-27 17:18:03 Debug: duration=0 rows=0 COMMIT
2020-09-27 17:18:04 Debug: duration=2 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:18:04 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:18:38 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 17:18:38 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 17:18:38 Debug: duration=0 rows=0 BEGIN
2020-09-27 17:18:38 Debug: duration=1 rows=0 DELETE FROM i18n WHERE (foreign_key = 9 AND model = 'Orders')
2020-09-27 17:18:38 Debug: duration=1 rows=0 DELETE FROM orders_tags WHERE order_id = 9
2020-09-27 17:18:38 Debug: duration=1 rows=1 DELETE FROM orders WHERE id = 9
2020-09-27 17:18:38 Debug: duration=0 rows=0 COMMIT
2020-09-27 17:18:38 Debug: duration=3 rows=6 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:18:38 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:18:40 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:18:47 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (2,1,3)
2020-09-27 17:22:30 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:22:30 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:22:30 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:22:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:22:30 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:22:30 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:22:30 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:22:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:22:30 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:22:48 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (2,1,3)
2020-09-27 17:23:17 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:23:19 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:23:29 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (2,1,3)
2020-09-27 17:26:25 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:26:25 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:26:25 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:26:25 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:26:25 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:26:25 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:26:25 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:26:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:26:25 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (2,1,3)
2020-09-27 17:26:25 Debug: duration=0 rows=0 BEGIN
2020-09-27 17:26:25 Debug: duration=1 rows=1 INSERT INTO orders (user_id, title, slug, body, created, modified) VALUES (1, 'Tags'' test order all', 'Tags-test-order-all', 'An order with all tags set', '2020-09-27 17:26:25', '2020-09-27 17:26:25')
2020-09-27 17:26:25 Debug: duration=0 rows=0 COMMIT
2020-09-27 17:26:26 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:26:26 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:26:26 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:26:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:26:26 Debug: duration=1 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:26:26 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:27:09 Debug: duration=2 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:27:09 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:27:11 Debug: duration=3 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:27:11 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:27:14 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:27:16 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:27:34 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (2,1,3)
2020-09-27 17:31:31 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:31:31 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:31:31 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:31:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:31:31 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:31:31 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:31:31 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:31:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:31:31 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 17:31:33 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:31:33 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:31:33 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:31:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:31:33 Debug: duration=1 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:31:33 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:31:36 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 17:31:36 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-09-27 17:31:36 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 17:31:36 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 17:31:36 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 17:31:36 Debug: duration=2 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (10)
2020-09-27 17:32:23 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 17:32:23 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (10)
2020-09-27 17:32:23 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 17:32:23 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 17:32:23 Debug: duration=14 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 17:32:23 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 17:32:23 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (10)
2020-09-27 17:32:46 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 17:32:46 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 17:32:46 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 17:32:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 17:32:46 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 17:32:46 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (10)
2020-09-27 17:32:46 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (10)
2020-09-27 17:33:36 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:33:36 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:33:36 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:33:36 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:33:36 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 17:33:36 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:33:36 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:33:36 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:33:36 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:33:36 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 17:33:36 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (10)
2020-09-27 17:33:36 Debug: duration=0 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 17:33:55 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:33:55 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:33:55 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:33:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:33:55 Debug: duration=2 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 17:33:55 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10)
2020-09-27 17:33:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 17:34:01 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 17:34:34 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id in (1)
2020-09-27 17:34:34 Debug: duration=0 rows=0 BEGIN
2020-09-27 17:34:34 Debug: duration=2 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title','body') AND locale = 'fr_CA' AND foreign_key = NULL AND model = 'Orders')
2020-09-27 17:34:34 Debug: duration=6 rows=0 INSERT INTO orders (user_id, slug, created, modified) VALUES (1, 'Tags-test-order-one', '2020-09-27 17:34:34', '2020-09-27 17:34:34')
2020-09-27 17:34:34 Debug: duration=0 rows=0 ROLLBACK
2020-09-27 17:34:49 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 17:34:49 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 17:34:49 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 17:34:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 17:34:49 Debug: duration=2 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 17:35:07 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id in (1)
2020-09-27 17:35:07 Debug: duration=0 rows=0 BEGIN
2020-09-27 17:35:07 Debug: duration=0 rows=0 SELECT I18n.id AS `I18n__id`, I18n.field AS `I18n__field` FROM i18n I18n WHERE (field in ('title','body') AND locale = 'fr_CA' AND foreign_key = NULL AND model = 'Orders')
2020-09-27 17:35:07 Debug: duration=1 rows=0 INSERT INTO orders (user_id, slug, created, modified) VALUES (1, 'Tags-test-order-one', '2020-09-27 17:35:07', '2020-09-27 17:35:07')
2020-09-27 17:35:07 Debug: duration=0 rows=0 ROLLBACK
2020-09-27 17:35:46 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:35:46 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:35:46 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:35:46 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:35:46 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:35:46 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:35:46 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:35:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:35:46 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 17:36:17 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id in (1)
2020-09-27 17:37:05 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 17:37:05 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 17:37:05 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 17:37:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 17:37:05 Debug: duration=2 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 17:47:30 Debug: duration=2 rows=6 SHOW TABLES FROM `cakecmstuto_v0_2_1`
2020-09-27 17:47:30 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:47:30 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:47:30 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:47:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:47:30 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 17:47:30 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 17:47:30 Debug: duration=12 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 17:47:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 17:47:30 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 17:47:30 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 17:47:30 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 17:47:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 17:47:30 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 17:47:30 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 17:47:30 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 17:47:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 17:47:30 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:47:30 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:47:30 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:47:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:47:30 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:47:30 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:47:30 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:47:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:47:30 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:47:30 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:47:30 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:47:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:47:49 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:47:49 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:47:49 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:47:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:47:49 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 17:47:49 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 17:47:49 Debug: duration=12 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 17:47:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 17:47:49 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:47:49 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:47:49 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:47:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:49:59 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:49:59 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:49:59 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:49:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:49:59 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:49:59 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:49:59 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:49:59 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:49:59 Debug: duration=1 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:49:59 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:53:33 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:53:33 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:53:33 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:53:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:53:33 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:53:33 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:53:33 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:53:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:53:33 Debug: duration=1 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:53:33 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:54:11 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = '10' LIMIT 1
2020-09-27 17:54:11 Debug: duration=1 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:54:11 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:54:18 Debug: duration=1 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:54:18 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:54:25 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = '10' LIMIT 1
2020-09-27 17:54:25 Debug: duration=1 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:54:25 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:54:30 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-09-27 17:54:30 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-09-27 17:54:46 Debug: duration=2 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:54:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:58:35 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 17:58:35 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 17:58:35 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 17:58:35 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 17:58:35 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-09-27 17:58:35 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-09-27 17:58:37 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 17:58:37 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 17:58:37 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 17:58:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 17:58:37 Debug: duration=3 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:58:37 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:58:39 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 17:58:39 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 17:58:39 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 17:58:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 17:58:39 Debug: duration=0 rows=2 SELECT Users.id AS `Users__id` FROM users Users LIMIT 200
2020-09-27 17:58:39 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 17:58:39 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 17:58:39 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 17:58:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 17:58:39 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-09-27 17:59:01 Debug: duration=1 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 17:59:01 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 17:59:05 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 17:59:05 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 17:59:05 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 17:59:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 17:59:05 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) WHERE Orders.id = 10 LIMIT 1
2020-09-27 17:59:05 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 17:59:05 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 17:59:05 Debug: duration=12 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 17:59:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 17:59:05 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (10)
2020-09-27 17:59:05 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (10)
2020-09-27 18:13:08 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 18:13:08 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 18:13:08 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 18:13:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 18:13:08 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 18:13:08 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 18:13:08 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 18:13:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 18:13:08 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 18:13:08 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 18:13:08 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 18:13:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 18:13:08 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 18:13:08 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 18:13:08 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 18:13:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 18:13:08 Debug: duration=2 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified`, Orders_title_translation.id AS `Orders_title_translation__id`, Orders_title_translation.locale AS `Orders_title_translation__locale`, Orders_title_translation.model AS `Orders_title_translation__model`, Orders_title_translation.foreign_key AS `Orders_title_translation__foreign_key`, Orders_title_translation.field AS `Orders_title_translation__field`, Orders_title_translation.content AS `Orders_title_translation__content`, Orders_body_translation.id AS `Orders_body_translation__id`, Orders_body_translation.locale AS `Orders_body_translation__locale`, Orders_body_translation.model AS `Orders_body_translation__model`, Orders_body_translation.foreign_key AS `Orders_body_translation__foreign_key`, Orders_body_translation.field AS `Orders_body_translation__field`, Orders_body_translation.content AS `Orders_body_translation__content` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key)) LIMIT 20 OFFSET 0
2020-09-27 18:13:08 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 18:13:08 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 18:13:08 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 18:13:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 18:13:08 Debug: duration=2 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10)
2020-09-27 18:13:08 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LEFT JOIN i18n Orders_title_translation ON (Orders_title_translation.model = 'Orders' AND Orders_title_translation.field = 'title' AND Orders_title_translation.locale = 'fr_CA' AND Orders.id = (Orders_title_translation.foreign_key)) LEFT JOIN i18n Orders_body_translation ON (Orders_body_translation.model = 'Orders' AND Orders_body_translation.field = 'body' AND Orders_body_translation.locale = 'fr_CA' AND Orders.id = (Orders_body_translation.foreign_key))
2020-09-27 18:13:14 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key))
2020-09-27 18:13:46 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags
2020-09-27 18:14:00 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (1)
2020-09-27 18:14:00 Debug: duration=0 rows=0 BEGIN
2020-09-27 18:14:00 Debug: duration=1 rows=1 INSERT INTO orders (user_id, title, slug, body, created, modified) VALUES (1, 'Tags'' test order one', 'Tags-test-order-one', 'An order with one tag set', '2020-09-27 18:14:00', '2020-09-27 18:14:00')
2020-09-27 18:14:00 Debug: duration=0 rows=0 COMMIT
2020-09-27 18:14:01 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:14:01 Debug: duration=2 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,11)
2020-09-27 18:14:01 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:14:08 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 18:14:08 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 18:14:08 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 18:14:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 18:14:08 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 18:14:08 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (11)
2020-09-27 18:14:08 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (11)
2020-09-27 18:14:20 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:14:20 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,11)
2020-09-27 18:14:20 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:25:39 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 18:25:39 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 18:25:39 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 18:25:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 18:25:39 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 18:25:39 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 18:25:39 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 18:25:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 18:25:39 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 18:25:39 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 18:25:39 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 18:25:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 18:25:39 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:25:39 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 18:25:39 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 18:25:39 Debug: duration=12 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 18:25:39 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 18:25:39 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,11)
2020-09-27 18:25:39 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:26:14 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:26:14 Debug: duration=3 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,11)
2020-09-27 18:26:14 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:27:05 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:27:05 Debug: duration=2 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,11)
2020-09-27 18:27:05 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:28:11 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 18:28:11 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 18:28:11 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 18:28:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 18:28:11 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 18:28:11 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 18:28:11 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 18:28:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 18:28:11 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 18:28:11 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 18:28:11 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 18:28:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 18:28:11 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:28:11 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 18:28:11 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 18:28:11 Debug: duration=12 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 18:28:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 18:28:11 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,11)
2020-09-27 18:28:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:29:06 Debug: duration=3 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:29:06 Debug: duration=4 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,11)
2020-09-27 18:29:06 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:29:12 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 18:29:12 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 18:29:12 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 18:29:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 18:29:12 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = NULL LIMIT 1
2020-09-27 18:29:17 Debug: duration=9 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:29:17 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,11)
2020-09-27 18:29:17 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:29:29 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = NULL LIMIT 1
2020-09-27 18:30:28 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 18:30:28 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 18:30:28 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 18:30:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 18:30:28 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 18:30:28 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 18:30:28 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 18:30:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 18:30:28 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 18:30:28 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 18:30:28 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 18:30:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 18:30:28 Debug: duration=2 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:30:28 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 18:30:28 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 18:30:28 Debug: duration=12 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 18:30:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 18:30:28 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,11)
2020-09-27 18:30:28 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:30:31 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 18:30:31 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (11)
2020-09-27 18:30:31 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (11)
2020-09-27 18:30:41 Debug: duration=3 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:30:41 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,11)
2020-09-27 18:30:41 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:30:44 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 18:30:44 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (10)
2020-09-27 18:30:44 Debug: duration=2 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (10)
2020-09-27 18:30:53 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:30:53 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,11)
2020-09-27 18:30:53 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:30:58 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 18:30:58 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 18:30:58 Debug: duration=0 rows=0 BEGIN
2020-09-27 18:30:58 Debug: duration=1 rows=0 DELETE FROM orders_tags WHERE order_id = 11
2020-09-27 18:30:58 Debug: duration=0 rows=1 DELETE FROM orders WHERE id = 11
2020-09-27 18:30:58 Debug: duration=0 rows=0 COMMIT
2020-09-27 18:30:58 Debug: duration=1 rows=7 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:30:58 Debug: duration=3 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10)
2020-09-27 18:30:58 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:31:01 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-09-27 18:32:44 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 18:32:44 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 18:32:44 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 18:32:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 18:32:44 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 18:32:44 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 18:32:44 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 18:32:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 18:32:44 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-09-27 18:33:28 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-09-27 18:33:41 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (1)
2020-09-27 18:33:41 Debug: duration=0 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-09-27 18:33:57 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (1)
2020-09-27 18:33:57 Debug: duration=0 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-09-27 18:34:30 Debug: duration=2 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (1)
2020-09-27 18:36:58 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 18:36:58 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 18:36:58 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 18:36:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 18:36:58 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 18:36:58 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 18:36:58 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 18:36:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 18:36:58 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (1)
2020-09-27 18:36:58 Debug: duration=0 rows=0 BEGIN
2020-09-27 18:36:58 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 18:36:58 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 18:36:58 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 18:36:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 18:36:58 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-09-27 18:36:58 Debug: duration=0 rows=0 ROLLBACK
2020-09-27 18:41:54 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 18:41:54 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 18:41:54 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 18:41:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 18:41:54 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 18:41:54 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 18:41:54 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 18:41:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 18:41:54 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (1)
2020-09-27 18:41:54 Debug: duration=0 rows=0 BEGIN
2020-09-27 18:41:54 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 18:41:54 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 18:41:54 Debug: duration=12 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 18:41:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 18:41:54 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-09-27 18:41:54 Debug: duration=3 rows=1 INSERT INTO orders (user_id, title, slug, body, published, created, modified) VALUES (1, 'Tags'' test order one', 'Tags-test-order-one', 'An order with one tag set', 1, '2020-09-27 18:41:54', '2020-09-27 18:41:54')
2020-09-27 18:41:54 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 18:41:54 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 18:41:54 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 18:41:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 18:41:54 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 12 AND tag_id = 1)
2020-09-27 18:41:54 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 12
2020-09-27 18:41:54 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM orders_tags OrdersTags WHERE (OrdersTags.order_id = 12 AND OrdersTags.tag_id = 1) LIMIT 1
2020-09-27 18:41:54 Debug: duration=0 rows=1 INSERT INTO orders_tags (order_id, tag_id) VALUES (12, 1)
2020-09-27 18:41:54 Debug: duration=0 rows=0 COMMIT
2020-09-27 18:41:54 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:41:54 Debug: duration=1 rows=4 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 18:41:54 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:42:00 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 18:42:00 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 18:42:00 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 18:42:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 18:42:00 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 18:42:00 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (12)
2020-09-27 18:42:00 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (12)
2020-09-27 18:42:18 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:42:18 Debug: duration=1 rows=4 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 18:42:18 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:42:22 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 18:42:22 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (10)
2020-09-27 18:42:22 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (10)
2020-09-27 18:42:27 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 18:42:27 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 18:42:27 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 18:42:27 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 18:42:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 18:42:27 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (10)
2020-09-27 18:42:27 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (10)
2020-09-27 18:42:29 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = '10' LIMIT 1
2020-09-27 18:42:29 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 18:42:29 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (10)
2020-09-27 18:42:29 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (10)
2020-09-27 18:42:52 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:42:52 Debug: duration=1 rows=4 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 18:42:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:50:04 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 18:50:04 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 18:50:04 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 18:50:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 18:50:05 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 18:50:05 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 18:50:05 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 18:50:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 18:50:05 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 18:50:05 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 18:50:05 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 18:50:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 18:50:05 Debug: duration=3 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:50:05 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 18:50:05 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 18:50:05 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 18:50:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 18:50:05 Debug: duration=1 rows=4 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 18:50:05 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:50:17 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 18:50:17 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 18:50:17 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 18:50:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 18:50:17 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 18:50:17 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (10)
2020-09-27 18:50:17 Debug: duration=2 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (10)
2020-09-27 18:50:20 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 18:50:20 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 18:50:20 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 18:50:20 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 18:50:20 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 18:50:20 Debug: duration=2 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (10)
2020-09-27 18:50:20 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (10)
2020-09-27 18:50:29 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = '10' LIMIT 1
2020-09-27 18:50:30 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 18:50:30 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (10)
2020-09-27 18:50:30 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (10)
2020-09-27 18:51:42 Debug: duration=2 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:51:42 Debug: duration=1 rows=4 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 18:51:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:51:46 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 18:51:46 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 18:51:46 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (12)
2020-09-27 18:51:46 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-09-27 18:52:18 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 18:52:18 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 18:52:18 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 18:52:18 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 18:52:18 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 18:52:18 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 18:52:18 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 18:52:18 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 18:52:18 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 18:52:18 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 18:52:18 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 18:52:18 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 18:52:18 Debug: duration=14 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 18:52:18 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 18:52:18 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (12)
2020-09-27 18:52:19 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-09-27 18:53:26 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 18:53:26 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 18:53:26 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 18:53:26 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 18:53:26 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 18:53:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 18:53:26 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (12)
2020-09-27 18:53:26 Debug: duration=0 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id in (1)
2020-09-27 18:53:26 Debug: duration=0 rows=0 BEGIN
2020-09-27 18:53:26 Debug: duration=1 rows=1 UPDATE orders SET title = 'Test d''order une étiquette' , body = 'Un order avec une étiquette' , modified = '2020-09-27 18:53:26' WHERE id = 12
2020-09-27 18:53:26 Debug: duration=0 rows=1 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 12 AND tag_id = 1)
2020-09-27 18:53:26 Debug: duration=0 rows=1 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 12
2020-09-27 18:53:26 Debug: duration=0 rows=0 COMMIT
2020-09-27 18:53:26 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 18:53:26 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 18:53:26 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 18:53:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 18:53:26 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:53:26 Debug: duration=1 rows=4 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 18:53:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:53:31 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 18:53:31 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 18:53:31 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (10)
2020-09-27 18:53:31 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-09-27 18:54:11 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 18:54:11 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-all' LIMIT 1
2020-09-27 18:54:11 Debug: duration=1 rows=3 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (10)
2020-09-27 18:54:11 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id in (2,1,3)
2020-09-27 18:54:11 Debug: duration=0 rows=0 BEGIN
2020-09-27 18:54:11 Debug: duration=0 rows=1 UPDATE orders SET title = 'Test d''order toutes étiquettes' , body = 'Un order avec toutes les étiquettes' , modified = '2020-09-27 18:54:11' WHERE id = 10
2020-09-27 18:54:12 Debug: duration=1 rows=3 (SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 10 AND tag_id = 1))
UNION (SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 10 AND tag_id = 2))
UNION (SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 10 AND tag_id = 3))
2020-09-27 18:54:12 Debug: duration=0 rows=3 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 10
2020-09-27 18:54:12 Debug: duration=0 rows=0 COMMIT
2020-09-27 18:54:12 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:54:12 Debug: duration=1 rows=4 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 18:54:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:54:50 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 18:54:50 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 18:54:50 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 18:54:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 18:54:50 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 18:54:50 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 18:54:50 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 18:54:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 18:54:50 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:54:50 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 18:54:50 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 18:54:50 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 18:54:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 18:54:50 Debug: duration=1 rows=4 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 18:54:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 18:55:19 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 18:55:19 Debug: duration=1 rows=4 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 18:55:19 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 19:28:45 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 19:28:45 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 19:28:45 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 19:28:45 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 19:28:45 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 19:28:45 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 19:28:45 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 19:28:45 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 19:28:45 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 19:28:45 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 19:28:45 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 19:28:45 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 19:28:45 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 19:28:45 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 19:28:45 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 19:28:46 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 19:28:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 19:28:46 Debug: duration=2 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (5)
2020-09-27 19:28:46 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 19:28:46 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 19:28:46 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 19:28:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 19:28:46 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (5)
2020-09-27 19:30:01 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 19:30:01 Debug: duration=2 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (5)
2020-09-27 19:30:01 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (5)
2020-09-27 19:30:05 Debug: duration=4 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 19:30:05 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 19:30:06 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 19:30:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 19:30:06 Debug: duration=2 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 19:30:06 Debug: duration=1 rows=4 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 19:30:06 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 19:30:20 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'cakephp@example.com' LIMIT 1
2020-09-27 19:30:20 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 19:30:20 Debug: duration=2 rows=4 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 19:30:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 19:30:24 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 19:30:24 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 19:30:24 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (5)
2020-09-27 19:30:24 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-09-27 19:30:59 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 19:30:59 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 19:30:59 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 19:30:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 19:30:59 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 19:30:59 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 19:30:59 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 19:30:59 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 19:30:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 19:30:59 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 19:30:59 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 19:30:59 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 19:30:59 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 19:30:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 19:30:59 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 19:30:59 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 19:30:59 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 19:30:59 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 19:30:59 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (5)
2020-09-27 19:30:59 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id in (3)
2020-09-27 19:30:59 Debug: duration=0 rows=0 BEGIN
2020-09-27 19:30:59 Debug: duration=4 rows=1 UPDATE orders SET modified = '2020-09-27 19:30:59' WHERE id = 5
2020-09-27 19:30:59 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 5 AND tag_id = 3)
2020-09-27 19:30:59 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 5
2020-09-27 19:30:59 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM orders_tags OrdersTags WHERE (OrdersTags.order_id = 5 AND OrdersTags.tag_id = 3) LIMIT 1
2020-09-27 19:30:59 Debug: duration=1 rows=1 INSERT INTO orders_tags (order_id, tag_id) VALUES (5, 3)
2020-09-27 19:30:59 Debug: duration=0 rows=0 COMMIT
2020-09-27 19:30:59 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 19:30:59 Debug: duration=2 rows=5 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 19:30:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 19:31:04 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 19:31:04 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 19:31:05 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 19:31:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 19:31:05 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 19:31:05 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (5)
2020-09-27 19:31:05 Debug: duration=2 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (5)
2020-09-27 19:31:14 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 19:31:14 Debug: duration=1 rows=5 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 19:31:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 19:31:20 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 19:31:20 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 19:31:20 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (6)
2020-09-27 19:31:20 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-09-27 19:31:30 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 19:31:30 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 19:31:30 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (6)
2020-09-27 19:31:30 Debug: duration=1 rows=2 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id in (2,1)
2020-09-27 19:31:30 Debug: duration=0 rows=0 BEGIN
2020-09-27 19:31:30 Debug: duration=0 rows=1 UPDATE orders SET modified = '2020-09-27 19:31:30' WHERE id = 6
2020-09-27 19:31:30 Debug: duration=1 rows=0 (SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 6 AND tag_id = 1))
UNION (SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 6 AND tag_id = 2))
2020-09-27 19:31:30 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 6
2020-09-27 19:31:30 Debug: duration=23 rows=0 SELECT 1 AS `existing` FROM orders_tags OrdersTags WHERE (OrdersTags.order_id = 6 AND OrdersTags.tag_id = 1) LIMIT 1
2020-09-27 19:31:30 Debug: duration=7 rows=1 INSERT INTO orders_tags (order_id, tag_id) VALUES (6, 1)
2020-09-27 19:31:30 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM orders_tags OrdersTags WHERE (OrdersTags.order_id = 6 AND OrdersTags.tag_id = 2) LIMIT 1
2020-09-27 19:31:30 Debug: duration=0 rows=1 INSERT INTO orders_tags (order_id, tag_id) VALUES (6, 2)
2020-09-27 19:31:30 Debug: duration=0 rows=0 COMMIT
2020-09-27 19:31:30 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 19:31:30 Debug: duration=1 rows=7 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 19:31:30 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 19:31:36 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 19:31:36 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (6)
2020-09-27 19:31:37 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (6)
2020-09-27 19:31:44 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 19:31:44 Debug: duration=1 rows=7 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 19:31:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 19:31:50 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 19:31:50 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 19:31:50 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (7)
2020-09-27 19:31:50 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-09-27 19:31:56 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 19:31:56 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 19:31:56 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (7)
2020-09-27 19:31:56 Debug: duration=1 rows=2 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id in (1,3)
2020-09-27 19:31:56 Debug: duration=0 rows=0 BEGIN
2020-09-27 19:31:56 Debug: duration=1 rows=1 UPDATE orders SET modified = '2020-09-27 19:31:56' WHERE id = 7
2020-09-27 19:31:56 Debug: duration=1 rows=0 (SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 7 AND tag_id = 1))
UNION (SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 7 AND tag_id = 3))
2020-09-27 19:31:56 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 7
2020-09-27 19:31:56 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM orders_tags OrdersTags WHERE (OrdersTags.order_id = 7 AND OrdersTags.tag_id = 1) LIMIT 1
2020-09-27 19:31:56 Debug: duration=1 rows=1 INSERT INTO orders_tags (order_id, tag_id) VALUES (7, 1)
2020-09-27 19:31:56 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM orders_tags OrdersTags WHERE (OrdersTags.order_id = 7 AND OrdersTags.tag_id = 3) LIMIT 1
2020-09-27 19:31:56 Debug: duration=0 rows=1 INSERT INTO orders_tags (order_id, tag_id) VALUES (7, 3)
2020-09-27 19:31:56 Debug: duration=0 rows=0 COMMIT
2020-09-27 19:31:56 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 19:31:56 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 19:31:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 19:32:02 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 19:32:02 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (7)
2020-09-27 19:32:02 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (7)
2020-09-27 19:32:14 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 19:32:14 Debug: duration=2 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (7)
2020-09-27 19:32:14 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (7)
2020-09-27 20:02:26 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 20:02:26 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 20:02:26 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 20:02:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 20:02:26 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 20:02:26 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 20:02:26 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 20:02:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 20:02:26 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 20:02:26 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 20:02:26 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 20:02:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 20:02:26 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 20:02:26 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 20:02:26 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 20:02:26 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 20:02:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 20:02:26 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (7)
2020-09-27 20:02:26 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 20:02:26 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 20:02:26 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 20:02:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 20:02:26 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (7)
2020-09-27 20:02:52 Debug: duration=2 rows=5 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.slug AS `Orders__slug` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) INNER JOIN tags Tags ON Tags.id = (OrdersTags.tag_id) WHERE Tags.title in ('training','world') GROUP BY Orders.id, Orders.user_id, Orders.title, Orders.body, Orders.published, Orders.created, Orders.slug 
2020-09-27 20:02:52 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (6,7,10,12,5)
2020-09-27 20:03:01 Debug: duration=1 rows=5 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.slug AS `Orders__slug` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) INNER JOIN tags Tags ON Tags.id = (OrdersTags.tag_id) WHERE Tags.title in ('training','world') GROUP BY Orders.id, Orders.user_id, Orders.title, Orders.body, Orders.published, Orders.created, Orders.slug 
2020-09-27 20:23:51 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 20:23:51 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 20:23:51 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 20:23:51 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 20:23:51 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 20:23:51 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 20:23:51 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 20:23:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 20:23:51 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 20:23:51 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 20:23:51 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 20:23:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 20:23:51 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Montmorency' LIMIT 1
2020-09-27 20:23:51 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (6)
2020-09-27 20:23:51 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 20:23:51 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 20:23:51 Debug: duration=14 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 20:23:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 20:23:51 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (6)
2020-09-27 20:23:59 Debug: duration=1 rows=5 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.slug AS `Orders__slug` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) INNER JOIN tags Tags ON Tags.id = (OrdersTags.tag_id) WHERE Tags.title in ('training','world') GROUP BY Orders.id, Orders.user_id, Orders.title, Orders.body, Orders.published, Orders.created, Orders.slug 
2020-09-27 20:24:00 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 20:24:00 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (7)
2020-09-27 20:24:00 Debug: duration=2 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (7)
2020-09-27 20:24:08 Debug: duration=1 rows=5 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.slug AS `Orders__slug` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) INNER JOIN tags Tags ON Tags.id = (OrdersTags.tag_id) WHERE Tags.title in ('training','world') GROUP BY Orders.id, Orders.user_id, Orders.title, Orders.body, Orders.published, Orders.created, Orders.slug 
2020-09-27 20:24:28 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Tags-test-order-one' LIMIT 1
2020-09-27 20:24:28 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (12)
2020-09-27 20:24:28 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (12)
2020-09-27 20:24:31 Debug: duration=3 rows=5 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.slug AS `Orders__slug` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) INNER JOIN tags Tags ON Tags.id = (OrdersTags.tag_id) WHERE Tags.title in ('training','world') GROUP BY Orders.id, Orders.user_id, Orders.title, Orders.body, Orders.published, Orders.created, Orders.slug 
2020-09-27 20:24:33 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-Wikipedia' LIMIT 1
2020-09-27 20:24:33 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (5)
2020-09-27 20:24:33 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (5)
2020-09-27 20:24:37 Debug: duration=2 rows=5 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.slug AS `Orders__slug` FROM orders Orders INNER JOIN orders_tags OrdersTags ON Orders.id = (OrdersTags.order_id) INNER JOIN tags Tags ON Tags.id = (OrdersTags.tag_id) WHERE Tags.title in ('training','world') GROUP BY Orders.id, Orders.user_id, Orders.title, Orders.body, Orders.published, Orders.created, Orders.slug 
2020-09-27 20:26:00 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 20:26:00 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 20:26:00 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 20:26:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 20:26:00 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 20:26:00 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-09-27 20:26:00 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 20:26:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 20:26:00 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 20:26:00 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 20:26:00 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 20:26:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 20:26:00 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 20:26:00 Debug: duration=2 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (7)
2020-09-27 20:26:00 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 20:26:00 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 20:26:00 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 20:26:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 20:26:00 Debug: duration=2 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (7)
2020-09-27 22:14:58 Debug: duration=8 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 22:14:58 Debug: duration=6 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 22:14:58 Debug: duration=60 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 22:14:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 22:14:58 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 22:14:58 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-09-27 22:14:58 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 22:14:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 22:14:58 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 22:14:58 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 22:14:58 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 22:14:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 22:14:58 Debug: duration=4 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-27 22:14:58 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 22:14:58 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 22:14:58 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 22:14:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 22:14:59 Debug: duration=4 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (7)
2020-09-27 22:14:59 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 22:14:59 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 22:14:59 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_2_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 22:14:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 22:14:59 Debug: duration=2 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (7)
2020-09-27 22:50:49 Debug: duration=15 rows=8 SHOW TABLES FROM `cakecmstuto_v0_4_1`
2020-09-27 22:50:49 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-27 22:50:49 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-27 22:50:49 Debug: duration=37 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-27 22:50:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-27 22:50:50 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 22:50:50 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 22:50:50 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 22:50:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 22:50:50 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-09-27 22:50:50 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-09-27 22:50:50 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-09-27 22:50:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-09-27 22:50:50 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 22:50:50 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 22:50:50 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 22:50:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 22:50:50 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 22:50:50 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 22:50:50 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 22:50:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 22:50:50 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 22:50:50 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 22:50:50 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 22:50:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 22:50:50 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 22:50:50 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 22:50:50 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 22:50:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 22:50:50 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 22:50:50 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 22:50:50 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 22:50:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 22:50:52 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-27 22:50:52 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-27 22:50:52 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-27 22:50:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-27 22:50:53 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 22:50:53 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 22:50:53 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 22:50:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 23:05:52 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 23:05:52 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 23:05:52 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 23:05:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 23:05:52 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 23:05:52 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 23:05:52 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 23:05:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 23:05:52 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 23:05:52 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 23:05:52 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 23:05:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 23:05:52 Debug: duration=5 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 23:05:52 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 23:05:52 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 23:05:52 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 23:05:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 23:05:52 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 23:05:52 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 23:05:52 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 23:05:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 23:05:52 Debug: duration=6 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:05:53 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 23:06:01 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-27 23:06:01 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-27 23:06:01 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-27 23:06:01 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-27 23:06:01 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-27 23:06:02 Debug: duration=8 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-27 23:06:08 Debug: duration=2 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files WHERE Files.id = 1 LIMIT 1
2020-09-27 23:06:08 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-09-27 23:06:08 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders_files`
2020-09-27 23:06:08 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-09-27 23:06:08 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-09-27 23:06:08 Debug: duration=3 rows=0 SELECT OrdersFiles.id AS `Orders_CJoin__id`, OrdersFiles.order_id AS `Orders_CJoin__order_id`, OrdersFiles.file_id AS `Orders_CJoin__file_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_files OrdersFiles ON Orders.id = (OrdersFiles.order_id) WHERE OrdersFiles.file_id in (1)
2020-09-27 23:06:57 Debug: duration=2 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 23:06:57 Debug: duration=7 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:06:57 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 23:07:02 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 23:07:02 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-09-27 23:07:02 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 23:07:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 23:07:02 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-27 23:07:02 Debug: duration=7 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-27 23:07:02 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1)
2020-09-27 23:13:15 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 23:13:15 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 23:13:15 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 23:13:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 23:13:15 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 23:13:15 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 23:13:15 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 23:13:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 23:13:15 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 23:13:15 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 23:13:15 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 23:13:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 23:13:15 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-27 23:13:15 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-27 23:13:15 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-27 23:13:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-27 23:13:15 Debug: duration=3 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 23:13:15 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 23:13:15 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 23:13:15 Debug: duration=14 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 23:13:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 23:13:15 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 23:13:15 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 23:13:15 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 23:13:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 23:13:15 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:13:15 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-09-27 23:13:15 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-09-27 23:13:15 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-09-27 23:13:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-09-27 23:13:15 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:13:15 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 23:13:19 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 23:13:19 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 23:13:19 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 23:13:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 23:13:19 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-27 23:13:19 Debug: duration=3 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-27 23:13:19 Debug: duration=3 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1)
2020-09-27 23:13:19 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1)
2020-09-27 23:13:49 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 23:13:49 Debug: duration=2 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:13:49 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:13:49 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 23:20:07 Debug: duration=5 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 23:20:07 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 23:20:07 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 23:20:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 23:20:07 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-27 23:20:07 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-27 23:20:07 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-27 23:20:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-27 23:20:07 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 23:20:07 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 23:20:07 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 23:20:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 23:20:07 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-27 23:20:07 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-27 23:20:07 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-27 23:20:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-27 23:20:07 Debug: duration=5 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-27 23:20:07 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 23:20:07 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 23:20:07 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 23:20:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 23:20:07 Debug: duration=1 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-27 23:20:07 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 23:20:07 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 23:20:07 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 23:20:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 23:20:07 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1)
2020-09-27 23:20:07 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-09-27 23:20:07 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-09-27 23:20:07 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-09-27 23:20:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-09-27 23:20:07 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1)
2020-09-27 23:20:15 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 23:20:15 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 23:20:15 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 23:20:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 23:20:15 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 23:20:15 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:20:15 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:20:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 23:21:20 Debug: duration=4 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 23:21:20 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:21:20 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:21:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 23:23:10 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 23:23:10 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 23:23:10 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 23:23:10 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 23:23:10 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 23:23:10 Debug: duration=5 rows=1 SHOW INDEXES FROM `users`
2020-09-27 23:23:10 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 23:23:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 23:23:10 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 23:23:10 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 23:23:10 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 23:23:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 23:23:10 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-27 23:23:10 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-27 23:23:10 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-27 23:23:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-27 23:23:10 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 23:23:10 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-27 23:23:10 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-27 23:23:10 Debug: duration=14 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-27 23:23:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-27 23:23:10 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 23:23:10 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 23:23:10 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 23:23:10 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 23:23:10 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:23:10 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-09-27 23:23:10 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-09-27 23:23:10 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-09-27 23:23:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-09-27 23:23:10 Debug: duration=4 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:23:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 23:23:42 Debug: duration=2 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 23:23:42 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:23:42 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:23:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 23:24:26 Debug: duration=2 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-27 23:24:26 Debug: duration=2 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:24:26 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12)
2020-09-27 23:24:26 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-27 23:26:24 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-27 23:26:24 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-27 23:26:24 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-27 23:26:24 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-27 23:26:24 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-27 23:26:24 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-27 23:26:51 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-27 23:26:51 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-27 23:27:11 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-27 23:27:11 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-27 23:27:50 Debug: duration=2 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-27 23:27:50 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-27 23:28:06 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-27 23:28:06 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-27 23:29:21 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 23:29:21 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 23:29:21 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 23:29:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 23:29:21 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'cakephp@example.com' LIMIT 1
2020-09-27 23:29:22 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-27 23:29:22 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-27 23:29:22 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-27 23:29:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-27 23:29:22 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-27 23:29:22 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-27 23:29:22 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-27 23:29:22 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-27 23:29:22 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 23:29:22 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 23:29:22 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 23:29:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 23:29:22 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-27 23:29:22 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-27 23:29:22 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-27 23:29:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-27 23:29:22 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-09-27 23:29:22 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-09-27 23:56:22 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-27 23:56:22 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-27 23:56:22 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-27 23:56:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-27 23:56:22 Debug: duration=2 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-27 23:56:22 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-27 23:57:08 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-27 23:57:08 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-27 23:57:08 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-27 23:57:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-27 23:57:08 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'cakephp@example.com' LIMIT 1
2020-09-27 23:57:08 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-27 23:57:08 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-27 23:57:08 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-27 23:57:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-27 23:57:08 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-27 23:57:24 Debug: duration=0 rows=0 BEGIN
2020-09-28 00:04:41 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-28 00:04:41 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-28 00:04:41 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-28 00:04:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-28 00:04:41 Debug: duration=0 rows=0 BEGIN
2020-09-28 00:05:14 Debug: duration=0 rows=0 BEGIN
2020-09-28 00:10:51 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-28 00:10:51 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-09-28 00:10:51 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-28 00:10:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-28 00:10:51 Debug: duration=0 rows=0 BEGIN
2020-09-28 00:10:51 Debug: duration=0 rows=0 ROLLBACK
2020-09-28 00:11:46 Debug: duration=0 rows=0 BEGIN
2020-09-28 00:37:26 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-28 00:37:26 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-28 00:37:26 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-28 00:37:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-28 00:37:26 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-28 00:37:26 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-28 00:37:34 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-28 00:37:34 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-28 00:37:34 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-28 00:37:34 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-28 00:37:34 Debug: duration=2 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'cakephp@example.com' LIMIT 1
2020-09-28 00:37:35 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-28 00:37:35 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-28 00:37:35 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-28 00:37:35 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-28 00:37:35 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-28 01:40:25 Debug: duration=19 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-28 01:40:25 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2020-09-28 01:40:25 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-28 01:40:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-28 01:40:25 Debug: duration=2 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'cakephp@example.com' LIMIT 1
2020-09-28 01:40:25 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-28 01:40:25 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-28 01:40:25 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-28 01:40:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-28 01:40:25 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-28 01:40:25 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-09-28 01:40:25 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-28 01:40:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-28 01:40:25 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-28 01:49:13 Debug: duration=4 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-28 01:49:13 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-28 01:49:13 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-28 01:49:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-28 01:49:13 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-28 01:49:13 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-28 01:49:14 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-28 01:49:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-28 01:49:14 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-09-28 01:49:19 Debug: duration=0 rows=0 BEGIN
2020-09-28 01:49:58 Debug: duration=0 rows=0 BEGIN
2020-09-28 01:49:58 Debug: duration=4 rows=0 INSERT INTO files (name, path, created, modified) VALUES ('bezdez_uvnitr.jpg', 'files/add/', '2020-09-28 01:49:58', '2020-09-28 01:49:58')
2020-09-28 01:49:58 Debug: duration=0 rows=0 ROLLBACK
2020-09-28 01:50:46 Debug: duration=0 rows=0 BEGIN
2020-09-28 01:50:46 Debug: duration=2 rows=1 INSERT INTO files (name, path, created, modified) VALUES ('bezdez_uvnitr.jpg', 'files/add/', '2020-09-28 01:50:46', '2020-09-28 01:50:46')
2020-09-28 01:50:46 Debug: duration=0 rows=0 COMMIT
2020-09-28 01:50:47 Debug: duration=3 rows=2 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-28 01:50:47 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-28 01:51:02 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-28 01:51:02 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2020-09-28 01:51:02 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-28 01:51:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-28 01:51:02 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-28 01:51:02 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-28 01:51:02 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-28 01:51:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-28 01:51:02 Debug: duration=1 rows=8 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-28 01:51:02 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-28 01:51:02 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-28 01:51:02 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-28 01:51:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-28 01:51:02 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-28 01:51:02 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-28 01:51:02 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-28 01:51:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-28 01:51:02 Debug: duration=3 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12)
2020-09-28 01:51:02 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-09-28 01:51:02 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-09-28 01:51:02 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-09-28 01:51:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-09-28 01:51:02 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12)
2020-09-28 01:51:02 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-28 01:51:16 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-28 01:51:16 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-28 01:51:16 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-28 01:51:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-28 01:51:16 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-28 01:51:16 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-28 01:51:16 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-28 01:51:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-28 01:51:16 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-09-28 01:51:16 Debug: duration=1 rows=2 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-09-28 01:51:45 Debug: duration=2 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files WHERE Files.id in (2)
2020-09-28 01:51:45 Debug: duration=0 rows=0 BEGIN
2020-09-28 01:51:45 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-09-28 01:51:45 Debug: duration=3 rows=1 INSERT INTO orders (user_id, title, slug, body, published, created, modified) VALUES (1, 'Order with image', 'Order-with-image', 'Associate an image to the order', 1, '2020-09-28 01:51:45', '2020-09-28 01:51:45')
2020-09-28 01:51:45 Debug: duration=1 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE (order_id = 13 AND file_id = 2)
2020-09-28 01:51:45 Debug: duration=0 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE OrdersFiles.order_id = 13
2020-09-28 01:51:45 Debug: duration=0 rows=1 INSERT INTO orders_files (order_id, file_id) VALUES (13, 2)
2020-09-28 01:51:45 Debug: duration=0 rows=0 COMMIT
2020-09-28 01:51:45 Debug: duration=1 rows=9 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-28 01:51:45 Debug: duration=2 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:51:45 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:51:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-28 01:52:00 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-28 01:52:00 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-09-28 01:52:00 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-28 01:52:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-28 01:52:00 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Order-with-image' LIMIT 1
2020-09-28 01:52:00 Debug: duration=4 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (13)
2020-09-28 01:52:00 Debug: duration=2 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (13)
2020-09-28 01:52:00 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (13)
2020-09-28 01:52:14 Debug: duration=1 rows=2 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-28 01:52:14 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-28 01:53:37 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-28 01:53:37 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-09-28 01:53:37 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-28 01:53:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-28 01:53:37 Debug: duration=1 rows=2 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-28 01:53:37 Debug: duration=4 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-28 01:53:39 Debug: duration=1 rows=2 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-28 01:53:39 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-09-28 01:53:43 Debug: duration=2 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-28 01:53:43 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-09-28 01:53:43 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-28 01:53:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-28 01:53:43 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files WHERE Files.id = 2 LIMIT 1
2020-09-28 01:53:43 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-09-28 01:53:43 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-09-28 01:53:43 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-09-28 01:53:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-09-28 01:53:43 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Orders_CJoin__id`, OrdersFiles.order_id AS `Orders_CJoin__order_id`, OrdersFiles.file_id AS `Orders_CJoin__file_id`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders INNER JOIN orders_files OrdersFiles ON Orders.id = (OrdersFiles.order_id) WHERE OrdersFiles.file_id in (2)
2020-09-28 01:58:20 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-09-28 01:58:20 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders`
2020-09-28 01:58:20 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-09-28 01:58:20 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-09-28 01:58:21 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-09-28 01:58:21 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-09-28 01:58:21 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-09-28 01:58:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-09-28 01:58:21 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-09-28 01:58:21 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-09-28 01:58:21 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-09-28 01:58:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-09-28 01:58:21 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-09-28 01:58:21 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-09-28 01:58:21 Debug: duration=13 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-09-28 01:58:21 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-09-28 01:58:21 Debug: duration=1 rows=9 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-28 01:58:21 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-09-28 01:58:21 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders_tags`
2020-09-28 01:58:21 Debug: duration=13 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-09-28 01:58:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-09-28 01:58:21 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-09-28 01:58:21 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-09-28 01:58:21 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-09-28 01:58:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-09-28 01:58:21 Debug: duration=3 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:58:21 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-09-28 01:58:21 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-09-28 01:58:21 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-09-28 01:58:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-09-28 01:58:21 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:58:21 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-28 01:58:26 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-09-28 01:58:26 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-09-28 01:58:26 Debug: duration=13 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'cakecmstuto_v0_4_1' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-09-28 01:58:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-09-28 01:58:26 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'first-post' LIMIT 1
2020-09-28 01:58:26 Debug: duration=3 rows=4 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (1)
2020-09-28 01:58:26 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1)
2020-09-28 01:58:26 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1)
2020-09-28 01:58:34 Debug: duration=2 rows=9 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-28 01:58:34 Debug: duration=3 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:58:34 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:58:34 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-28 01:58:37 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Order-with-image' LIMIT 1
2020-09-28 01:58:37 Debug: duration=2 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (13)
2020-09-28 01:58:37 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (13)
2020-09-28 01:58:37 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (13)
2020-09-28 01:58:48 Debug: duration=1 rows=9 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-28 01:58:48 Debug: duration=2 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:58:48 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:58:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-28 01:58:54 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-28 01:58:54 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-28 01:58:54 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (7)
2020-09-28 01:58:54 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-09-28 01:58:54 Debug: duration=1 rows=2 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-09-28 01:58:59 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-28 01:58:59 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-28 01:58:59 Debug: duration=2 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (7)
2020-09-28 01:58:59 Debug: duration=1 rows=2 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.locale AS `Tags_title_translation__locale`, Tags_title_translation.model AS `Tags_title_translation__model`, Tags_title_translation.foreign_key AS `Tags_title_translation__foreign_key`, Tags_title_translation.field AS `Tags_title_translation__field`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE Tags.id in (1,3)
2020-09-28 01:58:59 Debug: duration=1 rows=2 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files WHERE Files.id in (1,2)
2020-09-28 01:58:59 Debug: duration=0 rows=0 BEGIN
2020-09-28 01:58:59 Debug: duration=3 rows=1 UPDATE orders SET modified = '2020-09-28 01:58:59' WHERE id = 7
2020-09-28 01:58:59 Debug: duration=1 rows=2 (SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 7 AND tag_id = 1))
UNION (SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 7 AND tag_id = 3))
2020-09-28 01:58:59 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 7
2020-09-28 01:58:59 Debug: duration=1 rows=0 (SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE (order_id = 7 AND file_id = 1))
UNION (SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE (order_id = 7 AND file_id = 2))
2020-09-28 01:58:59 Debug: duration=0 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE OrdersFiles.order_id = 7
2020-09-28 01:58:59 Debug: duration=0 rows=1 INSERT INTO orders_files (order_id, file_id) VALUES (7, 1)
2020-09-28 01:58:59 Debug: duration=0 rows=1 INSERT INTO orders_files (order_id, file_id) VALUES (7, 2)
2020-09-28 01:58:59 Debug: duration=0 rows=0 COMMIT
2020-09-28 01:58:59 Debug: duration=1 rows=9 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-28 01:58:59 Debug: duration=2 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:58:59 Debug: duration=2 rows=4 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:58:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-28 01:59:03 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Everything-about-CakePHP' LIMIT 1
2020-09-28 01:59:03 Debug: duration=4 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Products_name_translation.id AS `Products_name_translation__id`, Products_name_translation.locale AS `Products_name_translation__locale`, Products_name_translation.model AS `Products_name_translation__model`, Products_name_translation.foreign_key AS `Products_name_translation__foreign_key`, Products_name_translation.field AS `Products_name_translation__field`, Products_name_translation.content AS `Products_name_translation__content`, Products_product_translation.id AS `Products_product_translation__id`, Products_product_translation.locale AS `Products_product_translation__locale`, Products_product_translation.model AS `Products_product_translation__model`, Products_product_translation.foreign_key AS `Products_product_translation__foreign_key`, Products_product_translation.field AS `Products_product_translation__field`, Products_product_translation.content AS `Products_product_translation__content` FROM products Products LEFT JOIN i18n Products_name_translation ON (Products_name_translation.model = 'Products' AND Products_name_translation.field = 'name' AND Products_name_translation.locale = 'fr_CA' AND Products.id = (Products_name_translation.foreign_key)) LEFT JOIN i18n Products_product_translation ON (Products_product_translation.model = 'Products' AND Products_product_translation.field = 'product' AND Products_product_translation.locale = 'fr_CA' AND Products.id = (Products_product_translation.foreign_key)) WHERE Products.order_id in (7)
2020-09-28 01:59:03 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (7)
2020-09-28 01:59:03 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (7)
2020-09-28 01:59:29 Debug: duration=1 rows=9 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-09-28 01:59:29 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:59:29 Debug: duration=1 rows=4 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12,13)
2020-09-28 01:59:29 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-09-28 01:59:44 Debug: duration=1 rows=2 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files LIMIT 20 OFFSET 0
2020-09-28 01:59:44 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM files Files
2020-11-17 00:13:37 Debug: duration=8 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-11-17 00:13:37 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders`
2020-11-17 00:13:37 Debug: duration=22 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-17 00:13:37 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-17 00:13:37 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-17 00:13:37 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2020-11-17 00:13:37 Debug: duration=26 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-17 00:13:37 Debug: duration=5 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-17 00:13:37 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-17 00:13:37 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-17 00:13:37 Debug: duration=25 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-17 00:13:37 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-17 00:13:37 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-17 00:13:37 Debug: duration=4 rows=1 SHOW INDEXES FROM `files`
2020-11-17 00:13:37 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-17 00:13:37 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-17 00:13:37 Debug: duration=3 rows=9 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-17 00:13:37 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-17 00:13:37 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-17 00:13:37 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-17 00:13:37 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-17 00:13:37 Debug: duration=2 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12,13)
2020-11-17 00:13:37 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-17 00:13:37 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-17 00:13:37 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-17 00:13:37 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-17 00:13:37 Debug: duration=1 rows=0 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12,13)
2020-11-17 00:13:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-17 00:13:46 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-17 00:13:47 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-17 00:13:47 Debug: duration=1 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-17 00:16:13 Debug: duration=3 rows=8 SHOW FULL COLUMNS FROM `orders`
2020-11-17 00:16:13 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders`
2020-11-17 00:16:13 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-17 00:16:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-17 00:16:13 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-17 00:16:13 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2020-11-17 00:16:13 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-17 00:16:13 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-17 00:16:13 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-17 00:16:13 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-17 00:16:13 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-17 00:16:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-17 00:16:13 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-17 00:16:13 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-17 00:16:13 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-17 00:16:13 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-17 00:16:13 Debug: duration=1 rows=9 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-17 00:16:13 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-17 00:16:13 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-17 00:16:13 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-17 00:16:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-17 00:16:13 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12,13)
2020-11-17 00:16:13 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-17 00:16:13 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-17 00:16:13 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-17 00:16:13 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-17 00:16:13 Debug: duration=1 rows=0 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12,13)
2020-11-17 00:16:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-17 00:16:42 Debug: duration=2 rows=9 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-17 00:16:42 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12,13)
2020-11-17 00:16:42 Debug: duration=1 rows=0 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12,13)
2020-11-17 00:16:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-17 00:16:53 Debug: duration=2 rows=9 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-17 00:16:53 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12,13)
2020-11-17 00:16:53 Debug: duration=1 rows=0 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12,13)
2020-11-17 00:16:53 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-17 00:17:00 Debug: duration=2 rows=9 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-17 00:17:00 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-17 00:17:00 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-11-17 00:17:00 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-17 00:17:00 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-17 00:17:00 Debug: duration=1 rows=9 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (1,2,4,5,6,7,10,12,13)
2020-11-17 00:17:00 Debug: duration=1 rows=0 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (1,2,4,5,6,7,10,12,13)
2020-11-17 00:17:00 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-17 00:17:06 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-17 00:17:06 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-17 00:17:09 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-17 00:17:09 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-18 02:52:15 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 02:52:15 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2020-11-18 02:52:15 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 02:52:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 02:52:15 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-18 02:52:15 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 02:52:15 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-18 02:52:15 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 02:52:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 02:52:15 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 02:52:15 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 02:52:15 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 02:52:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 02:52:15 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 02:52:15 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 02:52:15 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 02:52:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 02:52:15 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 02:52:15 Debug: duration=1 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 03:00:32 Debug: duration=3 rows=11 SHOW TABLES FROM `facture_et_paiement`
2020-11-18 03:00:32 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 03:00:32 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 03:00:32 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 03:00:32 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 03:00:32 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-18 03:00:32 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-11-18 03:00:32 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-18 03:00:32 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 03:00:32 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 03:00:32 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 03:00:32 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-18 03:00:32 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-18 03:00:32 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-18 03:00:32 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-18 03:00:32 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-18 03:00:32 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-18 03:00:32 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-18 03:00:32 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-11-18 03:00:32 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-18 03:00:32 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 03:00:32 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 03:00:32 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 03:00:32 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 03:00:32 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 03:00:32 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 03:00:32 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 03:00:32 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 03:00:32 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 03:00:32 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-11-18 03:00:32 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 03:00:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 03:00:33 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 03:00:33 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 03:00:33 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 03:00:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 03:00:33 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 03:00:33 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 03:00:33 Debug: duration=22 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 03:00:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 03:00:33 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 03:00:33 Debug: duration=4 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 03:00:33 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 03:00:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 03:00:33 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 03:00:33 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 03:00:33 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 03:00:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 03:00:38 Debug: duration=2 rows=11 SHOW TABLES FROM `facture_et_paiement`
2020-11-18 03:00:38 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 03:00:39 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 03:00:39 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 03:00:39 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 03:00:39 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 03:00:39 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 03:00:39 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 03:00:39 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-18 03:00:39 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-11-18 03:00:39 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-18 03:00:39 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 03:00:39 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 03:00:39 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 03:00:39 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-18 03:00:39 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-18 03:00:39 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-18 03:00:39 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-18 03:00:39 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-18 03:00:39 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-18 03:00:39 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-18 03:00:39 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-11-18 03:00:39 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-18 03:00:39 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 03:00:39 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 03:00:39 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 03:00:39 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 03:00:39 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 03:00:39 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 03:00:39 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-11-18 03:00:39 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 03:00:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 03:00:40 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 03:00:40 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 03:00:40 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 03:00:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 03:00:40 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 03:00:40 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 03:00:40 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 03:00:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 03:00:40 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 03:00:40 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 03:00:40 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 03:00:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 03:00:53 Debug: duration=3 rows=11 SHOW TABLES FROM `facture_et_paiement`
2020-11-18 03:00:53 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 03:00:53 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 03:00:53 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 03:00:53 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 03:00:53 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 03:00:53 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 03:00:53 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 03:00:53 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-18 03:00:53 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-11-18 03:00:53 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-18 03:00:53 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 03:00:53 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 03:00:53 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 03:00:53 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-18 03:00:53 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-18 03:00:53 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-18 03:00:53 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-18 03:00:53 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-18 03:00:53 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-18 03:00:53 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-18 03:00:53 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-11-18 03:00:53 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-18 03:00:53 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 03:00:53 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 03:00:53 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 03:00:53 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 03:00:53 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 03:00:53 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 03:00:53 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-11-18 03:00:53 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 03:00:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 03:00:56 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 03:00:56 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 03:00:56 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 03:00:56 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 03:00:56 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 03:00:56 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 03:00:56 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 03:00:56 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 03:05:42 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 03:05:42 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 03:05:42 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 03:05:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 03:05:42 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 03:05:42 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 03:05:42 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 03:05:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 03:05:42 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 03:05:42 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 03:05:42 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 03:05:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 03:05:42 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 03:05:42 Debug: duration=1 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 03:07:10 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 03:07:10 Debug: duration=1 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 03:10:27 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 03:10:27 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 03:10:27 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 03:10:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 03:10:27 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 03:10:27 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 03:10:27 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 03:10:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 03:10:27 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 03:10:27 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 03:10:27 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 03:10:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 03:10:27 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 03:10:27 Debug: duration=1 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 03:13:01 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 03:13:01 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 03:13:01 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 03:13:01 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 03:13:01 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 03:13:01 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 03:13:01 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 03:13:01 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 03:13:01 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 03:13:01 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 03:13:01 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 03:13:01 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 03:13:01 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 03:13:01 Debug: duration=1 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 03:15:45 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 03:15:45 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-18 03:15:45 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 03:15:45 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 03:15:45 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 03:15:45 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 03:15:45 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 03:15:45 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 03:15:45 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 03:15:45 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 03:15:45 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 03:15:45 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 03:15:45 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 03:15:45 Debug: duration=1 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 03:16:26 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 03:16:26 Debug: duration=1 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 03:45:48 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 03:45:48 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-11-18 03:45:48 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 03:45:48 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 03:45:48 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-18 03:45:49 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 03:45:49 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 03:45:49 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 03:45:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 03:45:49 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 03:45:49 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 03:45:49 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 03:45:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 03:45:49 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 03:45:49 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 03:45:49 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 03:45:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 03:45:49 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 03:45:49 Debug: duration=1 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 03:50:07 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 03:50:07 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 03:50:07 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 03:50:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 03:50:07 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 03:50:07 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 03:50:07 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 03:50:07 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 03:50:07 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 03:50:07 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 03:50:07 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 03:50:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 03:50:07 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 03:50:07 Debug: duration=1 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 03:50:49 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 03:50:49 Debug: duration=1 rows=0 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 03:50:50 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 03:50:50 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 03:50:50 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 03:50:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 03:50:50 Debug: duration=1 rows=69 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE subsubjects.name like '%s%'
2020-11-18 03:50:56 Debug: duration=1 rows=40 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE subsubjects.name like '%c%'
2020-11-18 03:51:13 Debug: duration=1 rows=5 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE subsubjects.name like '%hom%'
2020-11-18 03:51:14 Debug: duration=1 rows=5 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE subsubjects.name like '%home%'
2020-11-18 03:51:17 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE subsubjects.name like '%43%'
2020-11-18 04:03:03 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 04:03:03 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 04:03:03 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 04:03:03 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 04:03:03 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 04:03:03 Debug: duration=4 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 04:03:03 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 04:03:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 04:03:03 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 04:03:03 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 04:03:03 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 04:03:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 04:03:03 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 04:03:03 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 04:03:10 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 04:03:10 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 04:03:10 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 04:03:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 04:03:10 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE subsubjects.name like '%as%'
2020-11-18 04:03:17 Debug: duration=1 rows=5 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE subsubjects.name like '%home%'
2020-11-18 04:04:33 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 04:04:33 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 04:04:48 Debug: duration=1 rows=37 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE subsubjects.name like '%h%'
2020-11-18 04:04:48 Debug: duration=1 rows=5 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE subsubjects.name like '%home%'
2020-11-18 04:05:00 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (2)
2020-11-18 04:05:00 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files WHERE Files.id in (10)
2020-11-18 04:05:00 Debug: duration=0 rows=0 BEGIN
2020-11-18 04:05:00 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 04:05:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-11-18 04:05:00 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 04:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 04:05:00 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 2 LIMIT 1
2020-11-18 04:05:00 Debug: duration=1 rows=1 INSERT INTO orders (user_id, subsubject_id, title, slug, body, published, created, modified) VALUES (2, 43, 'Achats de meuble', 'Achats-de-meuble', 'Kit d''assemblage de meuble', 1, '2020-11-18 04:05:00', '2020-11-18 04:05:00')
2020-11-18 04:05:00 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-18 04:05:00 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-18 04:05:00 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-18 04:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-18 04:05:00 Debug: duration=2 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 14 AND tag_id = 2)
2020-11-18 04:05:00 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 14
2020-11-18 04:05:00 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM orders_tags OrdersTags WHERE (OrdersTags.order_id = 14 AND OrdersTags.tag_id = 2) LIMIT 1
2020-11-18 04:05:00 Debug: duration=0 rows=1 INSERT INTO orders_tags (order_id, tag_id) VALUES (14, 2)
2020-11-18 04:05:00 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-18 04:05:00 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-18 04:05:00 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-18 04:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-18 04:05:00 Debug: duration=1 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE (order_id = 14 AND file_id = 10)
2020-11-18 04:05:00 Debug: duration=0 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE OrdersFiles.order_id = 14
2020-11-18 04:05:00 Debug: duration=0 rows=1 INSERT INTO orders_files (order_id, file_id) VALUES (14, 10)
2020-11-18 04:05:00 Debug: duration=0 rows=0 COMMIT
2020-11-18 04:05:01 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 04:05:01 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14)
2020-11-18 04:05:01 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14)
2020-11-18 04:05:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 04:05:21 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 04:05:21 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 04:05:21 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 04:05:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 04:05:21 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-18 04:05:22 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-11-18 04:05:22 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-18 04:05:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-18 04:05:22 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 04:05:22 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 04:05:22 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 04:05:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 04:05:22 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 04:05:22 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 04:05:22 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 04:05:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 04:05:22 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-18 04:05:22 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (14)
2020-11-18 04:05:22 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14)
2020-11-18 04:05:22 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14)
2020-11-18 04:05:54 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 04:05:54 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 04:05:57 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 04:05:57 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14)
2020-11-18 04:05:57 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14)
2020-11-18 04:05:57 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 04:06:02 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-18 04:06:02 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (14)
2020-11-18 04:06:02 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14)
2020-11-18 04:06:02 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14)
2020-11-18 04:06:06 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 04:06:06 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14)
2020-11-18 04:06:06 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14)
2020-11-18 04:06:06 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 04:06:18 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-18 04:06:18 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (14)
2020-11-18 04:06:18 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14)
2020-11-18 04:06:18 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14)
2020-11-18 04:06:53 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 04:06:53 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14)
2020-11-18 04:06:53 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14)
2020-11-18 04:06:53 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 04:07:02 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-18 04:07:02 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (14)
2020-11-18 04:07:02 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-18 04:07:02 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-18 04:07:02 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-18 04:07:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-18 04:07:02 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14)
2020-11-18 04:07:02 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-18 04:07:02 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-18 04:07:02 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-18 04:07:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-18 04:07:02 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14)
2020-11-18 04:07:09 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 04:07:09 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 04:07:12 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 04:07:12 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-11-18 04:07:12 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 04:07:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 04:07:12 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 04:07:12 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14)
2020-11-18 04:07:12 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14)
2020-11-18 04:07:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 04:07:14 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-18 04:07:14 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (14)
2020-11-18 04:07:14 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14)
2020-11-18 04:07:14 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14)
2020-11-18 04:22:05 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 04:22:05 Debug: duration=5 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 04:22:05 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 04:22:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 04:22:05 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 04:22:05 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 04:22:05 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 04:22:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 04:22:05 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id` FROM selections Selections LIMIT 200
2020-11-18 04:26:02 Debug: duration=4 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 04:26:02 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 04:26:02 Debug: duration=24 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 04:26:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 04:26:02 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id` FROM selections Selections LIMIT 200
2020-11-18 04:26:19 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 04:26:19 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 04:26:19 Debug: duration=22 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 04:26:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 04:26:19 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id` FROM selections Selections LIMIT 200
2020-11-18 04:35:35 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 04:35:35 Debug: duration=4 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 04:35:35 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 04:35:35 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 04:35:35 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id` FROM selections Selections LIMIT 200
2020-11-18 04:35:47 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 04:35:48 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 04:35:48 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 04:35:48 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 04:35:48 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id` FROM selections Selections LIMIT 200
2020-11-18 04:36:29 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id` FROM selections Selections LIMIT 200
2020-11-18 04:39:40 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 04:39:40 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 04:39:40 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 04:39:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 04:39:40 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 04:39:40 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 04:39:40 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 04:39:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 04:39:40 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id` FROM selections Selections LIMIT 200
2020-11-18 04:40:23 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id` FROM selections Selections LIMIT 200
2020-11-18 04:43:00 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 04:43:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 04:43:00 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 04:43:00 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 04:43:00 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 04:43:00 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 04:43:00 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 04:43:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 04:43:00 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 04:43:00 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 04:43:00 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 04:43:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 04:43:00 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id` FROM departments Departments LIMIT 200
2020-11-18 04:43:00 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id` FROM selections Selections LIMIT 200
2020-11-18 04:53:36 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 04:53:36 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 04:53:36 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 04:53:36 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 04:53:36 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 04:53:36 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 04:53:36 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 04:53:36 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 04:53:36 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 04:53:36 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 04:53:36 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 04:53:36 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 04:53:36 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id` FROM departments Departments LIMIT 200
2020-11-18 04:53:36 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id` FROM selections Selections LIMIT 200
2020-11-18 04:55:58 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 04:55:58 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 04:55:58 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 04:55:58 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 04:59:14 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 04:59:14 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 04:59:14 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 04:59:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 05:01:24 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 05:01:24 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 05:01:24 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 05:01:24 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 05:03:58 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 05:03:58 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 05:03:58 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 05:03:58 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 05:04:11 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 05:04:11 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 05:04:11 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 05:04:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 05:04:11 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:04:11 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:04:11 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:04:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:04:11 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-18 05:04:11 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-18 05:04:15 Debug: duration=2 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:04:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-18 05:04:19 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-18 05:04:19 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-18 05:04:25 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:04:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 05:07:07 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 05:07:07 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 05:07:07 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 05:07:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 05:07:07 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 05:07:07 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 05:07:07 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 05:07:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 05:08:26 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-18 05:08:38 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:08:38 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 05:08:40 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:08:40 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:08:40 Debug: duration=22 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:08:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:08:40 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-18 05:08:40 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:08:41 Debug: duration=2 rows=99 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:08:41 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-18 05:08:42 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-18 05:08:56 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:08:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 05:08:58 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-18 05:08:58 Debug: duration=1 rows=99 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects LIMIT 200
2020-11-18 05:09:02 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-18 05:09:16 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 05:09:16 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 05:09:16 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 05:09:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 05:09:16 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 05:09:16 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 05:09:16 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 05:09:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 05:09:16 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:09:16 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 05:09:19 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 1 LIMIT 1
2020-11-18 05:09:19 Debug: duration=1 rows=3 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (1)
2020-11-18 05:09:24 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-18 05:09:24 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:09:24 Debug: duration=1 rows=99 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:09:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-18 05:09:27 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-18 05:09:27 Debug: duration=0 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-18 05:15:50 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 05:15:50 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-18 05:15:50 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 05:15:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 05:15:50 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 05:15:50 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 05:15:50 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 05:15:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 05:15:50 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 05:15:50 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 05:15:50 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 05:15:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 05:15:50 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 05:15:50 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 05:15:57 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:15:57 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:15:57 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:15:57 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:15:57 Debug: duration=1 rows=69 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%s%'
2020-11-18 05:16:50 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%book%'
2020-11-18 05:19:07 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:19:07 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:19:07 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:19:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:19:07 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%book%'
2020-11-18 05:19:09 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%1%'
2020-11-18 05:19:23 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%books%'
2020-11-18 05:19:29 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%1%'
2020-11-18 05:23:11 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 05:23:11 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 05:23:12 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 05:23:12 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 05:23:12 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 05:23:12 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 05:23:12 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 05:23:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 05:23:12 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 05:23:12 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 05:23:12 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 05:23:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 05:23:12 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 05:23:12 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 05:23:16 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:23:16 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:23:16 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:23:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:23:16 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%book%'
2020-11-18 05:23:17 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%books%'
2020-11-18 05:23:28 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%1%'
2020-11-18 05:23:31 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%books%'
2020-11-18 05:23:33 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%1%'
2020-11-18 05:23:33 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%1%'
2020-11-18 05:25:00 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 05:25:00 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 05:25:00 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%1%'
2020-11-18 05:25:03 Debug: duration=1 rows=27 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%b%'
2020-11-18 05:26:01 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:26:01 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:26:01 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:26:01 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:26:01 Debug: duration=1 rows=69 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%s%'
2020-11-18 05:26:02 Debug: duration=1 rows=27 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%b%'
2020-11-18 05:26:59 Debug: duration=1 rows=27 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%b%'
2020-11-18 05:28:22 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 05:28:22 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 05:28:22 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 05:28:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 05:28:22 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 05:28:22 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 05:28:22 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 05:28:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 05:28:22 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 05:28:22 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 05:28:22 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 05:28:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 05:28:22 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 05:28:22 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 05:28:22 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:28:22 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:28:22 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:28:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:28:22 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%1%'
2020-11-18 05:28:25 Debug: duration=1 rows=27 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%b%'
2020-11-18 05:28:29 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 05:28:29 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2020-11-18 05:28:29 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 05:28:29 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 05:28:29 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 05:28:29 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-18 05:28:29 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-18 05:28:29 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-18 05:28:29 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-18 05:28:29 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14)
2020-11-18 05:28:29 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-18 05:28:29 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-18 05:28:29 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-18 05:28:29 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-18 05:28:29 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14)
2020-11-18 05:28:29 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 05:28:31 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 05:28:31 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 05:28:35 Debug: duration=1 rows=37 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%h%'
2020-11-18 05:28:35 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%ho,%'
2020-11-18 05:28:37 Debug: duration=1 rows=15 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%ho%'
2020-11-18 05:31:34 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:31:34 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:31:34 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:31:34 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:31:34 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%27%'
2020-11-18 05:31:35 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 05:31:35 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 05:31:35 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 05:31:35 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 05:31:35 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 05:31:35 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 05:31:35 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 05:31:35 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 05:31:35 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 05:31:35 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 05:31:35 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 05:31:35 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 05:31:35 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 05:31:35 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 05:31:38 Debug: duration=1 rows=64 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%a%'
2020-11-18 05:31:39 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%6%'
2020-11-18 05:36:36 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 05:36:36 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 05:36:36 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 05:36:36 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 05:36:36 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 05:36:36 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 05:36:36 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 05:36:36 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 05:36:36 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 05:36:36 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 05:36:36 Debug: duration=22 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 05:36:36 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 05:36:36 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 05:36:36 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 05:36:36 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:36:36 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:36:36 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:36:36 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:36:36 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%6%'
2020-11-18 05:36:39 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%sa%'
2020-11-18 05:36:52 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%=%'
2020-11-18 05:36:55 Debug: duration=1 rows=37 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%h%'
2020-11-18 05:40:05 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 05:40:05 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-18 05:40:05 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 05:40:05 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 05:40:05 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 05:40:05 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 05:40:05 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 05:40:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 05:40:05 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 05:40:05 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 05:40:05 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 05:40:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 05:40:05 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 05:40:05 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 05:40:07 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 05:40:07 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 05:40:21 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 05:40:21 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 05:40:24 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:40:24 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:40:24 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:40:24 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:40:24 Debug: duration=1 rows=37 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%h%'
2020-11-18 05:40:32 Debug: duration=1 rows=37 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%h%'
2020-11-18 05:40:34 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%Children Books%'
2020-11-18 05:40:50 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (2)
2020-11-18 05:40:50 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files WHERE Files.id in (3)
2020-11-18 05:40:50 Debug: duration=0 rows=0 BEGIN
2020-11-18 05:40:50 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 05:40:50 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-11-18 05:40:50 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 05:40:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 05:40:50 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 2 LIMIT 1
2020-11-18 05:40:50 Debug: duration=3 rows=0 INSERT INTO orders (user_id, subsubject_id, title, slug, body, published, created, modified) VALUES (2, 3, 'Achats de meuble', 'Achats-de-meuble', 'test', 1, '2020-11-18 05:40:50', '2020-11-18 05:40:50')
2020-11-18 05:40:50 Debug: duration=0 rows=0 ROLLBACK
2020-11-18 05:42:13 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 05:42:13 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 05:42:13 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 05:42:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 05:42:13 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 05:42:13 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 05:42:13 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 05:42:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 05:42:13 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 05:42:13 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 05:42:13 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 05:42:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 05:42:13 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 05:42:13 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 05:42:22 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%hea%'
2020-11-18 05:42:32 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (1)
2020-11-18 05:42:32 Debug: duration=0 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files WHERE Files.id in (9)
2020-11-18 05:42:32 Debug: duration=0 rows=0 BEGIN
2020-11-18 05:42:32 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 2 LIMIT 1
2020-11-18 05:42:32 Debug: duration=1 rows=1 INSERT INTO orders (user_id, subsubject_id, title, slug, body, published, created, modified) VALUES (2, 64, 'Un test kid', 'Un-test-kid', 'Test kit for life', 1, '2020-11-18 05:42:32', '2020-11-18 05:42:32')
2020-11-18 05:42:32 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-18 05:42:33 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-18 05:42:33 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-18 05:42:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-18 05:42:33 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 16 AND tag_id = 1)
2020-11-18 05:42:33 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 16
2020-11-18 05:42:33 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM orders_tags OrdersTags WHERE (OrdersTags.order_id = 16 AND OrdersTags.tag_id = 1) LIMIT 1
2020-11-18 05:42:33 Debug: duration=0 rows=1 INSERT INTO orders_tags (order_id, tag_id) VALUES (16, 1)
2020-11-18 05:42:33 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-18 05:42:33 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-18 05:42:33 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-18 05:42:33 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-18 05:42:33 Debug: duration=1 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE (order_id = 16 AND file_id = 9)
2020-11-18 05:42:33 Debug: duration=0 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE OrdersFiles.order_id = 16
2020-11-18 05:42:33 Debug: duration=0 rows=1 INSERT INTO orders_files (order_id, file_id) VALUES (16, 9)
2020-11-18 05:42:33 Debug: duration=0 rows=0 COMMIT
2020-11-18 05:42:33 Debug: duration=1 rows=2 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 05:42:33 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14,16)
2020-11-18 05:42:33 Debug: duration=2 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14,16)
2020-11-18 05:42:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 05:46:19 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 05:46:19 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 05:46:19 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 05:46:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 05:46:19 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 05:46:19 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 05:46:19 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 05:46:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 05:46:19 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:46:19 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:46:19 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:46:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:46:19 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-18 05:46:19 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-18 05:47:01 Debug: duration=0 rows=0 BEGIN
2020-11-18 05:47:01 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-18 05:47:01 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM selections Selections WHERE Selections.id = 1 LIMIT 1
2020-11-18 05:47:01 Debug: duration=1 rows=1 INSERT INTO subsubjects (department_id, selection_id, code, name) VALUES (1, 1, 'BK1050', 'Harry Potter')
2020-11-18 05:47:01 Debug: duration=0 rows=0 COMMIT
2020-11-18 05:47:01 Debug: duration=2 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:47:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-18 05:47:25 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:47:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 05:47:28 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:47:28 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-18 05:48:12 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 05:48:12 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 05:48:12 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 05:48:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 05:48:12 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) WHERE Subsubjects.id = 1 LIMIT 1
2020-11-18 05:48:12 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.subsubject_id in (1)
2020-11-18 05:48:14 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:48:14 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-18 05:49:17 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:49:17 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:49:17 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:49:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:49:17 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 05:49:17 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 05:49:17 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 05:49:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 05:49:17 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 05:49:17 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 05:49:17 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 05:49:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 05:49:17 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:49:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-18 05:49:45 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:49:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-18 05:49:47 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 1 LIMIT 1
2020-11-18 05:49:47 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (1)
2020-11-18 05:49:48 Debug: duration=2 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:49:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-18 05:49:58 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:49:58 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-18 05:50:07 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:50:07 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-18 05:50:22 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 05:50:22 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 05:50:22 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 05:50:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 05:50:22 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) WHERE Subsubjects.id = 1 LIMIT 1
2020-11-18 05:50:22 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.subsubject_id in (1)
2020-11-18 05:50:42 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) WHERE Subsubjects.id = 1 LIMIT 1
2020-11-18 05:50:42 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.subsubject_id in (1)
2020-11-18 05:50:55 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) WHERE Subsubjects.id = 1 LIMIT 1
2020-11-18 05:50:55 Debug: duration=0 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.subsubject_id in (1)
2020-11-18 05:50:56 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 1 LIMIT 1
2020-11-18 05:50:56 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (1)
2020-11-18 05:50:59 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) WHERE Subsubjects.id = 1 LIMIT 1
2020-11-18 05:50:59 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.subsubject_id in (1)
2020-11-18 05:51:25 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:51:25 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:51:25 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:51:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:51:25 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 05:51:25 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 05:51:25 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 05:51:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 05:51:25 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 05:51:25 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 05:51:25 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 05:51:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 05:51:25 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) WHERE Subsubjects.id = 1 LIMIT 1
2020-11-18 05:51:25 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.subsubject_id in (1)
2020-11-18 05:51:40 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) WHERE Subsubjects.id = 1 LIMIT 1
2020-11-18 05:51:40 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.subsubject_id in (1)
2020-11-18 05:52:07 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) WHERE Subsubjects.id = 1 LIMIT 1
2020-11-18 05:52:07 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.subsubject_id in (1)
2020-11-18 05:52:11 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 1 LIMIT 1
2020-11-18 05:52:11 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (1)
2020-11-18 05:52:27 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-18 05:52:27 Debug: duration=0 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-18 05:52:27 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 1 LIMIT 1
2020-11-18 05:52:27 Debug: duration=0 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (1)
2020-11-18 05:52:58 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 1 LIMIT 1
2020-11-18 05:52:58 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (1)
2020-11-18 05:53:42 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 05:53:42 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 05:53:42 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 05:53:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 05:53:42 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 05:53:42 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 05:53:42 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 05:53:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 05:53:42 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:53:42 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:53:42 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:53:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:53:42 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 1 LIMIT 1
2020-11-18 05:53:43 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (1)
2020-11-18 05:54:06 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 1 LIMIT 1
2020-11-18 05:54:06 Debug: duration=0 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (1)
2020-11-18 05:54:11 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 05:54:11 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 05:54:11 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 05:54:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 05:54:11 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) WHERE Subsubjects.id = 1 LIMIT 1
2020-11-18 05:54:11 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.subsubject_id in (1)
2020-11-18 05:54:17 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:54:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-18 05:54:26 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 4 LIMIT 1
2020-11-18 05:54:26 Debug: duration=1 rows=3 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (4)
2020-11-18 05:55:33 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-18 05:55:33 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:55:33 Debug: duration=1 rows=100 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:55:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-18 05:57:03 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 05:57:03 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 05:57:03 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 05:57:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 05:57:03 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 05:57:03 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 05:57:03 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 05:57:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 05:57:03 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 05:57:03 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 05:57:03 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 05:57:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 05:57:03 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-18 05:57:03 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:57:03 Debug: duration=1 rows=100 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:57:03 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-18 05:57:56 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-18 05:57:56 Debug: duration=0 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-18 05:57:56 Debug: duration=0 rows=8 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-18 05:58:14 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-18 05:58:14 Debug: duration=0 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-18 05:58:14 Debug: duration=1 rows=8 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-18 05:58:37 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-18 05:58:37 Debug: duration=0 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-18 05:58:37 Debug: duration=1 rows=8 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-18 05:58:42 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-18 05:58:42 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:58:42 Debug: duration=1 rows=100 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:58:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-18 05:58:48 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 2 LIMIT 1
2020-11-18 05:58:48 Debug: duration=0 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (2)
2020-11-18 05:58:48 Debug: duration=0 rows=6 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (2)
2020-11-18 05:58:57 Debug: duration=0 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-18 05:58:57 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:58:57 Debug: duration=1 rows=100 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1,2,3,4,5,6,7,8,9,10,11,12,13)
2020-11-18 05:58:57 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-18 05:58:59 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:58:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-18 05:59:00 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 05:59:00 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 05:59:00 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 05:59:00 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 05:59:00 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) WHERE Subsubjects.id = 1 LIMIT 1
2020-11-18 05:59:01 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.subsubject_id in (1)
2020-11-18 05:59:11 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 05:59:11 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 05:59:11 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 05:59:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 05:59:11 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 05:59:11 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 05:59:11 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 05:59:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 05:59:11 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:59:11 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 05:59:37 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:59:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 05:59:45 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-18 05:59:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 06:00:02 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) ORDER BY Selections.department_id asc LIMIT 20 OFFSET 0
2020-11-18 06:00:02 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 06:00:06 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) ORDER BY Selections.name asc LIMIT 20 OFFSET 0
2020-11-18 06:00:06 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 06:00:08 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) ORDER BY Selections.department_id asc LIMIT 20 OFFSET 0
2020-11-18 06:00:08 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 06:01:03 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 06:01:03 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 06:01:03 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 06:01:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 06:01:03 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 1 LIMIT 1
2020-11-18 06:01:03 Debug: duration=1 rows=4 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (1)
2020-11-18 06:01:09 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) ORDER BY Selections.department_id asc LIMIT 20 OFFSET 0
2020-11-18 06:01:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 06:01:13 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 06:01:13 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 06:01:13 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 06:01:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 06:01:13 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 06:01:13 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 06:01:13 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 06:01:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 06:01:13 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 3 LIMIT 1
2020-11-18 06:01:13 Debug: duration=1 rows=2 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (3)
2020-11-18 06:01:21 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) ORDER BY Selections.department_id asc LIMIT 20 OFFSET 0
2020-11-18 06:01:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 06:01:24 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 12 LIMIT 1
2020-11-18 06:01:24 Debug: duration=1 rows=5 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (12)
2020-11-18 06:01:31 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) ORDER BY Selections.department_id asc LIMIT 20 OFFSET 0
2020-11-18 06:01:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-18 06:01:35 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 11 LIMIT 1
2020-11-18 06:01:35 Debug: duration=0 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (11)
2020-11-18 06:02:03 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 11 LIMIT 1
2020-11-18 06:02:03 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (11)
2020-11-18 06:02:09 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 11 LIMIT 1
2020-11-18 06:02:09 Debug: duration=0 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (11)
2020-11-18 06:02:24 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) WHERE Selections.id = 11 LIMIT 1
2020-11-18 06:02:24 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.selection_id in (11)
2020-11-18 06:03:12 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 06:03:12 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 06:03:12 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 06:03:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 06:03:12 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 06:03:12 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 06:03:12 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 06:03:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 06:03:12 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 06:03:12 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 06:03:12 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 06:03:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 06:03:12 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 06:03:12 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:03:15 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 06:03:15 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-11-18 06:03:15 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 06:03:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 06:03:15 Debug: duration=1 rows=2 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 06:03:15 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-18 06:03:15 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-18 06:03:15 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-18 06:03:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-18 06:03:15 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14,16)
2020-11-18 06:03:15 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-18 06:03:15 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-18 06:03:15 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-18 06:03:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-18 06:03:15 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14,16)
2020-11-18 06:03:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 06:03:27 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-18 06:03:27 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-11-18 06:03:27 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-18 06:03:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-18 06:03:27 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-11-18 06:03:27 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-11-18 06:03:31 Debug: duration=1 rows=2 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 06:03:31 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14,16)
2020-11-18 06:03:31 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14,16)
2020-11-18 06:03:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 06:03:43 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-11-18 06:03:43 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-11-18 06:03:45 Debug: duration=1 rows=2 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 06:03:45 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14,16)
2020-11-18 06:03:45 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14,16)
2020-11-18 06:03:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 06:06:20 Debug: duration=5 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 06:06:20 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 06:06:20 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 06:06:20 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 06:06:20 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 06:06:20 Debug: duration=3 rows=1 SHOW INDEXES FROM `users`
2020-11-18 06:06:20 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 06:06:20 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 06:06:20 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 06:06:20 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 06:06:20 Debug: duration=27 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 06:06:20 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 06:06:20 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 06:06:20 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-18 06:06:20 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 06:06:20 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 06:06:21 Debug: duration=1 rows=2 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 06:06:21 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-18 06:06:21 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-18 06:06:21 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-18 06:06:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-18 06:06:21 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (14,16)
2020-11-18 06:06:21 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-18 06:06:21 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-18 06:06:21 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-18 06:06:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-18 06:06:21 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14,16)
2020-11-18 06:06:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 06:06:22 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 06:06:22 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 06:06:22 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 06:06:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 06:06:22 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 06:06:22 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 06:06:22 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 06:06:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 06:06:23 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 06:06:23 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 06:06:23 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 06:06:23 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 06:06:23 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-18 06:06:23 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-18 06:06:25 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 06:06:25 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:26:37 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 06:26:37 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 06:26:37 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 06:26:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 06:26:37 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 06:26:37 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 06:26:37 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 06:26:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 06:26:37 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 06:26:37 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 06:26:37 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 06:26:37 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 06:26:37 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 06:26:37 Debug: duration=2 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:26:39 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 06:26:39 Debug: duration=0 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:26:42 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-18 06:26:42 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-11-18 06:26:42 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-18 06:26:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-18 06:26:42 Debug: duration=2 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-18 06:26:42 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:26:51 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `users`
2020-11-18 06:26:51 Debug: duration=2 rows=1 SHOW INDEXES FROM `users`
2020-11-18 06:26:51 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 06:26:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 06:26:51 Debug: duration=1 rows=2 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 06:26:51 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-18 06:26:51 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-18 06:26:51 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-18 06:26:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-18 06:26:51 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (14,16)
2020-11-18 06:26:51 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-18 06:26:51 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-18 06:26:51 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-18 06:26:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-18 06:26:51 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14,16)
2020-11-18 06:26:51 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 06:26:52 Debug: duration=1 rows=2 SELECT Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-18 06:26:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-18 06:26:53 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-18 06:26:54 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:26:55 Debug: duration=1 rows=2 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 06:26:55 Debug: duration=2 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (14,16)
2020-11-18 06:26:55 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14,16)
2020-11-18 06:26:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 06:27:39 Debug: duration=1 rows=2 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 06:27:39 Debug: duration=1 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (14,16)
2020-11-18 06:27:39 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14,16)
2020-11-18 06:27:39 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 06:27:49 Debug: duration=1 rows=2 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 06:27:49 Debug: duration=2 rows=2 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (14,16)
2020-11-18 06:27:49 Debug: duration=1 rows=2 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (14,16)
2020-11-18 06:27:49 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 06:27:51 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 06:27:51 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 06:27:51 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 06:27:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 06:27:51 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 06:27:51 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 06:27:51 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 06:27:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 06:27:51 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 06:27:51 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 06:27:51 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 06:27:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 06:27:51 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-18 06:27:51 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-18 06:27:53 Debug: duration=2 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-18 06:27:53 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:27:55 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'lo_LA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-18 06:27:55 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:04 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 06:28:04 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:08 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-18 06:28:08 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:10 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-18 06:28:10 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:20 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-18 06:28:20 Debug: duration=0 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:22 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 06:28:22 Debug: duration=0 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:24 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-18 06:28:24 Debug: duration=0 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:26 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 06:28:26 Debug: duration=0 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:44 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 06:28:44 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 06:28:44 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 06:28:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 06:28:44 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 06:28:44 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 06:28:44 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 06:28:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 06:28:44 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 06:28:44 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 06:28:44 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 06:28:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 06:28:44 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 06:28:44 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:46 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-18 06:28:46 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-11-18 06:28:46 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-18 06:28:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-18 06:28:46 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-18 06:28:46 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:48 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-18 06:28:48 Debug: duration=0 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:50 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-18 06:28:50 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:28:53 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'lo_LA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-18 06:28:53 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-18 06:59:54 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 06:59:54 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 06:59:54 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 06:59:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 06:59:54 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-18 06:59:54 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-18 06:59:54 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 06:59:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 06:59:54 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 06:59:54 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 06:59:54 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 06:59:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 06:59:54 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 06:59:54 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 06:59:54 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 06:59:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 06:59:54 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 06:59:54 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 07:00:09 Debug: duration=0 rows=0 BEGIN
2020-11-18 07:00:09 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-18 07:00:09 Debug: duration=1 rows=0 INSERT INTO users (email, password, created, modified) VALUES ('admin@admin.com', '$2y$10$v8yv4TGo9M2aa4DFHu4yKu9GJNBIuIpGYp8Eb90gpb7eJ4oKLkuJW', '2020-11-18 07:00:09', '2020-11-18 07:00:09')
2020-11-18 07:00:09 Debug: duration=0 rows=0 ROLLBACK
2020-11-18 07:00:55 Debug: duration=2 rows=12 SHOW TABLES FROM `facture_et_paiement`
2020-11-18 07:00:55 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `roles`
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW INDEXES FROM `roles`
2020-11-18 07:00:55 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2020-11-18 07:00:55 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-18 07:00:55 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-18 07:00:55 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 07:00:55 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 07:00:55 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-18 07:00:55 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-11-18 07:00:55 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-18 07:00:55 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-18 07:00:55 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 07:00:55 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 07:00:55 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 07:00:55 Debug: duration=1 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-18 07:00:55 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-18 07:00:55 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-18 07:00:55 Debug: duration=1 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-18 07:00:55 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-18 07:00:55 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-18 07:00:55 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-18 07:00:55 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-11-18 07:00:55 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-18 07:00:55 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-18 07:00:55 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-18 07:00:55 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-18 07:00:55 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-18 07:00:55 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-18 07:00:55 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-18 07:00:55 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 07:00:55 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 07:00:55 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 07:00:55 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-18 07:00:55 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-18 07:00:55 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 07:00:55 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `roles`
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW INDEXES FROM `roles`
2020-11-18 07:00:55 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2020-11-18 07:00:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2020-11-18 07:00:55 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-18 07:00:55 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-18 07:00:55 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 07:00:55 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 07:02:00 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 07:02:00 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 07:02:00 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 07:02:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 07:02:00 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-18 07:02:00 Debug: duration=3 rows=2 SHOW INDEXES FROM `users`
2020-11-18 07:02:00 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 07:02:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 07:02:00 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 07:02:00 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 07:02:00 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 07:02:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 07:02:00 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 07:02:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-18 07:02:00 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 07:02:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 07:02:00 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 07:02:00 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 07:02:08 Debug: duration=0 rows=0 BEGIN
2020-11-18 07:02:08 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-18 07:02:08 Debug: duration=0 rows=0 INSERT INTO users (email, password, created, modified) VALUES ('admin@admin.com', '$2y$10$gq4aiyyBDE2bKbCpsqubNOzSrh3875bL1qkOyApb2n9ibIPoixsr6', '2020-11-18 07:02:08', '2020-11-18 07:02:08')
2020-11-18 07:02:08 Debug: duration=0 rows=0 ROLLBACK
2020-11-18 07:04:02 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-18 07:04:02 Debug: duration=3 rows=2 SHOW INDEXES FROM `users`
2020-11-18 07:04:02 Debug: duration=21 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 07:04:02 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 07:07:17 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-18 07:07:17 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-18 07:07:17 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-18 07:07:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-18 07:07:17 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-18 07:07:17 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-18 07:07:17 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 07:07:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 07:07:17 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-18 07:07:17 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-18 07:07:17 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-18 07:07:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-18 07:07:17 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-18 07:07:17 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-18 07:07:17 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-18 07:07:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-18 07:07:17 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-18 07:07:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-18 07:07:19 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-18 07:07:19 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-18 07:07:22 Debug: duration=4 rows=5 SHOW FULL COLUMNS FROM `roles`
2020-11-18 07:07:22 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2020-11-18 07:07:22 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2020-11-18 07:07:22 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2020-11-18 07:07:22 Debug: duration=1 rows=0 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name` FROM roles Roles LIMIT 200
2020-11-18 07:07:27 Debug: duration=1 rows=0 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name` FROM roles Roles LIMIT 200
2020-11-18 07:09:30 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-18 07:09:30 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-18 07:09:30 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-18 07:09:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-18 07:09:30 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-18 07:09:30 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-18 07:09:32 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `roles`
2020-11-18 07:09:32 Debug: duration=2 rows=1 SHOW INDEXES FROM `roles`
2020-11-18 07:09:32 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2020-11-18 07:09:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2020-11-18 07:09:32 Debug: duration=1 rows=2 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name` FROM roles Roles LIMIT 200
2020-11-18 07:09:41 Debug: duration=0 rows=0 BEGIN
2020-11-18 07:09:41 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-18 07:09:41 Debug: duration=1 rows=1 INSERT INTO users (role_id, email, password, created, modified) VALUES (1, 'admin@admin.com', '$2y$10$xr.356u4LxNeZk5nwDG1N.DbL.03jjPNlJK9h6CzsS7QpyBR/4XBa', '2020-11-18 07:09:41', '2020-11-18 07:09:41')
2020-11-18 07:09:41 Debug: duration=0 rows=0 COMMIT
2020-11-18 07:09:42 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-18 07:09:42 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-20 03:17:33 Debug: duration=29 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 03:17:33 Debug: duration=12 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 03:17:33 Debug: duration=50 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 03:17:33 Debug: duration=6 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 03:17:33 Debug: duration=6 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 03:17:33 Debug: duration=7 rows=2 SHOW INDEXES FROM `users`
2020-11-20 03:17:33 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 03:17:33 Debug: duration=5 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 03:17:33 Debug: duration=7 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 03:17:33 Debug: duration=7 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 03:17:33 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 03:17:33 Debug: duration=6 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 03:17:33 Debug: duration=6 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 03:17:33 Debug: duration=4 rows=1 SHOW INDEXES FROM `files`
2020-11-20 03:17:33 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 03:17:33 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 03:17:33 Debug: duration=20 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 03:17:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 03:19:31 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 03:19:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 03:41:36 Debug: duration=5 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 03:41:36 Debug: duration=4 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 03:41:36 Debug: duration=23 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 03:41:36 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 03:41:36 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 03:41:36 Debug: duration=3 rows=2 SHOW INDEXES FROM `users`
2020-11-20 03:41:36 Debug: duration=24 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 03:41:36 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 03:41:36 Debug: duration=4 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 03:41:36 Debug: duration=4 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 03:41:36 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 03:41:36 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 03:41:36 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 03:41:36 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-20 03:41:36 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 03:41:36 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 03:41:36 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 03:41:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 03:41:41 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 03:41:41 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 03:41:41 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 03:41:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 03:41:42 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 03:41:48 Debug: duration=2 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 03:41:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 03:41:50 Debug: duration=2 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 03:47:04 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 03:47:04 Debug: duration=4 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 03:47:04 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 03:47:04 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 03:47:04 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 05:14:50 Debug: duration=7 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 05:14:50 Debug: duration=5 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 05:14:50 Debug: duration=30 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 05:14:50 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 05:14:50 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 05:14:50 Debug: duration=3 rows=2 SHOW INDEXES FROM `users`
2020-11-20 05:14:50 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 05:14:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 05:14:50 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 05:14:50 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 05:14:50 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 05:14:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 05:14:50 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 05:14:50 Debug: duration=4 rows=1 SHOW INDEXES FROM `files`
2020-11-20 05:14:50 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 05:14:50 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 05:14:50 Debug: duration=2 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 05:14:50 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 05:14:54 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 05:14:54 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 05:14:54 Debug: duration=28 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 05:14:54 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 05:14:54 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 05:31:53 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 05:31:53 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 05:31:53 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 05:31:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 05:31:53 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 05:45:19 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 05:45:19 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 05:45:19 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 05:45:19 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 05:45:19 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 05:45:33 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 05:45:33 Debug: duration=4 rows=2 SHOW INDEXES FROM `users`
2020-11-20 05:45:33 Debug: duration=25 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 05:45:33 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 05:45:33 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-20 05:45:34 Debug: duration=5 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 05:45:34 Debug: duration=4 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 05:45:34 Debug: duration=26 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 05:45:34 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 05:45:34 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 05:45:34 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 05:45:34 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 05:45:34 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 05:45:34 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 05:45:34 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-20 05:45:34 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 05:45:34 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 05:45:34 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 05:45:34 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 05:45:37 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 05:45:45 Debug: duration=4 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 05:56:33 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 05:56:33 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 05:56:33 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 05:56:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 05:56:33 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 05:56:35 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 05:56:51 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 05:56:51 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 05:56:51 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 05:56:51 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 05:56:51 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-20 05:56:51 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 05:56:51 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 05:56:51 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 05:56:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 05:56:51 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 05:56:51 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 05:56:51 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 05:56:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 05:56:51 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 05:56:51 Debug: duration=4 rows=1 SHOW INDEXES FROM `files`
2020-11-20 05:56:51 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 05:56:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 05:56:51 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 05:56:51 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 05:56:55 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-20 05:56:55 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-20 05:56:58 Debug: duration=2 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 05:56:58 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 05:57:02 Debug: duration=2 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 05:57:02 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 05:57:10 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 05:57:10 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 05:57:10 Debug: duration=22 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 05:57:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 05:57:10 Debug: duration=1 rows=5 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%home%'
2020-11-20 05:57:26 Debug: duration=1 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (3)
2020-11-20 05:57:26 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files WHERE Files.id in (10)
2020-11-20 05:57:26 Debug: duration=0 rows=0 BEGIN
2020-11-20 05:57:26 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 3 LIMIT 1
2020-11-20 05:57:26 Debug: duration=5 rows=1 INSERT INTO orders (user_id, subsubject_id, title, slug, body, published, created, modified) VALUES (3, 43, 'Achats de meuble', 'Achats-de-meuble', 'Plusieurs pieces de meuble pour maison', 1, '2020-11-20 05:57:26', '2020-11-20 05:57:26')
2020-11-20 05:57:26 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 05:57:26 Debug: duration=8 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 05:57:26 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 05:57:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 05:57:26 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 17 AND tag_id = 3)
2020-11-20 05:57:26 Debug: duration=0 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 17
2020-11-20 05:57:26 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM orders_tags OrdersTags WHERE (OrdersTags.order_id = 17 AND OrdersTags.tag_id = 3) LIMIT 1
2020-11-20 05:57:26 Debug: duration=1 rows=1 INSERT INTO orders_tags (order_id, tag_id) VALUES (17, 3)
2020-11-20 05:57:26 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 05:57:26 Debug: duration=6 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 05:57:26 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 05:57:26 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 05:57:26 Debug: duration=2 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE (order_id = 17 AND file_id = 10)
2020-11-20 05:57:26 Debug: duration=0 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE OrdersFiles.order_id = 17
2020-11-20 05:57:26 Debug: duration=0 rows=1 INSERT INTO orders_files (order_id, file_id) VALUES (17, 10)
2020-11-20 05:57:26 Debug: duration=0 rows=0 COMMIT
2020-11-20 05:57:26 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 05:57:26 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (17)
2020-11-20 05:57:26 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (17)
2020-11-20 05:57:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 05:57:32 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-20 05:57:32 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-20 05:57:32 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (17)
2020-11-20 05:57:32 Debug: duration=0 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 05:57:32 Debug: duration=0 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 05:57:40 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-20 05:57:40 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-20 05:57:40 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (17)
2020-11-20 05:57:40 Debug: duration=0 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (3)
2020-11-20 05:57:40 Debug: duration=0 rows=0 BEGIN
2020-11-20 05:57:40 Debug: duration=2 rows=1 UPDATE orders SET title = 'Meuble assemblage' , modified = '2020-11-20 05:57:40' WHERE id = 17
2020-11-20 05:57:40 Debug: duration=0 rows=1 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 17 AND tag_id = 3)
2020-11-20 05:57:40 Debug: duration=0 rows=1 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 17
2020-11-20 05:57:40 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE OrdersFiles.order_id = 17
2020-11-20 05:57:40 Debug: duration=2 rows=1 DELETE FROM orders_files WHERE id = 7
2020-11-20 05:57:40 Debug: duration=0 rows=0 COMMIT
2020-11-20 05:57:41 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 05:57:41 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (17)
2020-11-20 05:57:41 Debug: duration=1 rows=0 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (17)
2020-11-20 05:57:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 05:57:44 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-20 05:57:44 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-20 05:57:44 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (17)
2020-11-20 05:57:44 Debug: duration=0 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 05:57:44 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 05:57:47 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-20 05:57:47 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-20 05:57:47 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (17)
2020-11-20 05:57:47 Debug: duration=0 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (3)
2020-11-20 05:57:47 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files WHERE Files.id in (3)
2020-11-20 05:57:47 Debug: duration=0 rows=0 BEGIN
2020-11-20 05:57:47 Debug: duration=1 rows=1 UPDATE orders SET modified = '2020-11-20 05:57:47' WHERE id = 17
2020-11-20 05:57:47 Debug: duration=0 rows=1 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 17 AND tag_id = 3)
2020-11-20 05:57:47 Debug: duration=0 rows=1 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 17
2020-11-20 05:57:47 Debug: duration=1 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE (order_id = 17 AND file_id = 3)
2020-11-20 05:57:47 Debug: duration=0 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE OrdersFiles.order_id = 17
2020-11-20 05:57:47 Debug: duration=0 rows=1 INSERT INTO orders_files (order_id, file_id) VALUES (17, 3)
2020-11-20 05:57:47 Debug: duration=0 rows=0 COMMIT
2020-11-20 05:57:47 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 05:57:47 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (17)
2020-11-20 05:57:47 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (17)
2020-11-20 05:57:47 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 05:57:52 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-20 05:57:52 Debug: duration=0 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'Achats-de-meuble' LIMIT 1
2020-11-20 05:57:52 Debug: duration=0 rows=0 BEGIN
2020-11-20 05:57:52 Debug: duration=1 rows=1 DELETE FROM orders_tags WHERE order_id = 17
2020-11-20 05:57:52 Debug: duration=1 rows=1 DELETE FROM orders_files WHERE order_id = 17
2020-11-20 05:57:52 Debug: duration=1 rows=1 DELETE FROM orders WHERE id = 17
2020-11-20 05:57:52 Debug: duration=0 rows=0 COMMIT
2020-11-20 05:57:53 Debug: duration=2 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 05:57:53 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 05:58:00 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 06:51:00 Debug: duration=5 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 06:51:00 Debug: duration=4 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 06:51:00 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 06:51:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 06:51:00 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 07:01:39 Debug: duration=4 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 07:01:39 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 07:01:39 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 07:01:39 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 07:01:39 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 07:01:39 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 07:01:39 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 07:01:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 07:01:39 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 07:01:39 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 07:01:39 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 07:01:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 07:01:39 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 07:01:39 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 07:01:39 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 07:01:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 07:01:39 Debug: duration=2 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 07:01:39 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 07:01:48 Debug: duration=5 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-20 07:01:48 Debug: duration=7 rows=2 SHOW INDEXES FROM `products`
2020-11-20 07:01:48 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-20 07:01:48 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-20 07:01:48 Debug: duration=2 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-11-20 07:01:48 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-11-20 07:01:51 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 07:01:51 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 07:03:08 Debug: duration=2 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-20 07:03:08 Debug: duration=2 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 07:03:09 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 07:03:11 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 07:03:11 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 07:03:11 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 07:03:11 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 07:03:11 Debug: duration=2 rows=69 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%s%'
2020-11-20 07:03:22 Debug: duration=2 rows=1 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags WHERE Tags.id in (3)
2020-11-20 07:03:22 Debug: duration=1 rows=1 SELECT Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files WHERE Files.id in (3)
2020-11-20 07:03:22 Debug: duration=0 rows=0 BEGIN
2020-11-20 07:03:22 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 3 LIMIT 1
2020-11-20 07:03:22 Debug: duration=1 rows=1 INSERT INTO orders (user_id, subsubject_id, title, slug, body, published, created, modified) VALUES (3, 1, 'test', 'test', 'test', 1, '2020-11-20 07:03:22', '2020-11-20 07:03:22')
2020-11-20 07:03:22 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 07:03:22 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 07:03:22 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 07:03:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 07:03:22 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE (order_id = 18 AND tag_id = 3)
2020-11-20 07:03:22 Debug: duration=1 rows=0 SELECT OrdersTags.order_id AS `OrdersTags__order_id`, OrdersTags.tag_id AS `OrdersTags__tag_id` FROM orders_tags OrdersTags WHERE OrdersTags.order_id = 18
2020-11-20 07:03:22 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM orders_tags OrdersTags WHERE (OrdersTags.order_id = 18 AND OrdersTags.tag_id = 3) LIMIT 1
2020-11-20 07:03:22 Debug: duration=0 rows=1 INSERT INTO orders_tags (order_id, tag_id) VALUES (18, 3)
2020-11-20 07:03:22 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 07:03:22 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 07:03:22 Debug: duration=26 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 07:03:22 Debug: duration=5 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 07:03:22 Debug: duration=1 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE (order_id = 18 AND file_id = 3)
2020-11-20 07:03:22 Debug: duration=0 rows=0 SELECT OrdersFiles.id AS `OrdersFiles__id`, OrdersFiles.order_id AS `OrdersFiles__order_id`, OrdersFiles.file_id AS `OrdersFiles__file_id` FROM orders_files OrdersFiles WHERE OrdersFiles.order_id = 18
2020-11-20 07:03:22 Debug: duration=0 rows=1 INSERT INTO orders_files (order_id, file_id) VALUES (18, 3)
2020-11-20 07:03:22 Debug: duration=0 rows=0 COMMIT
2020-11-20 07:03:22 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 07:03:22 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 07:03:22 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 07:03:22 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 07:03:32 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 07:03:32 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 07:03:32 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 07:03:32 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 07:03:32 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 07:03:32 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 07:03:32 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 07:03:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 07:03:32 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 07:03:32 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 07:03:48 Debug: duration=0 rows=0 BEGIN
2020-11-20 07:03:48 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 07:03:48 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM selections Selections WHERE Selections.id = 1 LIMIT 1
2020-11-20 07:03:48 Debug: duration=3 rows=1 INSERT INTO subsubjects (department_id, selection_id, code, name) VALUES (1, 1, 'AP100', 'Iphone')
2020-11-20 07:03:48 Debug: duration=0 rows=0 COMMIT
2020-11-20 07:03:48 Debug: duration=2 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-20 07:03:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-20 07:03:55 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.id = 101 LIMIT 1
2020-11-20 07:03:55 Debug: duration=0 rows=0 BEGIN
2020-11-20 07:03:55 Debug: duration=1 rows=1 DELETE FROM subsubjects WHERE id = 101
2020-11-20 07:03:55 Debug: duration=0 rows=0 COMMIT
2020-11-20 07:03:55 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-20 07:03:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-20 07:04:55 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 07:04:55 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 07:04:59 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 08:19:17 Debug: duration=41 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 08:19:17 Debug: duration=10 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 08:19:17 Debug: duration=28 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 08:19:17 Debug: duration=9 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 08:19:17 Debug: duration=4 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 08:19:17 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 08:19:17 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 08:19:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 08:19:17 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 08:19:17 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 08:19:17 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 08:19:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 08:29:31 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 08:29:31 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 08:29:31 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 08:29:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 08:29:31 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 08:29:31 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 08:29:31 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 08:29:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 08:29:31 Debug: duration=4 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 08:29:31 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 08:29:31 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 08:29:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 08:29:31 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 08:29:31 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 08:29:31 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 08:29:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 08:29:31 Debug: duration=12 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 08:29:31 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 08:29:31 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 08:29:31 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 08:29:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 08:29:32 Debug: duration=15 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 08:29:32 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 08:29:32 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 08:29:32 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 08:29:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 08:29:32 Debug: duration=14 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 08:29:32 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 08:32:25 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 08:32:25 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 08:32:25 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 08:32:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 08:32:25 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 08:32:25 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 08:32:25 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 08:32:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 08:32:25 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 08:32:26 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 08:32:26 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 08:32:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 08:32:26 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 08:32:26 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-20 08:32:26 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 08:32:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 08:32:26 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 08:32:26 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 08:32:26 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 08:32:26 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 08:32:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 08:32:26 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 08:32:26 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 08:32:26 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 08:32:26 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 08:32:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 08:32:26 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 08:32:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 08:32:40 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 08:32:40 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 08:32:40 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 08:32:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 08:35:40 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 08:35:40 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 08:35:40 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 08:35:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 08:35:40 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-20 08:35:40 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 08:35:40 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 08:35:40 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 08:35:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 08:35:40 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 08:35:40 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 08:35:40 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 08:35:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 08:35:40 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 08:35:40 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 08:35:40 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 08:35:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 08:35:40 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 08:35:40 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 08:35:48 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-11-20 08:35:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-11-20 08:35:50 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 08:35:50 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 08:43:07 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 08:43:07 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-20 08:43:07 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 08:43:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 08:43:07 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 08:43:07 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 08:43:07 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 08:43:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 08:43:07 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 08:43:07 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 08:43:07 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 08:43:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 08:43:07 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 08:43:07 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 08:43:10 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 08:43:10 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 08:43:10 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 08:43:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 08:43:10 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 08:43:10 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 08:43:10 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 08:43:10 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 08:43:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 08:43:10 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 08:43:10 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 08:43:10 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 08:43:10 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 08:43:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 08:43:10 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 08:43:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 08:57:33 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 08:57:33 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 08:57:33 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 08:57:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 08:57:33 Debug: duration=18 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 08:57:33 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 08:57:37 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 08:57:37 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 08:57:37 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 08:57:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 08:57:37 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 08:57:37 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 08:57:37 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 08:57:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 08:57:37 Debug: duration=0 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 08:57:37 Debug: duration=11 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-20 08:57:37 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-20 08:57:39 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 08:57:39 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 08:57:40 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 08:57:40 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 08:57:41 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 08:57:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 08:57:41 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 08:57:41 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 08:57:41 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 08:57:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 08:57:41 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 08:57:41 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 08:57:41 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 08:57:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 08:57:41 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 08:57:41 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 08:57:41 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 08:57:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 08:57:41 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 08:57:41 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 08:57:41 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 08:57:41 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 08:57:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 08:57:41 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 08:57:41 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 08:57:41 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 08:57:41 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 08:57:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 08:57:41 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 08:57:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 08:57:42 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 08:57:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 08:58:08 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 08:58:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 08:58:10 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 08:58:10 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-20 08:58:10 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-20 08:58:28 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 08:58:28 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-20 08:58:28 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-20 08:59:30 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 08:59:30 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-20 08:59:30 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-20 08:59:43 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 08:59:43 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 08:59:43 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 08:59:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 08:59:43 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 08:59:43 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 08:59:43 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 08:59:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 08:59:43 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 08:59:43 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 08:59:43 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 08:59:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 08:59:43 Debug: duration=0 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 08:59:43 Debug: duration=0 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-20 08:59:43 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-20 09:00:19 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 09:00:19 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-20 09:00:19 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-20 09:00:46 Debug: duration=2 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:00:47 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:03:39 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:03:39 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:03:39 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:03:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:03:39 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:03:39 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:04:27 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:04:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:04:58 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:04:58 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:04:59 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:04:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:07:00 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:07:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:07:00 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:07:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:07:00 Debug: duration=2 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments ORDER BY Departments.name asc LIMIT 20 OFFSET 0
2020-11-20 09:07:00 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:07:01 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments ORDER BY Departments.name asc LIMIT 20 OFFSET 0
2020-11-20 09:07:01 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:10:29 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:10:29 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:10:29 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:10:29 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:10:29 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments ORDER BY Departments.name asc LIMIT 20 OFFSET 0
2020-11-20 09:10:29 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:10:32 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments ORDER BY Departments.name asc LIMIT 20 OFFSET 0
2020-11-20 09:10:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:14:21 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:14:21 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:14:21 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:14:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:14:21 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments ORDER BY Departments.name asc LIMIT 20 OFFSET 0
2020-11-20 09:14:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:14:23 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments ORDER BY Departments.name asc LIMIT 20 OFFSET 0
2020-11-20 09:14:23 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:14:51 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments ORDER BY Departments.name asc LIMIT 20 OFFSET 0
2020-11-20 09:14:51 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:14:53 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:14:53 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:14:54 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments ORDER BY Departments.name asc LIMIT 20 OFFSET 0
2020-11-20 09:14:54 Debug: duration=9 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:14:56 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:14:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:14:58 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 09:14:58 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 09:14:58 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 09:14:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 09:14:58 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 09:14:58 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 09:14:58 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 09:14:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 09:14:58 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 09:14:58 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 09:14:58 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 09:14:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 09:14:58 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 09:14:58 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 09:14:58 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 09:14:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 09:14:59 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 09:14:59 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 09:14:59 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 09:14:59 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 09:14:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 09:14:59 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 09:14:59 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 09:14:59 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 09:14:59 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 09:14:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 09:14:59 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 09:14:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 09:15:00 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:15:00 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:18:02 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:18:02 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:18:02 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:18:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:18:02 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:18:02 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:21:40 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:21:40 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:21:40 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:21:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:21:40 Debug: duration=0 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:21:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:22:24 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:22:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:22:25 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:22:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:22:26 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:22:26 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:23:09 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:23:09 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:23:11 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:23:11 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:23:12 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:23:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:23:14 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:23:14 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:24:16 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:24:16 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:24:16 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:24:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:24:16 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:24:16 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:24:18 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:24:18 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:25:11 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:25:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:25:13 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:25:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:25:14 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:25:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:25:15 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:25:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:25:21 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:25:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:25:41 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 09:25:41 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 09:25:41 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 09:25:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 09:25:41 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 09:25:41 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 09:25:41 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 09:25:41 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 09:25:41 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 09:25:41 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 09:25:41 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 09:25:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 09:25:41 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 09:25:41 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 09:25:41 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 09:25:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 09:25:41 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 09:25:41 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 09:25:41 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 09:25:41 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 09:25:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 09:25:41 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 09:25:41 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 09:25:41 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 09:25:41 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 09:25:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 09:25:41 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 09:25:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 09:25:43 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:25:43 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:25:48 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:25:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:26:03 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:26:03 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:26:15 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:26:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:26:52 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:26:52 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:26:52 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:26:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:26:52 Debug: duration=0 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:26:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:27:08 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:27:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:27:23 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:27:23 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:27:24 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:27:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:27:41 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:27:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:28:09 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:28:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:28:10 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:28:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:28:44 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 09:28:44 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 09:28:44 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 09:28:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 09:28:44 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 09:28:44 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 09:28:44 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 09:28:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 09:28:44 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 09:28:44 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 09:28:44 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 09:28:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 09:28:44 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 09:28:44 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 09:28:44 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 09:28:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 09:28:44 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 09:28:44 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 09:28:44 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 09:28:44 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 09:28:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 09:28:44 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 09:28:44 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 09:28:44 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 09:28:44 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 09:28:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 09:28:44 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 09:28:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 09:28:50 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 09:28:50 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 09:28:50 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 09:28:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 09:28:59 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:28:59 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:28:59 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:28:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:28:59 Debug: duration=0 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:28:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:30:56 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:30:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:35:02 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:35:02 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:35:02 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:35:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:35:02 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:35:02 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:35:08 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:35:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:35:12 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:35:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:35:17 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:35:17 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:35:41 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:35:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:36:35 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:36:35 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:37:01 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:37:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:37:02 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:37:02 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:37:16 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:37:16 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:37:16 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:37:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:37:16 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:37:16 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:37:54 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:37:54 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:39:28 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:39:28 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:39:28 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:39:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:39:28 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:39:28 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:39:34 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:39:34 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:40:25 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:40:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:40:30 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:40:30 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:40:36 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:40:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:40:44 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:40:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:40:50 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:40:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:41:17 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:41:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 09:46:52 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 09:46:52 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 09:46:52 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 09:46:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 09:46:52 Debug: duration=0 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 09:46:52 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 10:07:54 Debug: duration=4 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 10:07:54 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 10:07:54 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 10:07:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 10:07:54 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 10:07:54 Debug: duration=3 rows=2 SHOW INDEXES FROM `users`
2020-11-20 10:07:54 Debug: duration=21 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 10:07:54 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 10:07:54 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 10:07:54 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 10:07:54 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 10:07:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 10:07:54 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 10:07:54 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-20 10:07:54 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 10:07:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 10:07:54 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:07:54 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 10:07:54 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 10:07:54 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 10:07:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 10:07:54 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:07:54 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 10:07:54 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 10:07:54 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 10:07:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 10:07:54 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:07:54 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:07:57 Debug: duration=5 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-20 10:07:57 Debug: duration=4 rows=2 SHOW INDEXES FROM `products`
2020-11-20 10:07:57 Debug: duration=21 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-20 10:07:57 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-20 10:07:57 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'test' LIMIT 1
2020-11-20 10:07:57 Debug: duration=13 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (18)
2020-11-20 10:07:57 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:07:57 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:10:42 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 10:10:42 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 10:10:42 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 10:10:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 10:10:42 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 10:10:42 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 10:10:42 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 10:10:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 10:10:42 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 10:10:42 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 10:10:43 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 10:10:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 10:10:43 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 10:10:43 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 10:10:43 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 10:10:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 10:10:43 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:10:43 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 10:10:43 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 10:10:43 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 10:10:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 10:10:43 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:10:43 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 10:10:43 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 10:10:43 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 10:10:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 10:10:43 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:10:43 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:10:44 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:10:44 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:10:44 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:10:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:10:47 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-20 10:10:47 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-11-20 10:10:47 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-20 10:10:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-20 10:10:47 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'test' LIMIT 1
2020-11-20 10:10:47 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (18)
2020-11-20 10:10:47 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:10:47 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:10:57 Debug: duration=1 rows=0 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = NULL LIMIT 1
2020-11-20 10:10:59 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:10:59 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:10:59 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:10:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:13:00 Debug: duration=20 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 10:13:00 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 10:13:00 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 10:13:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 10:13:00 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 10:13:00 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 10:13:00 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 10:13:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 10:13:00 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 10:13:00 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 10:13:00 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 10:13:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 10:13:00 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 10:13:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 10:13:00 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 10:13:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 10:13:01 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:13:01 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 10:13:01 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 10:13:01 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 10:13:01 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 10:13:01 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:13:01 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 10:13:01 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 10:13:01 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 10:13:01 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 10:13:01 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:13:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:16:07 Debug: duration=4 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 10:16:07 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 10:16:07 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 10:16:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 10:16:07 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 10:16:07 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 10:16:07 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 10:16:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 10:16:07 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 10:16:07 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 10:16:07 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 10:16:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 10:16:07 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 10:16:07 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 10:16:07 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 10:16:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 10:16:07 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:16:08 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 10:16:08 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 10:16:08 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 10:16:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 10:16:08 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:16:08 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 10:16:08 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 10:16:08 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 10:16:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 10:16:08 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:16:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:16:14 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:16:14 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:16:14 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:16:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:16:18 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 10:16:18 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 10:16:18 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 10:16:18 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 10:16:18 Debug: duration=0 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 10:16:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 10:16:21 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:16:21 Debug: duration=2 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:16:21 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:16:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:16:23 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:16:25 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:16:25 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:16:25 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:16:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:16:27 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 10:16:27 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 10:16:30 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:16:30 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:16:30 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:16:30 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:16:47 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-20 10:16:47 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-11-20 10:16:47 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-20 10:16:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-20 10:16:47 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'test' LIMIT 1
2020-11-20 10:16:47 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (18)
2020-11-20 10:16:47 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:16:47 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:27:40 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 10:27:40 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 10:27:40 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 10:27:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 10:27:40 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 10:27:40 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 10:27:40 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 10:27:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 10:27:40 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 10:27:40 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 10:27:40 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 10:27:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 10:27:40 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 10:27:40 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 10:27:40 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 10:27:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 10:27:40 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:27:40 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 10:27:40 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 10:27:40 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 10:27:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 10:27:40 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:27:40 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 10:27:40 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 10:27:40 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 10:27:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 10:27:40 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:27:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:27:41 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:27:41 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:27:41 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:27:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:27:48 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-20 10:27:48 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-11-20 10:27:48 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-20 10:27:48 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-20 10:27:48 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'test' LIMIT 1
2020-11-20 10:27:48 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (18)
2020-11-20 10:27:48 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:27:48 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:27:51 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:27:51 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:27:51 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:27:51 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:27:53 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 10:27:53 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 10:27:53 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 10:27:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 10:27:53 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 10:27:53 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 10:28:01 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 10:28:01 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 10:28:01 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 10:28:01 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 10:28:01 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 10:28:01 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 10:28:01 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 10:28:01 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 10:28:01 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 10:28:01 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-20 10:28:01 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-20 10:28:09 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 10:28:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 10:28:11 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 4 LIMIT 1
2020-11-20 10:28:11 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (4)
2020-11-20 10:28:11 Debug: duration=1 rows=18 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (4)
2020-11-20 10:28:13 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 10:28:13 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 10:28:18 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:28:18 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:28:18 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:28:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:29:24 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:29:24 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:29:24 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:29:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:30:39 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 10:30:39 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 10:30:39 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 10:30:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 10:30:39 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-20 10:30:39 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-20 10:31:14 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-20 10:31:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-20 10:31:16 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-20 10:31:16 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-20 10:31:23 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-20 10:31:23 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-20 10:32:38 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 10:32:38 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 10:32:38 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 10:32:38 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 10:32:38 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 10:32:38 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 10:32:38 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 10:32:38 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 10:32:38 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 10:32:38 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 10:32:38 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 10:32:38 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 10:32:38 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:32:38 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 10:32:38 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 10:32:38 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 10:32:38 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 10:32:38 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:32:38 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 10:32:38 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 10:32:38 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 10:32:38 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 10:32:38 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:32:38 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:32:42 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 10:32:42 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 10:32:43 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 10:32:43 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 10:32:43 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 10:32:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 10:32:43 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-20 10:32:43 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-20 10:32:45 Debug: duration=5 rows=5 SHOW FULL COLUMNS FROM `roles`
2020-11-20 10:32:45 Debug: duration=5 rows=1 SHOW INDEXES FROM `roles`
2020-11-20 10:32:45 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2020-11-20 10:32:45 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2020-11-20 10:32:45 Debug: duration=16 rows=2 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name` FROM roles Roles LIMIT 200
2020-11-20 10:32:47 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:32:47 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:32:47 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:32:47 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:32:48 Debug: duration=1 rows=2 SELECT Roles.id AS `Roles__id`, Roles.name AS `Roles__name` FROM roles Roles LIMIT 200
2020-11-20 10:32:49 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 10:32:49 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 10:32:51 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-20 10:32:51 Debug: duration=3 rows=2 SHOW INDEXES FROM `products`
2020-11-20 10:32:51 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-20 10:32:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-20 10:32:51 Debug: duration=2 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-11-20 10:32:51 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-11-20 10:32:52 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 10:32:52 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 10:32:53 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 10:32:53 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 10:32:53 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 10:32:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 10:32:53 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 10:32:53 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 10:32:53 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 10:32:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 10:32:53 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 10:32:53 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 10:32:53 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 10:32:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 10:32:53 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 10:32:53 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 10:32:54 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:38:30 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 10:38:30 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 10:38:30 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 10:38:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 10:38:30 Debug: duration=0 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users LIMIT 20 OFFSET 0
2020-11-20 10:38:30 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM users Users
2020-11-20 10:38:54 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 10:38:54 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 10:38:54 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 10:38:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 10:38:54 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:38:57 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:38:59 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:41:00 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 10:41:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 10:41:00 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 10:41:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 10:41:00 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:41:27 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:41:28 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:43:49 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 10:43:49 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 10:43:49 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 10:43:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 10:43:49 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:43:50 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:43:55 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:45:19 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:45:20 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:45:27 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:45:56 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 10:45:56 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 10:45:56 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 10:45:56 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 10:45:56 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:45:57 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:46:00 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:46:14 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 10:46:14 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 10:46:14 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 10:46:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 10:46:14 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 10:46:14 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 10:46:14 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 10:46:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 10:46:14 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 10:46:14 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 10:46:14 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 10:46:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 10:46:14 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 10:46:14 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 10:46:14 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 10:46:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 10:46:14 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:46:14 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 10:46:14 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 10:46:14 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 10:46:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 10:46:14 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:46:14 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 10:46:14 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 10:46:14 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 10:46:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 10:46:14 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:46:14 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:46:16 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:49:44 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 10:49:44 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 10:49:44 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 10:49:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 10:49:44 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:52:54 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 10:52:54 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 10:52:54 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 10:52:54 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 10:52:54 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:53:06 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:53:07 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:53:21 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:53:39 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:56:41 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 10:56:41 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 10:56:41 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 10:56:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 10:56:41 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:56:44 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 10:56:44 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 10:56:44 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 10:56:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 10:56:44 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 10:56:44 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 10:56:44 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 10:56:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 10:56:44 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 10:56:44 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 10:56:44 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 10:56:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 10:56:44 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 10:56:44 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 10:56:44 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 10:56:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 10:56:44 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:56:44 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 10:56:44 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 10:56:44 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 10:56:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 10:56:44 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:56:44 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 10:56:44 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 10:56:44 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 10:56:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 10:56:44 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:56:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:56:47 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 10:56:47 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 10:56:47 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 10:56:47 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 10:56:49 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:58:37 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:58:39 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:58:41 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:58:53 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 10:58:53 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 10:58:53 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 10:58:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 10:58:53 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:58:54 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 10:59:26 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:01:04 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 11:01:04 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 11:01:04 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 11:01:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 11:01:04 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:01:06 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:01:21 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:06:46 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 11:06:46 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 11:06:46 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 11:06:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 11:06:46 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:08:54 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 11:08:54 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 11:08:55 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 11:08:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 11:08:55 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:13:59 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 11:13:59 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 11:13:59 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 11:13:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 11:13:59 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:32:33 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 11:32:33 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 11:32:33 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 11:32:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 11:32:33 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:32:35 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:33:02 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:33:14 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:33:15 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 11:33:15 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 11:33:15 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 11:33:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 11:33:15 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 11:33:15 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 11:33:15 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 11:33:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 11:33:15 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 11:33:15 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 11:33:15 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 11:33:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 11:33:15 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 11:33:15 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 11:33:17 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 11:33:17 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:33:21 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 11:33:21 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:33:24 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 11:33:24 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 11:33:26 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 11:33:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:35:02 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 11:35:02 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 11:35:02 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 11:35:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 11:35:02 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 11:35:02 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:37:26 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 11:37:26 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 11:37:26 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 11:37:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 11:37:26 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 11:37:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:37:28 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments ORDER BY Departments.code asc LIMIT 20 OFFSET 0
2020-11-20 11:37:28 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:37:29 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments ORDER BY Departments.id asc LIMIT 20 OFFSET 0
2020-11-20 11:37:29 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:37:31 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 11:37:31 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 11:37:31 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 11:37:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 11:37:31 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 11:37:31 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 11:37:31 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 11:37:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 11:37:31 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 11:37:31 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-20 11:37:31 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-20 11:37:36 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments ORDER BY Departments.id asc LIMIT 20 OFFSET 0
2020-11-20 11:37:36 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:37:53 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 11:37:53 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 11:37:53 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 11:37:53 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 11:37:53 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 11:37:53 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 11:37:53 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 11:37:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 11:37:53 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 11:37:53 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 11:37:53 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 11:37:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 11:37:53 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 11:37:53 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 11:37:53 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 11:37:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 11:37:53 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 11:37:53 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 11:37:53 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 11:37:53 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 11:37:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 11:37:53 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 11:37:53 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 11:37:53 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 11:37:53 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 11:37:53 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 11:37:53 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 11:37:53 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 11:37:55 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 11:37:55 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 11:37:55 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 11:37:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 11:37:58 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:37:58 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 11:38:06 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:38:06 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 11:38:08 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:38:08 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 11:38:10 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 11:38:10 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 11:38:12 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:38:12 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 11:38:21 Debug: duration=0 rows=0 BEGIN
2020-11-20 11:38:21 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 11:38:21 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM selections Selections WHERE Selections.id = 1 LIMIT 1
2020-11-20 11:38:21 Debug: duration=5 rows=1 INSERT INTO subsubjects (department_id, selection_id, code, name) VALUES (1, 1, '442778', 'asf')
2020-11-20 11:38:21 Debug: duration=0 rows=0 COMMIT
2020-11-20 11:38:21 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-20 11:38:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-20 11:38:32 Debug: duration=1 rows=1 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.id = 102 LIMIT 1
2020-11-20 11:38:32 Debug: duration=0 rows=0 BEGIN
2020-11-20 11:38:32 Debug: duration=1 rows=1 DELETE FROM subsubjects WHERE id = 102
2020-11-20 11:38:32 Debug: duration=0 rows=0 COMMIT
2020-11-20 11:38:32 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-20 11:38:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-20 11:38:39 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 11:38:39 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 11:38:41 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:38:41 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 11:38:49 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-20 11:38:49 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-20 11:39:06 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-20 11:39:06 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-20 11:39:31 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 11:39:31 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 11:39:31 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 11:39:31 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 11:39:31 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:39:38 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 11:39:38 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 11:39:38 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 11:39:38 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 11:39:38 Debug: duration=0 rows=0 BEGIN
2020-11-20 11:39:38 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 11:39:38 Debug: duration=1 rows=1 INSERT INTO selections (department_id, code, name) VALUES (1, 'test', 'test')
2020-11-20 11:39:38 Debug: duration=0 rows=0 COMMIT
2020-11-20 11:39:39 Debug: duration=2 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-20 11:39:39 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-20 11:39:42 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.id = 28 LIMIT 1
2020-11-20 11:39:42 Debug: duration=0 rows=0 BEGIN
2020-11-20 11:39:42 Debug: duration=1 rows=1 DELETE FROM selections WHERE id = 28
2020-11-20 11:39:42 Debug: duration=0 rows=0 COMMIT
2020-11-20 11:39:42 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-20 11:39:43 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-20 11:39:44 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:39:51 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:39:53 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:40:01 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:40:04 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 11:40:04 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 11:40:04 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 11:40:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 11:40:04 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-20 11:40:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-20 11:40:07 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:40:08 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:40:08 Debug: duration=0 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 11:40:10 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:40:18 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:40:23 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-20 11:40:23 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-20 11:40:33 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:40:35 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:40:52 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:40:52 Debug: duration=0 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 11:40:55 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:40:58 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:41:03 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 11:41:03 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 11:41:03 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 11:41:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 11:41:03 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 11:41:03 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 11:41:03 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 11:41:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 11:41:03 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 11:41:03 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 11:41:03 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 11:41:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 11:41:03 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 11:41:03 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 11:41:05 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 11:41:05 Debug: duration=3 rows=2 SHOW INDEXES FROM `users`
2020-11-20 11:41:05 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 11:41:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 11:41:05 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 11:41:05 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 11:41:05 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 11:41:05 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 11:41:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 11:41:05 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 11:41:05 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 11:41:05 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 11:41:05 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 11:41:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 11:41:05 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 11:41:05 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 11:41:08 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-11-20 11:41:51 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.title AS `Orders__title` FROM orders Orders LIMIT 200
2020-11-20 11:41:54 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags LIMIT 20 OFFSET 0
2020-11-20 11:41:54 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM tags Tags
2020-11-20 11:41:55 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 11:41:55 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 11:41:55 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 11:41:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 11:43:16 Debug: duration=4 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 11:43:16 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 11:43:16 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 11:43:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 11:43:16 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 11:43:16 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 11:43:16 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 11:43:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 11:43:16 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 11:43:16 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 11:43:16 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 11:43:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 11:43:16 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 11:43:16 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 11:43:16 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 11:43:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 11:43:16 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 11:43:16 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 11:43:16 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 11:43:16 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 11:43:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 11:43:16 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 11:43:16 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 11:43:16 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 11:43:16 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 11:43:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 11:43:16 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 11:43:16 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 11:43:19 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 11:43:19 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 11:43:19 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 11:43:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 11:43:19 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 11:43:19 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 11:43:19 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 11:43:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 11:43:19 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 11:43:19 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 11:43:19 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 11:43:19 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 11:43:19 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:43:19 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 11:43:20 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 11:43:20 Debug: duration=0 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 11:43:22 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:43:26 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 11:43:26 Debug: duration=0 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 11:43:27 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:43:33 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:43:52 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 11:43:55 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 11:43:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:43:58 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 11:43:58 Debug: duration=0 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-20 11:43:58 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-20 11:44:08 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 11:44:08 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-20 11:44:08 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-20 11:44:40 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 11:44:40 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:45:23 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 11:45:23 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 11:45:23 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 11:45:23 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 11:45:23 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 11:45:23 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:45:26 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 11:45:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:47:16 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 11:47:16 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 11:47:21 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 11:47:21 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 11:47:21 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 11:47:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 11:47:21 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 11:47:21 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 11:47:21 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 11:47:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 11:47:21 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 11:47:21 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-20 11:47:21 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-20 16:10:55 Debug: duration=6 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 16:10:55 Debug: duration=8 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 16:10:55 Debug: duration=30 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 16:10:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 16:10:55 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 16:10:55 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 16:10:55 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 16:10:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 16:10:55 Debug: duration=6 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 16:10:55 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 16:10:55 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 16:10:55 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 16:10:55 Debug: duration=4 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 16:10:55 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 16:10:55 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 16:10:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 16:10:55 Debug: duration=9 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 16:10:55 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 16:10:56 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 16:10:56 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 16:10:56 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 16:10:56 Debug: duration=5 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 16:10:56 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 16:10:56 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 16:10:56 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 16:10:56 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 16:10:56 Debug: duration=4 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 16:10:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 16:16:26 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 16:16:26 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 16:16:26 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 16:16:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 16:16:26 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 16:16:26 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 16:16:26 Debug: duration=14 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 16:16:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 16:16:26 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 16:16:26 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 16:16:26 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 16:16:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 16:16:26 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 16:16:26 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 16:16:26 Debug: duration=14 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 16:16:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 16:16:26 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 16:16:26 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 16:16:26 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 16:16:26 Debug: duration=14 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 16:16:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 16:16:26 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 16:16:26 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 16:16:26 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 16:16:26 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 16:16:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 16:16:26 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 16:16:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 16:34:15 Debug: duration=7 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 16:34:15 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 16:34:15 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 16:34:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 16:34:15 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 16:34:15 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 16:34:15 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 16:34:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 16:34:15 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 16:34:15 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 16:34:15 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 16:34:15 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 16:34:15 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 16:34:15 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-20 16:34:15 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 16:34:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 16:34:15 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 16:34:15 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 16:34:15 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 16:34:15 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 16:34:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 16:34:15 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 16:34:15 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 16:34:15 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 16:34:15 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 16:34:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 16:34:15 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 16:34:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 16:34:52 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-20 16:34:52 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 16:34:52 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 16:35:02 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 16:35:02 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 16:35:02 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 16:35:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 16:35:02 Debug: duration=2 rows=5 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%home%'
2020-11-20 16:35:05 Debug: duration=1 rows=19 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%f%'
2020-11-20 16:35:12 Debug: duration=6 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 16:35:12 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 16:35:12 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 16:35:12 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 16:35:12 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 16:35:12 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 16:35:12 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 16:35:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 16:35:12 Debug: duration=9 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 16:35:12 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 16:36:20 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-20 16:36:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-20 16:36:26 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 16:36:26 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 16:36:42 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 16:36:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 16:36:46 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 16:36:46 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 16:36:48 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 16:39:30 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 16:39:30 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 16:39:30 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 16:39:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 16:39:30 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 16:40:11 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 16:40:11 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 16:40:11 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 16:40:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 16:40:11 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 16:40:11 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 16:40:11 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 16:40:11 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 16:40:11 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 16:40:11 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 16:40:24 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 16:40:24 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 16:40:24 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 16:40:24 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 16:40:24 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 16:40:24 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 16:40:24 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 16:40:24 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 16:40:24 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 16:40:24 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 16:40:24 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 16:40:24 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 16:40:24 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 16:40:24 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 16:41:11 Debug: duration=1 rows=69 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%s%'
2020-11-20 16:41:49 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 16:41:49 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 16:43:33 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 16:43:33 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 16:43:33 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 16:43:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 16:43:33 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 16:43:33 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 16:43:33 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 16:43:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 16:43:33 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 16:43:33 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 16:43:33 Debug: duration=14 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 16:43:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 16:43:33 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 16:43:33 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 16:51:33 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 16:51:33 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 16:51:33 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 16:51:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 16:51:33 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 16:51:33 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 16:51:33 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 16:51:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 16:51:33 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 16:51:33 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 16:51:33 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 16:51:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 16:51:33 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 16:51:33 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 16:54:12 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 16:54:12 Debug: duration=4 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 16:54:12 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 16:54:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 16:54:12 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 16:54:12 Debug: duration=4 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 16:54:12 Debug: duration=30 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 16:54:12 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 16:54:12 Debug: duration=4 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 16:54:12 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 16:54:12 Debug: duration=22 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 16:54:12 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 16:54:12 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 16:54:12 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 16:57:17 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 16:57:17 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 16:57:17 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 16:57:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 16:57:17 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 16:57:17 Debug: duration=4 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 16:57:17 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 16:57:17 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 16:57:17 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-20 16:57:17 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-20 16:57:20 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:00:43 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:00:43 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:00:43 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:00:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:00:43 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 17:00:43 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 17:00:43 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 17:00:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 17:00:43 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 17:00:43 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 17:00:43 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 17:00:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 17:00:43 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:00:43 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:05:04 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:05:04 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:05:04 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:05:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:05:04 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 17:05:04 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 17:05:04 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 17:05:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 17:05:04 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 17:05:04 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 17:05:05 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 17:05:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 17:05:05 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:05:05 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:05:27 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:05:27 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:06:58 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:06:58 Debug: duration=0 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:06:58 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:07:00 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 3
2020-11-20 17:07:03 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 6
2020-11-20 17:07:10 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 17:07:10 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 17:07:10 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 17:07:10 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 17:07:10 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 10
2020-11-20 17:07:26 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:07:26 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:07:26 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:07:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:07:26 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 17:07:26 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 17:07:26 Debug: duration=14 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 17:07:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 17:07:26 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:07:26 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:07:26 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:07:28 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 4
2020-11-20 17:07:37 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 7
2020-11-20 17:08:11 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:08:11 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:08:11 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:08:13 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 3
2020-11-20 17:08:19 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 9
2020-11-20 17:12:13 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:12:13 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:12:13 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:12:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:12:13 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 17:12:13 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 17:12:13 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 17:12:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 17:12:13 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 17:12:13 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 17:12:13 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 17:12:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 17:12:13 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:12:13 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:12:14 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:12:39 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:12:39 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:12:39 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:14:29 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:14:29 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:14:29 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:14:29 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:14:29 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:15:24 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 17:15:24 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 17:15:24 Debug: duration=15 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 17:15:24 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 17:15:25 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 17:15:25 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 17:15:25 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 17:15:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 17:15:25 Debug: duration=0 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:15:25 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:15:25 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:16:40 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 2
2020-11-20 17:16:42 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:16:42 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:16:42 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:16:42 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:16:42 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:16:42 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:16:43 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:16:57 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:17:01 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:19:12 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:19:12 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:19:12 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:19:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:19:12 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 17:19:12 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 17:19:12 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 17:19:12 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 17:19:12 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:19:17 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 17:19:17 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 17:19:17 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 17:19:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 17:19:17 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:19:17 Debug: duration=1 rows=27 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:19:17 Debug: duration=1 rows=3 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:19:19 Debug: duration=2 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 3
2020-11-20 17:23:47 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 17:23:47 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 17:23:47 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 17:23:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 17:23:47 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:23:47 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:23:47 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:23:47 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:23:47 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-20 17:23:47 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-20 17:23:50 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:23:53 Debug: duration=0 rows=0 BEGIN
2020-11-20 17:23:53 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-20 17:23:53 Debug: duration=1 rows=1 INSERT INTO selections (department_id, code, name) VALUES (1, 'test', 'test')
2020-11-20 17:23:53 Debug: duration=0 rows=0 COMMIT
2020-11-20 17:23:53 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-20 17:23:53 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-20 17:23:55 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 17:23:55 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 17:23:55 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 17:23:55 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 17:23:55 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:23:55 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:23:55 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:23:57 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 2
2020-11-20 17:24:01 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-20 17:24:01 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-20 17:24:07 Debug: duration=1 rows=19 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 80
2020-11-20 17:24:07 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-20 17:24:17 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-20 17:24:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-20 17:24:26 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:24:26 Debug: duration=0 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:24:27 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:24:32 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-20 17:24:32 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-20 17:24:39 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:24:41 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-20 17:24:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-20 17:24:43 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:24:43 Debug: duration=0 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:24:43 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:24:43 Debug: duration=0 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:24:44 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:24:45 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:24:52 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:24:54 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:24:56 Debug: duration=2 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-20 17:24:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-20 17:24:57 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:25:02 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:25:02 Debug: duration=0 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:25:03 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:42:43 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 17:42:43 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 17:42:43 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 17:42:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 17:42:43 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-20 17:42:43 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-20 17:42:43 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-20 17:42:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-20 17:42:43 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 17:42:43 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 17:42:43 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 17:42:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 17:42:43 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 17:42:43 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 17:42:43 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 17:42:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 17:42:43 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-20 17:42:43 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-20 17:42:43 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-20 17:42:43 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-20 17:42:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-20 17:42:43 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-20 17:42:43 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-20 17:42:43 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-20 17:42:43 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-20 17:42:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-20 17:42:43 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-20 17:42:43 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-20 17:42:49 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-20 17:42:49 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 17:42:49 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 17:42:55 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 17:42:55 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 17:42:59 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 17:42:59 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 17:43:00 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:43:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:43:00 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:43:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:43:00 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 17:43:00 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 17:43:00 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 17:43:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 17:43:00 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 17:43:00 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 17:43:00 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 17:43:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 17:43:00 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:43:00 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:43:00 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:43:04 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 4
2020-11-20 17:43:06 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 8
2020-11-20 17:43:08 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 9
2020-11-20 17:43:10 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 17:43:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 17:43:17 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:43:17 Debug: duration=0 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:43:17 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:43:22 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:43:36 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:43:36 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:43:37 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:43:38 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 3
2020-11-20 17:43:50 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 17:43:50 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 17:43:53 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 17:43:53 Debug: duration=0 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 17:43:56 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:43:58 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:43:58 Debug: duration=0 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:43:59 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:44:02 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 9
2020-11-20 17:44:08 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 11
2020-11-20 17:44:10 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 13
2020-11-20 17:44:13 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 4
2020-11-20 17:44:14 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 5
2020-11-20 17:44:17 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 6
2020-11-20 17:44:48 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:44:48 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:44:49 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:44:50 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 17:44:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 17:44:53 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 17:44:53 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 17:45:03 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:45:03 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:45:03 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:45:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:45:03 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 17:45:03 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 17:45:03 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 17:45:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 17:45:03 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 17:45:03 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 17:45:03 Debug: duration=15 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 17:45:03 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 17:45:03 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:45:03 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:45:03 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:45:12 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 2
2020-11-20 17:45:22 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 17:45:22 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 17:45:24 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 2 LIMIT 1
2020-11-20 17:45:24 Debug: duration=0 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (2)
2020-11-20 17:45:24 Debug: duration=1 rows=6 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (2)
2020-11-20 17:45:32 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 2 LIMIT 1
2020-11-20 17:45:32 Debug: duration=0 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (2)
2020-11-20 17:45:32 Debug: duration=1 rows=6 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (2)
2020-11-20 17:45:34 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 17:45:34 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 17:45:34 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 17:45:34 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 17:45:35 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 17:45:40 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-20 17:45:40 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-20 17:45:40 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-20 17:45:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-20 17:45:40 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-20 17:45:40 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-20 17:45:40 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-20 17:45:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-20 17:45:40 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-20 17:45:40 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-20 17:45:40 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-20 17:45:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-20 17:45:40 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 17:45:40 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 17:45:42 Debug: duration=1 rows=0 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%sd%'
2020-11-20 17:45:44 Debug: duration=1 rows=69 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%s%'
2020-11-20 17:45:50 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 17:45:50 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 17:45:51 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:46:00 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:46:02 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 17:46:02 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 17:46:04 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:46:05 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-20 17:46:05 Debug: duration=0 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-20 17:46:07 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:47:41 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:47:41 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:47:41 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:47:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:47:41 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:47:50 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:56:41 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:56:41 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:56:41 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:56:41 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:56:41 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 17:58:58 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 17:58:58 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 17:58:58 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 17:58:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 17:58:59 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 18:00:48 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 18:00:48 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 18:00:48 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 18:00:48 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 18:00:48 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 18:00:48 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 18:00:48 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 18:00:48 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 18:00:48 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 18:00:48 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 18:00:49 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 18:01:01 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 18:01:01 Debug: duration=5 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 18:01:01 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 18:01:01 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 18:01:01 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 18:01:12 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 18:01:12 Debug: duration=0 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 18:01:13 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 18:01:18 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-20 18:01:18 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-20 18:01:27 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 18:01:27 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 18:01:27 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 18:01:33 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-20 18:30:35 Debug: duration=5 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-20 18:30:35 Debug: duration=4 rows=2 SHOW INDEXES FROM `selections`
2020-11-20 18:30:35 Debug: duration=23 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-20 18:30:35 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-20 18:30:35 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 5
2020-11-20 18:30:38 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-20 18:30:38 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-20 18:30:38 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-20 18:30:38 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-20 18:30:38 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-20 18:30:38 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-20 18:30:38 Debug: duration=22 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-20 18:30:38 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-20 18:30:38 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-20 18:30:38 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-20 18:30:39 Debug: duration=3 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-20 18:30:43 Debug: duration=1 rows=1 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 6
2020-11-20 18:30:45 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 4
2020-11-20 18:30:47 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 9
2020-11-23 01:02:39 Debug: duration=24 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 01:02:39 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 01:02:39 Debug: duration=29 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 01:02:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 01:02:39 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 01:02:39 Debug: duration=5 rows=2 SHOW INDEXES FROM `users`
2020-11-23 01:02:39 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 01:02:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 01:02:39 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 01:02:39 Debug: duration=6 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 01:02:39 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 01:02:39 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 01:02:39 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 01:02:39 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 01:02:39 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 01:02:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 01:02:39 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 01:02:40 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 01:02:40 Debug: duration=6 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 01:02:40 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 01:02:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 01:02:40 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 01:02:40 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 01:02:40 Debug: duration=6 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 01:02:40 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 01:02:40 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 01:02:40 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 01:02:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 01:02:45 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 01:02:45 Debug: duration=9 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 01:02:45 Debug: duration=38 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 01:02:45 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 01:02:45 Debug: duration=2 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 01:02:45 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 01:02:55 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 01:13:39 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 01:13:39 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 01:13:39 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 01:13:39 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 01:13:39 Debug: duration=1 rows=13 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 01:14:20 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 01:16:22 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 01:16:22 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 01:16:22 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 01:16:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 01:16:22 Debug: duration=2 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 01:20:46 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 01:20:46 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 01:20:46 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 01:20:46 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 01:20:46 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 01:20:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 01:21:23 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 01:21:23 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 01:21:25 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-23 01:21:25 Debug: duration=6 rows=2 SHOW INDEXES FROM `selections`
2020-11-23 01:21:25 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-23 01:21:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-23 01:21:25 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-23 01:21:25 Debug: duration=6 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-23 01:21:25 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-23 01:21:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-23 01:21:25 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-23 01:21:25 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-23 01:21:25 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-23 01:21:28 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 01:21:28 Debug: duration=4 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 01:23:28 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 01:23:28 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 01:23:28 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 01:23:28 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 01:23:28 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 01:23:28 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 01:23:35 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 01:23:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 01:23:44 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 01:23:44 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 01:23:44 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 01:23:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 01:23:44 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 01:23:44 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-23 01:23:44 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 01:23:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 01:23:44 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 01:23:44 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 01:23:44 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 01:23:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 01:23:44 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 01:23:44 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-23 01:23:45 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 01:23:45 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 01:23:45 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 01:23:45 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 01:23:45 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 01:23:45 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 01:23:45 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 01:23:45 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 01:23:45 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 01:23:45 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 01:23:45 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 01:23:45 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 01:23:45 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 01:23:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 01:23:47 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 01:24:15 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 01:24:15 Debug: duration=2 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 01:24:15 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 01:24:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 01:24:17 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 01:25:06 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 01:25:09 Debug: duration=0 rows=0 BEGIN
2020-11-23 01:25:09 Debug: duration=1 rows=1 INSERT INTO departments (code, name) VALUES ('test', 'test')
2020-11-23 01:25:09 Debug: duration=0 rows=0 COMMIT
2020-11-23 01:25:09 Debug: duration=1 rows=15 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 01:25:14 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 15 LIMIT 1
2020-11-23 01:25:14 Debug: duration=0 rows=0 BEGIN
2020-11-23 01:25:14 Debug: duration=3 rows=1 DELETE FROM departments WHERE id = 15
2020-11-23 01:25:14 Debug: duration=0 rows=0 COMMIT
2020-11-23 01:25:14 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 01:25:16 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 14 LIMIT 1
2020-11-23 01:25:28 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 01:29:06 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 01:29:06 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 01:29:06 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 01:29:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 01:29:06 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 01:29:06 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-23 01:29:06 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 01:29:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 01:29:06 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 01:29:06 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 01:29:06 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 01:29:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 01:29:06 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 01:29:06 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-23 01:29:06 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 01:29:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 01:29:06 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 01:29:06 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 01:29:06 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 01:29:06 Debug: duration=16 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 01:29:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 01:29:06 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 01:29:06 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 01:29:06 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 01:29:07 Debug: duration=15 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 01:29:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 01:29:07 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 01:29:07 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 01:31:38 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 01:31:38 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 01:31:38 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 01:31:38 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 01:31:38 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 01:31:40 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-23 02:17:29 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 02:17:29 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 02:17:29 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 02:17:29 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 02:17:29 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:17:36 Debug: duration=0 rows=0 BEGIN
2020-11-23 02:17:36 Debug: duration=1 rows=1 INSERT INTO departments (code, name) VALUES ('test1', 'test1')
2020-11-23 02:17:36 Debug: duration=0 rows=0 COMMIT
2020-11-23 02:17:37 Debug: duration=1 rows=15 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:17:40 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 16 LIMIT 1
2020-11-23 02:17:42 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 16 LIMIT 1
2020-11-23 02:17:42 Debug: duration=0 rows=0 BEGIN
2020-11-23 02:17:42 Debug: duration=2 rows=1 UPDATE departments SET code = 'test12' , name = 'test12' WHERE id = 16
2020-11-23 02:17:42 Debug: duration=0 rows=0 COMMIT
2020-11-23 02:17:43 Debug: duration=1 rows=15 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:18:45 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 14 LIMIT 1
2020-11-23 02:18:45 Debug: duration=0 rows=0 BEGIN
2020-11-23 02:18:45 Debug: duration=1 rows=1 DELETE FROM departments WHERE id = 14
2020-11-23 02:18:45 Debug: duration=0 rows=0 COMMIT
2020-11-23 02:18:45 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:18:50 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:18:52 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 02:18:52 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 02:18:52 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 02:18:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 02:18:52 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 02:18:52 Debug: duration=3 rows=2 SHOW INDEXES FROM `users`
2020-11-23 02:18:52 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 02:18:52 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 02:18:52 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 02:18:52 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 02:18:52 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 02:18:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 02:18:52 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 02:18:52 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 02:18:52 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 02:18:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 02:18:52 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 02:18:52 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 02:18:52 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 02:18:52 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 02:18:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 02:18:52 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:18:52 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 02:18:52 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 02:18:52 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 02:18:52 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 02:18:52 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:18:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 02:18:54 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:19:59 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 02:19:59 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 02:19:59 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 02:19:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 02:19:59 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-23 02:19:59 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-23 02:19:59 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-23 02:19:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-23 02:19:59 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-23 02:19:59 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-23 02:19:59 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-23 02:19:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-23 02:19:59 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-23 02:19:59 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-23 02:20:00 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-23 02:20:03 Debug: duration=1 rows=2 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 2
2020-11-23 02:20:27 Debug: duration=0 rows=0 BEGIN
2020-11-23 02:20:27 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM departments Departments WHERE Departments.id = 2 LIMIT 1
2020-11-23 02:20:27 Debug: duration=1 rows=1 SELECT 1 AS `existing` FROM selections Selections WHERE Selections.id = 5 LIMIT 1
2020-11-23 02:20:27 Debug: duration=1 rows=1 INSERT INTO subsubjects (department_id, selection_id, code, name) VALUES (2, 5, 'CG1337', 'Playstation 5')
2020-11-23 02:20:27 Debug: duration=0 rows=0 COMMIT
2020-11-23 02:20:28 Debug: duration=2 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-23 02:20:28 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-23 02:20:41 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:20:41 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:20:43 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-23 02:20:43 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-23 02:20:43 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-23 02:20:48 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-23 02:20:48 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-23 02:20:48 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-23 02:20:52 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:20:52 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:20:56 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:20:56 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:21:01 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:21:01 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:21:06 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 02:21:06 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 02:21:06 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 02:21:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 02:21:06 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 02:21:06 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-23 02:21:06 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 02:21:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 02:21:06 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 02:21:06 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 02:21:06 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 02:21:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 02:21:06 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 02:21:06 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 02:21:06 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 02:21:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 02:21:06 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 02:21:06 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 02:21:06 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 02:21:06 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 02:21:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 02:21:06 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:21:06 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 02:21:06 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 02:21:06 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 02:21:06 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 02:21:06 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:21:06 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 02:21:18 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:21:25 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-23 02:21:25 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-23 02:21:26 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-23 02:21:27 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:21:39 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-23 02:21:42 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-23 02:21:43 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-23 02:21:43 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-23 02:21:49 Debug: duration=1 rows=70 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.name like '%s%'
2020-11-23 02:22:00 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 02:22:00 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 02:22:00 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 02:22:00 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 02:22:00 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:22:04 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-23 02:22:04 Debug: duration=2 rows=2 SHOW INDEXES FROM `selections`
2020-11-23 02:22:04 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-23 02:22:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-23 02:22:04 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-23 02:22:04 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-23 02:22:04 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-23 02:22:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-23 02:22:04 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-23 02:22:04 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-23 02:22:05 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-23 02:22:07 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-23 02:22:07 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-23 02:22:09 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-23 02:22:09 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-23 02:22:12 Debug: duration=1 rows=20 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name`, Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id) LIMIT 20 OFFSET 0
2020-11-23 02:22:12 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM subsubjects Subsubjects INNER JOIN selections Selections ON Selections.id = (Subsubjects.selection_id) INNER JOIN departments Departments ON Departments.id = (Subsubjects.department_id)
2020-11-23 02:22:13 Debug: duration=1 rows=20 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name`, Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id) LIMIT 20 OFFSET 0
2020-11-23 02:22:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM selections Selections INNER JOIN departments Departments ON Departments.id = (Selections.department_id)
2020-11-23 02:22:15 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:22:19 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 02:22:19 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:22:19 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:22:19 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 02:22:21 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-23 02:22:21 Debug: duration=7 rows=2 SHOW INDEXES FROM `products`
2020-11-23 02:22:21 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-23 02:22:21 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-23 02:22:21 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified`, Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id) LIMIT 20 OFFSET 0
2020-11-23 02:22:21 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM products Products INNER JOIN orders Orders ON Orders.id = (Products.order_id)
2020-11-23 02:22:26 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 02:22:26 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:22:26 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:22:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 02:22:36 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'test' LIMIT 1
2020-11-23 02:22:36 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (18)
2020-11-23 02:22:36 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:22:36 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:22:38 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 02:22:38 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:22:38 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:22:38 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 02:22:40 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'test' LIMIT 1
2020-11-23 02:22:40 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (18)
2020-11-23 02:22:40 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:22:40 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:22:43 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified` FROM orders Orders WHERE Orders.slug = 'test' LIMIT 1
2020-11-23 02:22:43 Debug: duration=1 rows=0 SELECT Products.id AS `Products__id`, Products.order_id AS `Products__order_id`, Products.name AS `Products__name`, Products.product AS `Products__product`, Products.created AS `Products__created`, Products.modified AS `Products__modified` FROM products Products WHERE Products.order_id in (18)
2020-11-23 02:22:43 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:22:43 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:34:33 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 02:34:33 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 02:34:33 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 02:34:33 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 02:34:33 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:34:35 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 02:34:35 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 02:34:35 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 02:34:35 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 02:34:35 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 02:34:35 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-23 02:34:35 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 02:34:35 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 02:34:35 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 02:34:35 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 02:34:35 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 02:34:35 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 02:34:35 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 02:34:35 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 02:34:35 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 02:34:35 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 02:34:35 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 02:34:35 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 02:34:35 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 02:34:35 Debug: duration=23 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 02:34:35 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 02:34:35 Debug: duration=2 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:34:35 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 02:34:35 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 02:34:35 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 02:34:35 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 02:34:35 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:34:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 02:34:37 Debug: duration=2 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:34:37 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:34:40 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 02:34:40 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:34:40 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:34:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 02:45:51 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 02:45:51 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 02:45:51 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 02:45:51 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 02:45:51 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:45:51 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:45:59 Debug: duration=4 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-23 02:45:59 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-23 02:45:59 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-23 02:45:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-23 02:45:59 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-23 02:45:59 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-23 02:45:59 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-23 02:45:59 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-23 02:45:59 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-23 02:45:59 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-23 02:45:59 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-23 02:49:32 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 02:49:32 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 02:49:32 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 02:49:32 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 02:49:32 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-23 02:49:32 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-23 02:49:32 Debug: duration=21 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-23 02:49:32 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-23 02:49:32 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-23 02:49:32 Debug: duration=3 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-23 02:49:32 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-23 02:49:32 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-23 02:49:32 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-23 02:49:32 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-23 02:49:32 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-23 02:49:51 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-23 02:49:51 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-23 02:49:51 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-23 02:50:30 Debug: duration=1 rows=1 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments WHERE Departments.id = 1 LIMIT 1
2020-11-23 02:50:30 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id in (1)
2020-11-23 02:50:30 Debug: duration=1 rows=7 SELECT Subsubjects.id AS `Subsubjects__id`, Subsubjects.department_id AS `Subsubjects__department_id`, Subsubjects.selection_id AS `Subsubjects__selection_id`, Subsubjects.code AS `Subsubjects__code`, Subsubjects.name AS `Subsubjects__name` FROM subsubjects Subsubjects WHERE Subsubjects.department_id in (1)
2020-11-23 02:50:34 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 02:50:34 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 02:50:34 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 02:50:34 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 02:50:34 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 02:50:34 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-23 02:50:34 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 02:50:34 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 02:50:34 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 02:50:34 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 02:50:34 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 02:50:34 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 02:50:34 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 02:50:34 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-23 02:50:34 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 02:50:34 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 02:50:34 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 02:50:34 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 02:50:34 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 02:50:34 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 02:50:34 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 02:50:34 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:50:34 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 02:50:34 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 02:50:34 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 02:50:34 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 02:50:34 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:50:34 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 02:50:35 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:50:35 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:51:32 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:51:33 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 02:51:33 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 02:51:33 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 02:51:33 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 02:51:33 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 02:51:37 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:51:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:54:13 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 02:54:13 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 02:54:13 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 02:54:13 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 02:54:13 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:54:13 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:54:15 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:54:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:54:22 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:54:22 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:54:26 Debug: duration=4 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 02:54:26 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 02:54:26 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 02:54:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 02:54:26 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 02:54:26 Debug: duration=3 rows=2 SHOW INDEXES FROM `users`
2020-11-23 02:54:26 Debug: duration=16 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 02:54:26 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 02:54:26 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 02:54:26 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 02:54:26 Debug: duration=16 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 02:54:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 02:54:26 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 02:54:26 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-23 02:54:26 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 02:54:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 02:54:26 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 02:54:26 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 02:54:26 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 02:54:26 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 02:54:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 02:54:26 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:54:26 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 02:54:26 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 02:54:26 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 02:54:26 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 02:54:26 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:54:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 02:54:27 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:54:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 02:54:44 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 02:54:44 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 02:54:44 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 02:54:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 02:54:46 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 02:54:46 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 03:03:58 Debug: duration=3 rows=13 SHOW TABLES FROM `facture_et_paiement`
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:03:58 Debug: duration=2 rows=0 SHOW INDEXES FROM `apropos`
2020-11-23 03:03:58 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:03:58 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 03:03:58 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 03:03:58 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 03:03:58 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 03:03:58 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 03:03:58 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-23 03:03:58 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-11-23 03:03:58 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-23 03:03:58 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 03:03:58 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 03:03:58 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 03:03:58 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 03:03:58 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 03:03:58 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 03:03:58 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 03:03:58 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 03:03:58 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 03:03:58 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-23 03:03:58 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-11-23 03:03:58 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-23 03:03:58 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `roles`
2020-11-23 03:03:58 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2020-11-23 03:03:58 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2020-11-23 03:03:58 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-23 03:03:58 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-23 03:03:58 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-23 03:03:58 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-23 03:03:58 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-23 03:03:58 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-23 03:03:58 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 03:03:58 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 03:03:58 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 03:03:58 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 03:03:58 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-23 03:03:58 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 03:03:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 03:04:00 Debug: duration=2 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:04:00 Debug: duration=4 rows=0 SHOW INDEXES FROM `apropos`
2020-11-23 03:04:00 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:04:00 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:04:59 Debug: duration=3 rows=13 SHOW TABLES FROM `facture_et_paiement`
2020-11-23 03:05:00 Debug: duration=2 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:05:00 Debug: duration=4 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 03:05:00 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:05:00 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 03:05:00 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 03:05:00 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 03:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 03:05:00 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 03:05:00 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 03:05:00 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 03:05:00 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 03:05:00 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-23 03:05:00 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-11-23 03:05:00 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-23 03:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-23 03:05:00 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 03:05:00 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 03:05:00 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 03:05:00 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 03:05:00 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 03:05:00 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 03:05:00 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 03:05:00 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 03:05:00 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 03:05:00 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 03:05:00 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 03:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 03:05:00 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `products`
2020-11-23 03:05:00 Debug: duration=2 rows=2 SHOW INDEXES FROM `products`
2020-11-23 03:05:00 Debug: duration=17 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'products' AND rc.TABLE_NAME = 'products'
2020-11-23 03:05:00 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'products'
2020-11-23 03:05:00 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `roles`
2020-11-23 03:05:00 Debug: duration=3 rows=1 SHOW INDEXES FROM `roles`
2020-11-23 03:05:00 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'roles' AND rc.TABLE_NAME = 'roles'
2020-11-23 03:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'roles'
2020-11-23 03:05:00 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-23 03:05:00 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-23 03:05:00 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-23 03:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-23 03:05:00 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-23 03:05:00 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-23 03:05:00 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-23 03:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-23 03:05:00 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 03:05:00 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 03:05:00 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 03:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 03:05:00 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 03:05:00 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-23 03:05:00 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 03:05:00 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 03:05:02 Debug: duration=3 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:05:02 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 03:05:02 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:05:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:06:47 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 03:06:47 Debug: duration=4 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 03:06:47 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 03:06:47 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 03:06:47 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 03:06:47 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 03:06:59 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 03:06:59 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 03:06:59 Debug: duration=19 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 03:06:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 03:06:59 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 03:06:59 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-23 03:06:59 Debug: duration=19 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 03:06:59 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 03:06:59 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 03:06:59 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 03:06:59 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 03:06:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 03:06:59 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 03:06:59 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 03:06:59 Debug: duration=28 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 03:06:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 03:06:59 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:06:59 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 03:06:59 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 03:06:59 Debug: duration=24 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 03:06:59 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 03:06:59 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:06:59 Debug: duration=2 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 03:06:59 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 03:06:59 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 03:06:59 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 03:06:59 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:06:59 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:07:02 Debug: duration=3 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:07:02 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 03:07:02 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:07:02 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:07:02 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:07:02 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:12:30 Debug: duration=3 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:12:30 Debug: duration=2 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 03:12:30 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:12:30 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:12:30 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:12:30 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:13:43 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:13:43 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:14:04 Debug: duration=4 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 03:14:04 Debug: duration=4 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 03:14:04 Debug: duration=22 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 03:14:04 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 03:14:04 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 03:14:04 Debug: duration=3 rows=2 SHOW INDEXES FROM `users`
2020-11-23 03:14:04 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 03:14:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 03:14:04 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 03:14:04 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 03:14:04 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 03:14:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 03:14:04 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 03:14:04 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 03:14:04 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 03:14:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 03:14:04 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:14:04 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 03:14:04 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 03:14:04 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 03:14:04 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 03:14:04 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:14:04 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 03:14:04 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 03:14:04 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 03:14:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 03:14:04 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:14:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:14:08 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:14:08 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:30:22 Debug: duration=4 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:30:22 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 03:30:22 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:30:22 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:30:22 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:30:22 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:32:41 Debug: duration=3 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:32:41 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 03:32:41 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:32:41 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:32:41 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:32:41 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:32:43 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 03:32:43 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 03:32:43 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 03:32:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 03:32:43 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 03:32:43 Debug: duration=3 rows=2 SHOW INDEXES FROM `users`
2020-11-23 03:32:43 Debug: duration=22 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 03:32:43 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 03:32:43 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 03:32:43 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 03:32:43 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 03:32:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 03:32:43 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 03:32:43 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 03:32:43 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 03:32:43 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 03:32:43 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:32:43 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 03:32:43 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 03:32:43 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 03:32:43 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 03:32:43 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:32:43 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 03:32:43 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 03:32:43 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 03:32:43 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 03:32:43 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:32:43 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:32:48 Debug: duration=2 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:32:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:33:43 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:33:43 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:35:15 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 03:35:15 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 03:35:15 Debug: duration=22 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 03:35:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 03:35:15 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 03:35:15 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-23 03:35:15 Debug: duration=24 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 03:35:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 03:35:15 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 03:35:15 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 03:35:15 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 03:35:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 03:35:15 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 03:35:15 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 03:35:15 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 03:35:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 03:35:15 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:35:15 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 03:35:15 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 03:35:15 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 03:35:15 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 03:35:15 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:35:16 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 03:35:16 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 03:35:16 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 03:35:16 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 03:35:16 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:35:16 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:35:17 Debug: duration=3 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:35:17 Debug: duration=2 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 03:35:17 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:35:17 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:35:17 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:35:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:35:48 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:35:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:35:49 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:35:49 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:35:49 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:35:49 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:35:52 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:35:52 Debug: duration=2 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:35:52 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:35:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:35:55 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:35:55 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:35:55 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:35:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:35:57 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:35:57 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:35:57 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:35:57 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:36:09 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:36:09 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:36:09 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:36:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:36:25 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:36:25 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:36:25 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:36:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:36:27 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:36:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:40:58 Debug: duration=5 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 03:40:58 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 03:40:58 Debug: duration=22 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 03:40:58 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 03:40:58 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 03:40:58 Debug: duration=3 rows=2 SHOW INDEXES FROM `users`
2020-11-23 03:40:58 Debug: duration=22 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 03:40:58 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 03:40:58 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 03:40:58 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 03:40:58 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 03:40:58 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 03:40:58 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 03:40:58 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 03:40:58 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 03:40:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 03:40:58 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:40:58 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 03:40:58 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 03:40:58 Debug: duration=22 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 03:40:58 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 03:40:58 Debug: duration=1 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:40:58 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 03:40:58 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 03:40:58 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 03:40:58 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 03:40:58 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:40:58 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:41:02 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 03:41:02 Debug: duration=2 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 03:41:02 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 03:41:02 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 03:41:12 Debug: duration=1 rows=1 SELECT Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM users Users WHERE Users.email = 'admin@admin.com' LIMIT 1
2020-11-23 03:41:12 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-23 03:41:12 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-23 03:45:27 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 03:45:27 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 03:45:27 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 03:45:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 03:45:27 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 03:45:27 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 03:45:27 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 03:45:27 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 03:45:27 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 03:45:27 Debug: duration=2 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 03:45:27 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 03:45:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 03:45:27 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-23 03:45:27 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-11-23 03:45:27 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-23 03:45:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-23 03:45:27 Debug: duration=2 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'lo_LA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-23 03:45:27 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-23 03:45:27 Debug: duration=3 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:45:27 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 03:45:27 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:45:27 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:45:27 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:45:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:45:58 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:45:58 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:45:59 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:45:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:46:24 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:46:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:46:47 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:46:47 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:47:01 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:47:01 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:47:27 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:47:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:47:36 Debug: duration=3 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:47:36 Debug: duration=2 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 03:47:36 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:47:36 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:47:36 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:47:37 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:48:03 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:48:03 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:48:36 Debug: duration=2 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:48:36 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:48:37 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:48:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:48:56 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 03:48:56 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-23 03:48:56 Debug: duration=17 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 03:48:56 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 03:48:56 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 03:48:56 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 03:48:56 Debug: duration=27 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 03:48:56 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 03:48:56 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 03:48:56 Debug: duration=4 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 03:48:56 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 03:48:56 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 03:48:56 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-23 03:48:56 Debug: duration=4 rows=8 SHOW INDEXES FROM `i18n`
2020-11-23 03:48:56 Debug: duration=23 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-23 03:48:56 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-23 03:48:56 Debug: duration=2 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'lo_LA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-23 03:48:56 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-23 03:49:00 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-23 03:49:00 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-23 03:49:04 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-23 03:49:04 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-23 03:52:58 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 03:52:58 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-23 03:52:58 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 03:52:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 03:52:58 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 03:52:58 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 03:52:58 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 03:52:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 03:52:58 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 03:52:58 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 03:52:58 Debug: duration=18 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 03:52:58 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 03:52:59 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-23 03:52:59 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-23 03:54:44 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 03:54:44 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 03:54:44 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 03:54:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 03:54:44 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-23 03:54:44 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-23 03:54:44 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-23 03:54:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-23 03:54:44 Debug: duration=3 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-23 03:54:44 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-23 03:54:44 Debug: duration=20 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-23 03:54:44 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-23 03:54:44 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-23 03:54:44 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-23 03:54:44 Debug: duration=2 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-23 03:56:14 Debug: duration=4 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 03:56:14 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 03:56:14 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 03:56:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 03:56:15 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:56:15 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:56:37 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 03:56:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 03:56:57 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 03:56:57 Debug: duration=2 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 03:56:57 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 03:56:57 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 03:56:57 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `selections`
2020-11-23 03:56:57 Debug: duration=3 rows=2 SHOW INDEXES FROM `selections`
2020-11-23 03:56:57 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'selections' AND rc.TABLE_NAME = 'selections'
2020-11-23 03:56:57 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'selections'
2020-11-23 03:56:57 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `subsubjects`
2020-11-23 03:56:57 Debug: duration=2 rows=3 SHOW INDEXES FROM `subsubjects`
2020-11-23 03:56:57 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'subsubjects' AND rc.TABLE_NAME = 'subsubjects'
2020-11-23 03:56:57 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'subsubjects'
2020-11-23 03:56:57 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 200
2020-11-23 03:56:57 Debug: duration=1 rows=28 SELECT Selections.id AS `Selections__id`, Selections.name AS `Selections__name` FROM selections Selections LIMIT 200
2020-11-23 03:56:57 Debug: duration=1 rows=4 SELECT Selections.id AS `Selections__id`, Selections.department_id AS `Selections__department_id`, Selections.code AS `Selections__code`, Selections.name AS `Selections__name` FROM selections Selections WHERE Selections.department_id = 1
2020-11-23 03:58:07 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 03:58:07 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-23 03:58:07 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 03:58:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 03:58:07 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 03:58:07 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 03:58:07 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 03:58:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 03:58:07 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 03:58:07 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 03:58:07 Debug: duration=23 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 03:58:07 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 03:58:07 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title` FROM tags Tags LIMIT 200
2020-11-23 03:58:07 Debug: duration=2 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-23 03:58:17 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-23 03:58:17 Debug: duration=2 rows=8 SHOW INDEXES FROM `i18n`
2020-11-23 03:58:17 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-23 03:58:17 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-23 03:58:17 Debug: duration=1 rows=3 SELECT Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) LIMIT 200
2020-11-23 03:58:17 Debug: duration=1 rows=13 SELECT Files.id AS `Files__id`, Files.name AS `Files__name` FROM files Files LIMIT 200
2020-11-23 03:59:16 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `departments`
2020-11-23 03:59:16 Debug: duration=3 rows=1 SHOW INDEXES FROM `departments`
2020-11-23 03:59:16 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'departments' AND rc.TABLE_NAME = 'departments'
2020-11-23 03:59:16 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'departments'
2020-11-23 03:59:16 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments
2020-11-23 04:00:08 Debug: duration=4 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 04:00:08 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 04:00:08 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 04:00:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 04:00:08 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 04:00:08 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-23 04:00:08 Debug: duration=20 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 04:00:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 04:00:08 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 04:00:08 Debug: duration=2 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 04:00:08 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 04:00:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 04:00:08 Debug: duration=2 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 04:00:08 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-23 04:00:08 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 04:00:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 04:00:08 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 04:00:08 Debug: duration=2 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 04:00:08 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 04:00:08 Debug: duration=23 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 04:00:08 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 04:00:08 Debug: duration=2 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (18)
2020-11-23 04:00:08 Debug: duration=4 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 04:00:08 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 04:00:08 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 04:00:08 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 04:00:08 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 04:00:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 04:00:10 Debug: duration=1 rows=14 SELECT Departments.id AS `Departments__id`, Departments.code AS `Departments__code`, Departments.name AS `Departments__name` FROM departments Departments LIMIT 20 OFFSET 0
2020-11-23 04:00:10 Debug: duration=3 rows=1 SELECT (COUNT(*)) AS `count` FROM departments Departments
2020-11-23 04:01:25 Debug: duration=4 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:01:25 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:01:25 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:01:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:01:25 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:01:25 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:01:42 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:01:42 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:02:08 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:02:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:02:16 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:02:16 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:02:24 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:02:24 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:06:13 Debug: duration=4 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:06:13 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:06:13 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:06:13 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:06:13 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:06:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:06:31 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:06:31 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:07:04 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:07:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:07:37 Debug: duration=3 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 04:07:37 Debug: duration=3 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 04:07:37 Debug: duration=17 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 04:07:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 04:07:37 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 04:07:37 Debug: duration=2 rows=2 SHOW INDEXES FROM `users`
2020-11-23 04:07:38 Debug: duration=18 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 04:07:38 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 04:07:38 Debug: duration=2 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 04:07:38 Debug: duration=4 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 04:07:38 Debug: duration=19 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 04:07:38 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 04:07:38 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 04:07:38 Debug: duration=2 rows=1 SHOW INDEXES FROM `files`
2020-11-23 04:07:38 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 04:07:38 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 04:07:38 Debug: duration=1 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 04:07:38 Debug: duration=3 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 04:07:38 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 04:07:38 Debug: duration=21 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 04:07:38 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 04:07:38 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `i18n`
2020-11-23 04:07:38 Debug: duration=3 rows=8 SHOW INDEXES FROM `i18n`
2020-11-23 04:07:38 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'i18n' AND rc.TABLE_NAME = 'i18n'
2020-11-23 04:07:38 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'i18n'
2020-11-23 04:07:38 Debug: duration=2 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified`, Tags_title_translation.id AS `Tags_title_translation__id`, Tags_title_translation.content AS `Tags_title_translation__content` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) LEFT JOIN i18n Tags_title_translation ON (Tags_title_translation.model = 'Tags' AND Tags_title_translation.field = 'title' AND Tags_title_translation.locale = 'fr_CA' AND Tags.id = (Tags_title_translation.foreign_key)) WHERE OrdersTags.order_id in (18)
2020-11-23 04:07:38 Debug: duration=3 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 04:07:38 Debug: duration=2 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 04:07:38 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 04:07:38 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 04:07:38 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 04:07:38 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 04:08:02 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:08:02 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:11:48 Debug: duration=3 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:11:48 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:11:49 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:11:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:11:49 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:11:49 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:11:59 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:11:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:12:03 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:12:03 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:14:25 Debug: duration=4 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:14:25 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:14:25 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:14:25 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:14:25 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:14:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:15:35 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:15:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:15:36 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:15:36 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:18:04 Debug: duration=4 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:18:04 Debug: duration=4 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:18:04 Debug: duration=26 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:18:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:18:04 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:18:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:18:31 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:18:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:18:32 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:18:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:18:38 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:18:38 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:19:04 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:19:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:19:11 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:19:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:19:13 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:19:13 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:19:18 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:19:18 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:19:25 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:19:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:19:31 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:19:31 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:19:39 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:19:39 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:20:28 Debug: duration=5 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:20:28 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:20:28 Debug: duration=20 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:20:28 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:20:28 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:20:28 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:20:44 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:20:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:24:19 Debug: duration=4 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:24:19 Debug: duration=2 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:24:20 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:24:20 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:24:20 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:24:20 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:24:32 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:24:32 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:27:49 Debug: duration=4 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:27:49 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:27:49 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:27:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:27:49 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:27:49 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:28:04 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:28:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:28:17 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:28:17 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:28:45 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:28:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:35:52 Debug: duration=4 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:35:52 Debug: duration=2 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:35:52 Debug: duration=18 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:35:52 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:35:52 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:35:52 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:36:40 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:36:40 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:38:14 Debug: duration=4 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:38:14 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:38:14 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:38:14 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:38:14 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:38:14 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:38:36 Debug: duration=2 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:38:36 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:39:06 Debug: duration=2 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:39:06 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:39:27 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:39:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:39:29 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:39:29 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:40:37 Debug: duration=4 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:40:37 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:40:37 Debug: duration=22 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:40:37 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:40:37 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:40:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:40:38 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:40:38 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:41:06 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:41:06 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:43:04 Debug: duration=3 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:43:04 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:43:04 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:43:04 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:43:04 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:43:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:44:50 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:44:50 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:44:56 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:44:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:45:04 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:45:04 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:45:05 Debug: duration=2 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:45:05 Debug: duration=4 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:45:05 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:45:05 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:45:05 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:45:05 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:45:09 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:45:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:46:11 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:46:11 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:47:07 Debug: duration=3 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:47:07 Debug: duration=4 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:47:07 Debug: duration=24 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:47:07 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:47:07 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:47:07 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:48:31 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:48:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:49:00 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:49:00 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:49:31 Debug: duration=3 rows=1 SHOW FULL COLUMNS FROM `apropos`
2020-11-23 04:49:31 Debug: duration=3 rows=1 SHOW INDEXES FROM `apropos`
2020-11-23 04:49:31 Debug: duration=21 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'apropos' AND rc.TABLE_NAME = 'apropos'
2020-11-23 04:49:31 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'apropos'
2020-11-23 04:49:31 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:49:31 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:49:45 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:49:45 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:49:53 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:49:53 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:49:59 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:49:59 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:50:00 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:50:00 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:50:04 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:50:04 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:50:10 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:50:10 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 04:50:37 Debug: duration=1 rows=0 SELECT Apropos.id AS `Apropos__id` FROM apropos Apropos LIMIT 20 OFFSET 0
2020-11-23 04:50:37 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM apropos Apropos
2020-11-23 07:04:33 Debug: duration=13 rows=9 SHOW FULL COLUMNS FROM `orders`
2020-11-23 07:04:33 Debug: duration=6 rows=4 SHOW INDEXES FROM `orders`
2020-11-23 07:04:33 Debug: duration=75 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders' AND rc.TABLE_NAME = 'orders'
2020-11-23 07:04:33 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'orders'
2020-11-23 07:04:33 Debug: duration=5 rows=6 SHOW FULL COLUMNS FROM `users`
2020-11-23 07:04:33 Debug: duration=5 rows=2 SHOW INDEXES FROM `users`
2020-11-23 07:04:33 Debug: duration=39 rows=1 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-11-23 07:04:33 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-11-23 07:04:33 Debug: duration=3 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-11-23 07:04:33 Debug: duration=3 rows=2 SHOW INDEXES FROM `tags`
2020-11-23 07:04:33 Debug: duration=27 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-11-23 07:04:33 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-11-23 07:04:33 Debug: duration=3 rows=6 SHOW FULL COLUMNS FROM `files`
2020-11-23 07:04:33 Debug: duration=3 rows=1 SHOW INDEXES FROM `files`
2020-11-23 07:04:33 Debug: duration=30 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'files' AND rc.TABLE_NAME = 'files'
2020-11-23 07:04:33 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'files'
2020-11-23 07:04:33 Debug: duration=3 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 07:04:33 Debug: duration=6 rows=2 SHOW FULL COLUMNS FROM `orders_tags`
2020-11-23 07:04:33 Debug: duration=3 rows=3 SHOW INDEXES FROM `orders_tags`
2020-11-23 07:04:34 Debug: duration=28 rows=2 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_tags' AND rc.TABLE_NAME = 'orders_tags'
2020-11-23 07:04:34 Debug: duration=5 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_tags'
2020-11-23 07:04:34 Debug: duration=2 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 07:04:34 Debug: duration=6 rows=3 SHOW FULL COLUMNS FROM `orders_files`
2020-11-23 07:04:34 Debug: duration=4 rows=3 SHOW INDEXES FROM `orders_files`
2020-11-23 07:04:34 Debug: duration=29 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'facture_et_paiement' AND kcu.TABLE_NAME = 'orders_files' AND rc.TABLE_NAME = 'orders_files'
2020-11-23 07:04:34 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'orders_files'
2020-11-23 07:04:34 Debug: duration=2 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 07:04:34 Debug: duration=2 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
2020-11-23 07:04:35 Debug: duration=2 rows=1 SELECT Orders.id AS `Orders__id`, Orders.user_id AS `Orders__user_id`, Orders.subsubject_id AS `Orders__subsubject_id`, Orders.title AS `Orders__title`, Orders.slug AS `Orders__slug`, Orders.body AS `Orders__body`, Orders.published AS `Orders__published`, Orders.created AS `Orders__created`, Orders.modified AS `Orders__modified`, Users.id AS `Users__id`, Users.role_id AS `Users__role_id`, Users.email AS `Users__email`, Users.password AS `Users__password`, Users.created AS `Users__created`, Users.modified AS `Users__modified` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id) LIMIT 20 OFFSET 0
2020-11-23 07:04:35 Debug: duration=3 rows=1 SELECT OrdersTags.order_id AS `Tags_CJoin__order_id`, OrdersTags.tag_id AS `Tags_CJoin__tag_id`, Tags.id AS `Tags__id`, Tags.title AS `Tags__title`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN orders_tags OrdersTags ON Tags.id = (OrdersTags.tag_id) WHERE OrdersTags.order_id in (18)
2020-11-23 07:04:35 Debug: duration=1 rows=1 SELECT OrdersFiles.id AS `Files_CJoin__id`, OrdersFiles.order_id AS `Files_CJoin__order_id`, OrdersFiles.file_id AS `Files_CJoin__file_id`, Files.id AS `Files__id`, Files.name AS `Files__name`, Files.path AS `Files__path`, Files.created AS `Files__created`, Files.modified AS `Files__modified`, Files.status AS `Files__status` FROM files Files INNER JOIN orders_files OrdersFiles ON Files.id = (OrdersFiles.file_id) WHERE OrdersFiles.order_id in (18)
2020-11-23 07:04:35 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM orders Orders INNER JOIN users Users ON Users.id = (Orders.user_id)
